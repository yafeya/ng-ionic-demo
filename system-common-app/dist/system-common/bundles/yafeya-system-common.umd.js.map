{"version":3,"file":"yafeya-system-common.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://yafeya-system-common/lib/system/xml/XObject.ts","ng://yafeya-system-common/lib/system/xml/XElement.ts","ng://yafeya-system-common/lib/system/common/Guid.ts","ng://yafeya-system-common/lib/system/common/StringBuilder.ts","ng://yafeya-system-common/lib/system/common/XmlConverter.ts","ng://yafeya-system-common/lib/system/common/Clipboard.ts","ng://yafeya-system-common/lib/system/common/JsonToken.ts","ng://yafeya-system-common/lib/system/collections/EnumerableIterator.ts","ng://yafeya-system-common/lib/system/collections/Enumerable.ts","ng://yafeya-system-common/lib/system/collections/Collection.ts","ng://yafeya-system-common/lib/system/collections/List.ts","ng://yafeya-system-common/lib/system/collections/IGrouping.ts","ng://yafeya-system-common/lib/system/collections/NamedDictionary.ts","ng://yafeya-system-common/lib/system/collections/KeyValuePair.ts","ng://yafeya-system-common/lib/system/collections/Dictionary.ts","ng://yafeya-system-common/lib/system/collections/ObservableCollection.ts","ng://yafeya-system-common/lib/system/collections/CollectionExtensions.ts","ng://yafeya-system-common/lib/system/common/WindowSizeWatcher.ts","ng://yafeya-system-common/lib/system/xml/XDocument.ts","ng://yafeya-system-common/lib/system/xml/XAttribute.ts","ng://yafeya-system-common/lib/system/command/ICommand.ts","ng://yafeya-system-common/lib/system/command/CommandRepository.ts","ng://yafeya-system-common/lib/system/Tokens.ts","ng://yafeya-system-common/lib/system/command/InvokeCommandDirective.ts","ng://yafeya-system-common/lib/system/command/CommandDescriptor.ts","ng://yafeya-system-common/lib/system/command/CommandDescriptorRepository.ts","ng://yafeya-system-common/lib/system/command/CommandDescriptorExtensions.ts","ng://yafeya-system-common/lib/system/settings/AppSettingItem.ts","ng://yafeya-system-common/lib/system/settings/AppSettings.ts","ng://yafeya-system-common/lib/system/settings/IOptionRepository.ts","ng://yafeya-system-common/lib/system/resource/ResourceDictionary.ts","ng://yafeya-system-common/lib/system/resource/ResourceHolder.ts","ng://yafeya-system-common/lib/system/logging/LogLevel.ts","ng://yafeya-system-common/lib/system/logging/Logger.ts","ng://yafeya-system-common/lib/system/logging/DefaultLoggerFactory.ts","ng://yafeya-system-common/lib/system/logging/LoggerBase.ts","ng://yafeya-system-common/lib/system/logging/debug/DebugLogger.ts","ng://yafeya-system-common/lib/system/logging/debug/DebugLoggerProvider.ts","ng://yafeya-system-common/lib/system/logging/log4js/Log4JsLogger.ts","ng://yafeya-system-common/lib/system/io/File.ts","ng://yafeya-system-common/lib/system/io/Directory.ts","ng://yafeya-system-common/lib/system/logging/log4js/Log4JsLoggerProvider.ts","ng://yafeya-system-common/lib/system/logging/LoggerFactoryExtensions.ts","ng://yafeya-system-common/lib/system/exception/LoggingExceptionHandler.ts","ng://yafeya-system-common/lib/system/net/HttpClient.ts","ng://yafeya-system-common/lib/system/utilities/ElectronUtil.ts","ng://yafeya-system-common/lib/system/services/AngularServiceProvider.ts","ng://yafeya-system-common/lib/system/services/ServiceLocator.ts","ng://yafeya-system-common/lib/system/extensions/StringExtensions.ts","ng://yafeya-system-common/lib/system/extensions/ArrayExtensions.ts","ng://yafeya-system-common/lib/system/extensions/DocumentExtensions.ts","ng://yafeya-system-common/lib/system/extensions/ObjectExtensions.ts","ng://yafeya-system-common/lib/system/extensions/Functions.ts","ng://yafeya-system-common/lib/system/action/ActionRepository.ts","ng://yafeya-system-common/lib/system/action/Action.ts","ng://yafeya-system-common/lib/system/message-mediator/MessageMediator.ts","ng://yafeya-system-common/lib/system/component/ComponentCreator.ts","ng://yafeya-system-common/lib/system/system.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {XDocument } from './XDocument';\r\n\r\nexport class XObject {\r\n    Name: string;\r\n    Value: any;\r\n    private mDocument: XDocument;\r\n\r\n    get Document() {\r\n        return this.mDocument;\r\n    }\r\n    set Document(value: XDocument) {\r\n        this.mDocument = value;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(name: string, value: any) {\r\n        this.Name = name;\r\n        this.Value = value;\r\n    }\r\n\r\n}\r\n","import { XObject } from './XObject';\r\nimport { XAttribute } from './XAttribute';\r\nimport * as Common from '../common/index';\r\n\r\nexport class XElement extends XObject {\r\n    Elements: Array<XElement> = [];\r\n    Attributes: Array<XAttribute> = [];\r\n    Parent: XElement;\r\n\r\n    constructor(name: string, value: any = null) {\r\n        super(name, value);\r\n    }\r\n\r\n    AppendChild(element: XElement): XElement {\r\n        if (!element)\r\n            throw new Error('element is null.');\r\n\r\n        this.Elements.push(element);\r\n        element.Document = this.Document;\r\n        element.Parent = this;\r\n\r\n        return this;\r\n    }\r\n    AppendAttribute(attribute: XAttribute) {\r\n        if (!attribute)\r\n            throw new Error('attribute is null.');\r\n\r\n        this.Attributes.push(attribute);\r\n        attribute.Document = this.Document;\r\n    }\r\n    ToXmlElement(doc: XMLDocument): HTMLElement {\r\n        let element = doc.createElement(this.Name);\r\n        if (this.Value) {\r\n            if (this.Name == \"base64\")\r\n                console.log(this.Value);\r\n            element.appendChild(document.createTextNode(this.Value));\r\n        }\r\n\r\n        this.Attributes.forEach(function (attribute) {\r\n            element.setAttribute(attribute.Name, attribute.Value);\r\n        });\r\n\r\n        this.Elements.forEach(function (child) {\r\n            element.appendChild(child.ToXmlElement(doc));\r\n        });\r\n\r\n        return element;\r\n    }\r\n\r\n    ToXmlString(builder: Common.StringBuilder): string {\r\n\r\n        builder.Append('<' + this.Name + '>');\r\n        if (this.Value) {\r\n            builder.Append(this.Value);\r\n        } else {\r\n            this.Elements.forEach(function (child) {\r\n                child.ToXmlString(builder);\r\n            });\r\n        }\r\n\r\n        builder.Append('</' + this.Name + '>');\r\n        return builder.Build();\r\n    }\r\n}\r\n","\r\nexport class Guid {\r\n    static Empty = '00000000-0000-0000-0000-000000000000';\r\n    static Validator = new RegExp('^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$', 'i');\r\n    private value: string;\r\n\r\n    constructor(value: any) {\r\n        if (!value)\r\n            throw new TypeError('Invalid argument; `value` has no value.');\r\n\r\n        this.value = Guid.Empty;\r\n\r\n        if (value && value instanceof Guid) {\r\n            this.value = (value as Guid).Value;\r\n        } else if (value && Object.prototype.toString.call(value) === '[object String]' && Guid.IsGuid(value)) {\r\n            this.value = value;\r\n        }\r\n    }\r\n\r\n    get Value(): string {\r\n        return this.value;\r\n    }\r\n    IsEmpty(): boolean {\r\n        return this.value === Guid.Empty;\r\n    }\r\n    ToString(): string {\r\n        return this.value;\r\n    }\r\n    ToJson(): string {\r\n        return this.value;\r\n    }\r\n\r\n    private static Generate(count): string {\r\n        let out = '';\r\n        for (let i = 0; i < count; i++) {\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    }\r\n    static New(): Guid {\r\n        return new Guid([Guid.Generate(2), Guid.Generate(1), Guid.Generate(1), Guid.Generate(1), Guid.Generate(3)].join('-'));\r\n    }\r\n    static IsGuid(value: any): boolean {\r\n        return value && (value instanceof Guid || Guid.Validator.test(value.toString()));\r\n    }\r\n\r\n}","import { IDisposable } from './IDisposable';\r\n\r\nexport class StringBuilder implements IDisposable {\r\n    private content = [];\r\n    private latest: string | null = null;\r\n\r\n    get IsEmpty(): boolean {\r\n        return this.content.length === 0;\r\n    }\r\n    Append(item: any): StringBuilder {\r\n        this.AppendSingle(item);\r\n        return this;\r\n    }\r\n    AppendLine(item: any): StringBuilder {\r\n        this.AppendSingle(item);\r\n        this.content.push('\\r\\n');\r\n        return this;\r\n    }\r\n    AppendLines(items: any[]): StringBuilder {\r\n        items.forEach(x => {\r\n            if (x != null) {\r\n                this.AppendLine(x);\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n\r\n    Build(): string {\r\n        if (this.latest != null)\r\n            return this.latest;\r\n        this.latest = this.Join('');\r\n        return this.latest;\r\n    }\r\n    Join(delimiter: string) {\r\n        return this.content.join(delimiter);\r\n    }\r\n\r\n    toString() {\r\n        return this.Build();\r\n    }\r\n    Dispose(): void {\r\n        this.latest = null;\r\n        this.content = [];\r\n    }\r\n    private AppendSingle(item: any): void {\r\n        if (item != null) {\r\n            this.latest = null;\r\n            if (typeof item !== 'string') {\r\n                this.content.push(item.toString());\r\n            } else {\r\n                this.content.push(item);\r\n            }\r\n        }\r\n    }\r\n}","\r\ndeclare var Xml2Js: any;\r\n\r\nexport class XmlConverter {\r\n\r\n    /** Convert Xml to Json */\r\n    ToJson(xml: any): any {\r\n        let parser = Xml2Js.Parser();\r\n        return parser.toJson(xml);\r\n    }\r\n}","\r\ndeclare let clipboard: any;\r\n\r\nexport class Clipboard {\r\n    /**\r\n     * \r\n     */\r\n    ContainsImage(): boolean {\r\n        let formats: string[] = clipboard.availableFormats();\r\n        return formats.some(x => x === 'image/png' || x === 'image/jpeg' || x === 'image/jpg' || x === 'image/gif');\r\n    }\r\n\r\n    /** Get image data from clipboard */\r\n    GetImage(): any {\r\n        let formats = clipboard.availableFormats();\r\n\r\n        let native = clipboard.readImage();\r\n\r\n        return native;\r\n    }\r\n    GetAvailableFormats(): string[] {\r\n        return clipboard.availableFormats();\r\n    }\r\n    /**\r\n     * Get image data URL\r\n     */\r\n    GetImageUrl(): string {\r\n        let url = '';\r\n        let image = this.GetImage();\r\n        if (image) {\r\n            url = image.toDataURL();\r\n        }\r\n        return url;\r\n    }\r\n    /** Get PNG format image encoded with base64 */\r\n    GetPngImage(): any {\r\n        let data: any;\r\n        let image = this.GetImage();\r\n        if (image) {\r\n            data = image.toPNG();\r\n        }\r\n        return data;\r\n    }\r\n    /** Get PNG format image encoded with base64 */\r\n    GetPngBase64Image(): string {\r\n        let data = '';\r\n        let image = this.GetImage();\r\n        if (image) {\r\n            let buffer = image.toPNG();\r\n            data = buffer.toString('base64');\r\n        }\r\n        return data;\r\n    }\r\n    Clear(): void {\r\n        clipboard.clear();\r\n    }\r\n    /**  Clears the Clipboard and then adds text data in the Text or UnicodeText format, depending on the operating system.*/\r\n    SetText(text: string): void {\r\n        try {\r\n            if (clipboard !== null) {\r\n                clipboard.writeText(text);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n        if (document) {\r\n            try {\r\n\r\n                let temp = document.createElement('textarea');\r\n                document.body.appendChild(temp);\r\n                temp.textContent = text;\r\n                let currentFocus: any = document.activeElement;\r\n                temp.focus();\r\n                temp.setSelectionRange(0, temp.value.length);\r\n                document.execCommand('copy');\r\n                if (currentFocus) {\r\n                    currentFocus.focus();\r\n                }\r\n                document.body.removeChild(temp);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get text conent from clipboard\r\n     */\r\n    GetText(): string {\r\n        return clipboard.readText();\r\n    }\r\n    /**\r\n     * Get HTML fromat text content from clipboard\r\n     */\r\n    GetHtml(): string {\r\n        return clipboard.readHTML();\r\n    }\r\n    /**\r\n     * Set HTML format content to clipboard\r\n     * @param value HTML format content\r\n     */\r\n    SetHtml(value: string): void {\r\n        return clipboard.writerHTML(value);\r\n    }\r\n    /**\r\n     * Get RTF format text from clipboard\r\n     */\r\n    GetRTF(): string {\r\n        return clipboard.readRTF();\r\n    }\r\n    /**\r\n     * Set RTF format content to clipboard\r\n     * @param value RTF format content\r\n     */\r\n    SetRTF(value: string): void {\r\n        clipboard.writerRTF(value);\r\n    }\r\n}","export class JsonToken {\r\n\r\n    Decode(token: string): any {\r\n        const parts = token.split('.');\r\n        if (parts.length !== 3) {\r\n            throw new Error('JWT must have 3 parts');\r\n        }\r\n        const decoded = this.urlBase64Decode(parts[1]);\r\n        if (!decoded) {\r\n            throw new Error('Cannot decode the token');\r\n        }\r\n        return JSON.parse(decoded);\r\n    }\r\n\r\n    private urlBase64Decode(str: string) {\r\n        let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n        switch (output.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                output += '==';\r\n                break;\r\n            case 3:\r\n                output += '=';\r\n                break;\r\n            default: {\r\n                throw new Error('Illegal base64url string!');\r\n            }\r\n        }\r\n        return decodeURIComponent(encodeURI(window.atob(output)));\r\n    }\r\n}","import { IEnumerable } from './IEnumerable';\r\n\r\nexport class EnumerableIterator<T> implements Iterator<T>{\r\n    private pointer = 0;\r\n\r\n    constructor(private enumerable: IEnumerable<T>) {\r\n\r\n    }\r\n\r\n    next(value?: any): IteratorResult<T> {       \r\n        if (this.pointer < this.enumerable.Count) {\r\n            return {\r\n                done: false,\r\n                value: this.enumerable.Items[this.pointer++]\r\n            };\r\n        } else {\r\n            return {\r\n                done: true,\r\n                value: null\r\n            };\r\n        }\r\n    }\r\n}","import { IEnumerable } from './IEnumerable';\r\nimport { EnumerableIterator } from './EnumerableIterator';\r\n\r\nexport class Enumerable<T> implements IEnumerable<T> {\r\n    private items: T[] = [];\r\n\r\n    /** Get counts of collection */\r\n    get Count(): number {\r\n        return this.Items.length;\r\n    }\r\n    /** Get all items */\r\n    get Items(): T[] {\r\n        return this.items;\r\n    }\r\n    /** Set items value */\r\n    set Items(value: T[]) {\r\n        this.items = value;\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        return new EnumerableIterator(this);\r\n    }\r\n\r\n    static From<T>(array: Array<T>): IEnumerable<T> {\r\n        let list = new Enumerable<T>();\r\n        if (array) {\r\n            list.Items = array;\r\n        }\r\n        return list;\r\n    }\r\n}\r\n\r\n","import { Enumerable } from './Enumerable';\r\nimport { ICollection } from './ICollection';\r\n\r\nexport class Collection<T> extends Enumerable<T> implements ICollection<T> {  \r\n\r\n    /** Get whether collection is readonly */\r\n    get IsReadOnly(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /** Add item to collection */\r\n    Add(item: T): void {\r\n        if (!item)\r\n            throw new Error(`Argument 'item' is null.`);\r\n\r\n        this.Items.push(item);\r\n    }\r\n    /** Add items to collection */\r\n    AddRange(items: T[]): void {\r\n        if (!items)\r\n            throw new Error(`Argument 'items' is null.`);\r\n\r\n        for (let item of items) {\r\n            this.Add(item);\r\n        }\r\n    }\r\n    /** Clear collection */\r\n    Clear(): void {\r\n        this.Items = [];\r\n    }\r\n    /** Determines whether collection contains a specific item */\r\n    Contains(item: T): boolean {\r\n        if (!item)\r\n            throw new Error(`Argument 'item' is null.`);\r\n\r\n        return this.Items.indexOf(item) > -1;\r\n    }\r\n    /** Remove item from collection */\r\n    Remove(item: T): boolean {\r\n        if (!item)\r\n            throw new Error(`Argument 'item' is null.`);\r\n\r\n        let index = this.Items.indexOf(item);\r\n        if (index > -1) {\r\n            this.Items.splice(index, 1);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    /** Copy elements to an array starting at a particular index\r\n     * @array\r\n     * @arrayIndex The zero-based index in array at which copying begins.\r\n     */\r\n    CopyTo(array: T[], arrayIndex: number) {\r\n        if (!array)\r\n            throw new Error(`Argument 'array' is null.`);\r\n        if (arrayIndex < 0 || arrayIndex > array.length)\r\n            throw new Error(`Argument 'arrayIndex' is out of range.`);\r\n\r\n        let index = arrayIndex;\r\n        for (let item of this.Items) {\r\n            array.splice(index++, 0, item);\r\n        }\r\n\r\n    }\r\n}","import { Collection } from './Collection';\r\nimport { IList } from './IList';\r\n\r\nexport class List<T> extends Collection<T> implements IList<T> {\r\n    /** Get index of given item */\r\n    IndexOf(item: T): number {\r\n        if (!item)\r\n            throw new Error(`Argument 'item' is null.`);\r\n        return this.Items.indexOf(item);\r\n    }\r\n    /** Insert item to given index */\r\n    Insert(index: number, item: T): void {\r\n        if (!item)\r\n            throw new Error(`Argument 'item' is null.`);\r\n        if (index < 0 || index >= this.Items.length)\r\n            throw new Error(`Argument 'index' is out of index`);\r\n\r\n        this.Items.splice(index, 0, item);\r\n    }\r\n    /** Remove item at given index */\r\n    RemoveAt(index: number): void {\r\n        if (index < 0 || index >= this.Items.length)\r\n            throw new Error(`Argument 'index' is out of index`);\r\n            \r\n        this.Items.splice(index, 1);\r\n    }\r\n}","import { IEnumerable } from './IEnumerable';\r\nimport { Enumerable } from './Enumerable';\r\n\r\n\r\nexport interface IGrouping<TKey, TElement> extends IEnumerable<TElement> {\r\n    readonly Key: TKey;\r\n\r\n}\r\n\r\nexport class Grouping<TKey, TElement> extends Enumerable<TElement> implements IGrouping<TKey, TElement> {\r\n    private key: TKey;\r\n\r\n\r\n    constructor(key?: TKey, elements?: IEnumerable<TElement>) {\r\n        super();\r\n        this.key = key;\r\n        this.Items = elements.Items;\r\n    }\r\n\r\n    get Key(): TKey {\r\n        return this.key;\r\n    }\r\n    set Key(value: TKey) {\r\n        this.key = value;\r\n    }\r\n\r\n}","import { INamedDictionary } from './INamedDictionary';\r\n\r\n\r\nexport class NamedDictionary<T> implements INamedDictionary<T> {\r\n    private items: { [index: string]: T } = {};\r\n\r\n    private count = 0;\r\n\r\n    public ContainsKey(key: string): boolean {\r\n        return this.items.hasOwnProperty(key);\r\n    }\r\n\r\n    public Count(): number {\r\n        return this.count;\r\n    }\r\n\r\n    public Add(key: string, value: T) {\r\n        this.items[key] = value;\r\n        this.count++;\r\n    }\r\n\r\n    public Remove(key: string): T {\r\n        let value = this.items[key];\r\n        delete this.items[key];\r\n        this.count--;\r\n        return value;\r\n    }\r\n\r\n    public Item(key: string): T {\r\n        return this.items[key];\r\n    }\r\n\r\n    public Keys(): string[] {\r\n        let keySet: string[] = [];\r\n\r\n        for (let prop in this.items) {\r\n            if (this.items.hasOwnProperty(prop)) {\r\n                keySet.push(prop);\r\n            }\r\n        }\r\n\r\n        return keySet;\r\n    }\r\n\r\n    public Values(): T[] {\r\n        let values: T[] = [];\r\n\r\n        for (let prop in this.items) {\r\n            if (this.items.hasOwnProperty(prop)) {\r\n                values.push(this.items[prop]);\r\n            }\r\n        }\r\n\r\n        return values;\r\n    }\r\n}","export class KeyValuePair<TKey, TValue>{\r\n    private key: TKey;\r\n    private value: TValue;\r\n\r\n    constructor(key: TKey, value: TValue) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n\r\n    get Key(): TKey {\r\n        return this.key;\r\n    }\r\n    get Value(): TValue {\r\n        return this.value;\r\n    }\r\n}","import { IDictionary } from './IDictionary';\r\nimport { Enumerable } from './Enumerable';\r\nimport { KeyValuePair } from './KeyValuePair';\r\n\r\nexport class Dictionary<TKey, TValue> extends Enumerable<KeyValuePair<TKey, TValue>> implements IDictionary<TKey, TValue> {\r\n    private map = new Map<TKey, TValue>();\r\n\r\n    Add(key: TKey, value: TValue): void {\r\n        this.map.set(key, value);\r\n        this.Items.Add(new KeyValuePair(key, value));\r\n    }\r\n    ContainsKey(key: TKey): boolean {\r\n        return this.map.has(key);\r\n    }\r\n    // Count(): number {\r\n    //     return this.items.size;\r\n    // }\r\n    Item(key: TKey): TValue {\r\n        return this.map.get(key);\r\n    }\r\n    Keys(): TKey[] {\r\n        let keys = [];\r\n\r\n        this.map.forEach((value, key) => {\r\n            keys.push(key);\r\n        })\r\n        return keys;\r\n    }\r\n    Remove(key: TKey): boolean {\r\n\r\n        let item = this.Items.FirstOrDefault(x => x.Key === key);\r\n        if (item)\r\n            this.Items.Remove(item);\r\n        return this.map.delete(key);\r\n    }\r\n    Values(): TValue[] {\r\n        let values = [];\r\n        this.map.forEach((value, key) => {\r\n            values.push(value);\r\n        })\r\n        return values;\r\n    }\r\n}","import { Observable } from 'rxjs/Observable';\r\nimport { Operator } from 'rxjs/Operator';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport { Subscription, TeardownLogic } from 'rxjs/Subscription';\r\nimport { IScheduler, Scheduler } from 'rxjs/Scheduler';\r\nimport { List } from './List';\r\nimport { IEnumerable } from './IEnumerable';\r\nimport { EnumerableIterator } from './EnumerableIterator';\r\n\r\nexport class ObservableCollection<T> extends Observable<T> implements IEnumerable<T>  {\r\n\r\n\r\n    static Create<T>(array: Array<T>): ObservableCollection<T> {\r\n        return new ObservableCollection<T>(<any>[array]);\r\n    }\r\n\r\n    static dispatch(state: any) {\r\n\r\n        const { array, index, count, subscriber } = state;\r\n\r\n        if (index >= count) {\r\n            subscriber.complete();\r\n            return;\r\n        }\r\n\r\n        subscriber.next(array[index]);\r\n\r\n        if (subscriber.closed) {\r\n            return;\r\n        }\r\n\r\n        state.index = index + 1;\r\n\r\n        (<any>this).schedule(state);\r\n    }\r\n\r\n    // value used if Array has one value and _isScalar\r\n    private values: T[];\r\n\r\n\r\n    constructor(private array: any[], private scheduler?: IScheduler) {\r\n        super();\r\n        // console.log(array);\r\n        if (!scheduler && array.length === 1) {\r\n            this._isScalar = true;\r\n            this.values = <T[]>array[0];\r\n        } else {\r\n            this._isScalar = true;\r\n            this.values = array;\r\n        }\r\n    }\r\n\r\n    get Count(): number {\r\n        return this.values.length;\r\n    }\r\n    get Values(): T[] {\r\n        return this.values;\r\n    }\r\n    get Items(): T[] {\r\n        return this.values;\r\n    }\r\n    set Items(value: T[]) {\r\n        this.values = value;\r\n    }\r\n\r\n    public Add(item: T): void {\r\n        if (this.values) {\r\n            this.values.push(item);\r\n        }\r\n    }\r\n    public AddRange(items: T[]): void {\r\n        if (items) {\r\n            for (let item of items) {\r\n                this.Add(item);\r\n            }\r\n        }\r\n    }\r\n    public Remove(item: T): boolean {\r\n        let index = this.values.indexOf(item);\r\n        if (index > -1) {\r\n            this.values.splice(index, 1);\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    [Symbol.iterator]() {\r\n        return new EnumerableIterator(this);\r\n    }\r\n\r\n    _subscribe(subscriber: Subscriber<T>): TeardownLogic {\r\n        let index = 0;\r\n        const array = this.array;\r\n        const count = array.length;\r\n        const scheduler = this.scheduler;\r\n\r\n        if (scheduler) {\r\n            return scheduler.schedule(ObservableCollection.dispatch, 0, {\r\n                array, index, count, subscriber\r\n            });\r\n        } else {\r\n            //console.log(this.values);\r\n            for (let i = 0; i < count && !subscriber.closed; i++) {\r\n                subscriber.next(array[0]);\r\n            }\r\n            subscriber.complete();\r\n        }\r\n    }\r\n}","import { IEnumerable } from './IEnumerable';\r\nimport { Enumerable } from './Enumerable';\r\nimport { List } from './List';\r\n\r\nimport { ObservableCollection } from './ObservableCollection';\r\nimport { IGrouping, Grouping } from './IGrouping';\r\nimport { Dictionary } from './Dictionary';\r\nimport { IList } from './IList';\r\nimport { IDictionary } from './IDictionary';\r\n\r\n/** Do ForEach on items */\r\nexport function ForEach<T>(this: IEnumerable<T>, action: (item: T) => void): void {\r\n    if (!action) {\r\n        throw new Error(`Argument 'item' is null.`);\r\n    }\r\n\r\n    for (let item of this.Items) {\r\n        action(item);\r\n    }\r\n}\r\n/** Sort items by given comparer */\r\nexport function Sort<T>(this: IEnumerable<T>, comparer: (x: T, y: T) => number): void {\r\n    if (!comparer)\r\n        throw new Error(`Argument 'comparer' is null.`);\r\n\r\n    this.Items = this.Items.sort(comparer);\r\n}\r\n/** Find items by given predicate */\r\nexport function FindAll<T>(this: IEnumerable<T>, predicate: (item: T) => boolean): IEnumerable<T> {\r\n    if (!predicate)\r\n        throw new Error(`Argument 'predicate' is null.`);\r\n\r\n    let result = new List<T>();\r\n    for (let item of this.Items) {\r\n        if (predicate(item))\r\n            result.Add(item);\r\n    }\r\n\r\n    return Enumerable.From(result.Items);\r\n}\r\n/** Find first item in the list */\r\nexport function FirstOrDefault<T>(this: IEnumerable<T>, predicate?: (item: T) => boolean): T {\r\n\r\n    let result: T;\r\n\r\n    result = this.Items.FirstOrDefault(predicate);\r\n\r\n    return result;\r\n}\r\nexport function IsEmpty<T>(this: IEnumerable<T>): boolean {\r\n    return !(this.Items && this.Items.length > 0);\r\n}\r\nexport function Any<T>(this: IEnumerable<T>, predicate?: (source: any) => boolean): boolean {\r\n    if (predicate) {\r\n        for (let item of this.Items) {\r\n            if (predicate(item))\r\n                return true;\r\n        }\r\n        return false;\r\n    } else {\r\n        if (this.Items.length === 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexport function Max<T>(this: IEnumerable<T>, selector: (source: T) => number): number {\r\n\r\n    let max = this.Select(selector).Items.reduce(function (a: number, b: number) {\r\n        return Math.max(a, b);\r\n    });\r\n    return max;\r\n}\r\nexport function Min<T>(this: IEnumerable<T>, selector: (source: T) => any): number {\r\n    let min = this.Select(selector).Items.reduce(function (a: number, b: number) {\r\n        return Math.min(a, b);\r\n    });\r\n    return min;\r\n}\r\nexport function OrderBy<T>(this: IEnumerable<T>, keySelector: (source: T) => any): IEnumerable<T> {\r\n    // return Enumerable.From(this.Items.OrderBy(keySelector));\r\n    let values = this.Items.sort(function (a: any, b: any) {\r\n        return keySelector(a) - keySelector(b);\r\n    });\r\n\r\n    return Enumerable.From(values);\r\n}\r\nexport function OrderByDescending<T>(this: IEnumerable<T>, keySelector: (source: T) => any): IEnumerable<T> {\r\n    // return Enumerable.From(this.Items.OrderByDescending(keySelector));\r\n\r\n    let values = this.Items.sort(function (a: any, b: any) {\r\n        return keySelector(b) - keySelector(a);\r\n    });\r\n\r\n    return Enumerable.From(values);\r\n}\r\nexport function Where<T>(this: IEnumerable<T>, predicate: (source: T) => boolean): IEnumerable<T> {\r\n    //return Enumerable.From(this.Items.Where(predicate));\r\n\r\n    let values = this.Items.filter((x: any) => {\r\n        return predicate(x);\r\n    });\r\n    return  Enumerable.From(values);\r\n}\r\nexport function Select<TSource, TResult>(this: IEnumerable<TSource>, selector: (source: TSource) => TResult): IEnumerable<TResult> {\r\n    //return Enumerable.From<TResult>(this.Items.Select(selector));\r\n    let result = [];\r\n    for (let item of this.Items) {\r\n        result.push(selector(item));\r\n    }\r\n    return Enumerable.From(result);\r\n}\r\nexport function ElementAt<T>(this: IEnumerable<T>, index: number): T {\r\n    let values = this.Items;\r\n    return values[index];\r\n}\r\nexport function GroupBy<T, TKey, TElement>(this: IEnumerable<T>, keySelector: (source: T) => TKey, valueSelector?: (source: T) => any): IEnumerable<IGrouping<TKey, TElement>> {\r\n    if (!this)\r\n        throw new Error(`Parameter is null`);\r\n    if (!keySelector)\r\n        throw new Error(`Parameter 'keySelelctor'is null`);\r\n    if (!valueSelector)\r\n        valueSelector = x => x;\r\n\r\n    let dictionary = new Dictionary<TKey, IList<TElement>>();\r\n\r\n    this.ForEach(x => {\r\n        let key = keySelector(x);\r\n        let value = valueSelector ? valueSelector(x) : x;\r\n\r\n        let values: IList<TElement>;\r\n        if (dictionary.ContainsKey(key)) {\r\n            let item = dictionary.Item(key);\r\n            values = item ? item : new List<TElement>();\r\n        } else {\r\n            values = new List<TElement>();\r\n            dictionary.Add(key, values);\r\n        }\r\n        values.Add(value);\r\n    });\r\n\r\n    let groups = new List<IGrouping<TKey, TElement>>();\r\n\r\n    dictionary.ForEach(x => {\r\n        groups.Add(new Grouping(x.Key, x.Value));\r\n    })\r\n    return groups;\r\n}\r\n\r\ndeclare module './Enumerable' {\r\n    interface Enumerable<T> {\r\n        ForEach: (action: (item: T) => void) => void;\r\n        Sort: (comparer: (x: T, y: T) => number) => void;\r\n        FindAll: (predicate: (item: T) => boolean) => IEnumerable<T>;\r\n        FirstOrDefault: (predicate?: (item: T) => boolean) => T;\r\n        IsEmpty: () => boolean;\r\n        Any: (predicate?: (source: any) => boolean) => boolean;\r\n        Max: (selector: (source: T) => any) => number;\r\n        Min: (selector: (source: T) => any) => number;\r\n        OrderBy: (keySelector: (source: T) => any) => IEnumerable<T>;\r\n        OrderByDescending: (keySelector: (source: T) => any) => IEnumerable<T>;\r\n        Where: (predicate: (source: T) => boolean) => IEnumerable<T>;\r\n        Select: <T, TResult>(selector: (source: T) => TResult) => IEnumerable<TResult>;\r\n        ElementAt: (index: number) => T;\r\n        GroupBy: <TKey, TElement>  (keySelector: (source: T) => TKey, valueSelector?: (source: T) => TElement) => IEnumerable<IGrouping<TKey, TElement>>;\r\n    }\r\n}\r\ndeclare module './IEnumerable' {\r\n    interface IEnumerable<T> {\r\n        ForEach: (action: (item: T) => void) => void;\r\n        Sort: (comparer: (x: T, y: T) => number) => void;\r\n        FindAll: (predicate: (item: T) => boolean) => IEnumerable<T>;\r\n        FirstOrDefault: (predicate?: (item: T) => boolean) => T;\r\n        IsEmpty: () => boolean;\r\n        Any: (predicate?: (source: any) => boolean) => boolean;\r\n        Max: (selector: (source: T) => any) => number;\r\n        Min: (selector: (source: T) => any) => number;\r\n        OrderBy: (keySelector: (source: T) => any) => IEnumerable<T>;\r\n        OrderByDescending: (keySelector: (source: T) => any) => IEnumerable<T>;\r\n        Where: (predicate: (source: T) => boolean) => IEnumerable<T>;\r\n        Select: <T, TResult>(selector: (source: T) => TResult) => IEnumerable<TResult>;\r\n        ElementAt: (index: number) => T;\r\n        GroupBy: <TKey, TElement>  (keySelector: (source: T) => TKey, valueSelector?: (source: T) => TElement) => IEnumerable<IGrouping<TKey, TElement>>;\r\n    }\r\n}\r\ndeclare module './ObservableCollection' {\r\n    interface ObservableCollection<T> {\r\n        ForEach: (action: (item: T) => void) => void;\r\n        Sort: (comparer: (x: T, y: T) => number) => void;\r\n        FindAll: (predicate: (item: T) => boolean) => IEnumerable<T>;\r\n        FirstOrDefault: (predicate?: (item: T) => boolean) => T;\r\n        IsEmpty: () => boolean;\r\n        Any: (predicate?: (source: any) => boolean) => boolean;\r\n        Max: (selector: (source: T) => any) => number;\r\n        Min: (selector: (source: T) => any) => number;\r\n        OrderBy: (keySelector: (source: T) => any) => IEnumerable<T>;\r\n        OrderByDescending: (keySelector: (source: T) => any) => IEnumerable<T>;\r\n        Where: (predicate: (source: T) => boolean) => IEnumerable<T>;\r\n        Select: <T, TResult>(selector: (source: T) => TResult) => IEnumerable<TResult>;\r\n        ElementAt: (index: number) => T;\r\n        GroupBy: <TKey, TElement>  (keySelector: (source: T) => TKey, valueSelector?: (source: T) => TElement) => IEnumerable<IGrouping<TKey, TElement>>;\r\n    }\r\n}\r\n\r\nEnumerable.prototype.ForEach = ForEach;\r\nEnumerable.prototype.Sort = Sort;\r\nEnumerable.prototype.FindAll = FindAll;\r\nEnumerable.prototype.FirstOrDefault = FirstOrDefault;\r\nEnumerable.prototype.IsEmpty = IsEmpty;\r\nEnumerable.prototype.Any = Any;\r\nEnumerable.prototype.Max = Max;\r\nEnumerable.prototype.Min = Min;\r\nEnumerable.prototype.OrderBy = OrderBy;\r\nEnumerable.prototype.OrderByDescending = OrderByDescending;\r\nEnumerable.prototype.Where = Where;\r\nEnumerable.prototype.Select = Select;\r\nEnumerable.prototype.ElementAt = ElementAt;\r\nEnumerable.prototype.GroupBy = GroupBy;\r\n\r\nObservableCollection.prototype.ForEach = ForEach;\r\nObservableCollection.prototype.Sort = Sort;\r\nObservableCollection.prototype.FindAll = FindAll;\r\nObservableCollection.prototype.FirstOrDefault = FirstOrDefault;\r\nObservableCollection.prototype.IsEmpty = IsEmpty;\r\nObservableCollection.prototype.Any = Any;\r\nObservableCollection.prototype.Max = Max;\r\nObservableCollection.prototype.Min = Min;\r\nObservableCollection.prototype.OrderBy = OrderBy;\r\nObservableCollection.prototype.OrderByDescending = OrderByDescending;\r\nObservableCollection.prototype.Where = Where;\r\nObservableCollection.prototype.Select = Select;\r\nObservableCollection.prototype.ElementAt = ElementAt;\r\nObservableCollection.prototype.GroupBy = GroupBy;","import { IDictionary, Dictionary,  } from '../collections/index';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport interface ISize {\r\n    Width: number;\r\n    Height: number;\r\n}\r\nexport interface ISizChangeHandler {\r\n    Handle(size: ISize): void;\r\n}\r\nexport interface IWindowSizeWatcher {\r\n    Start(): void;\r\n    Add(name: string, handler: ISizChangeHandler);\r\n    Remove(name: string);\r\n}\r\nexport const WindowSizeWatcherToken = new InjectionToken('./IWindowSizeWatcher');\r\n\r\nexport class WindowSizeWatcher implements IWindowSizeWatcher {\r\n    private handlers: IDictionary<string, ISizChangeHandler>;\r\n\r\n\r\n    constructor() {\r\n        this.handlers = new Dictionary<string, ISizChangeHandler>();\r\n    }\r\n\r\n    Start(): void {\r\n\r\n        let self = this;\r\n        window.onresize = (e: UIEvent) => {\r\n            for (let handler of self.handlers.Values()) {\r\n                handler.Handle({ Width: window.innerWidth, Height: window.innerHeight });\r\n            }\r\n        };\r\n    }\r\n\r\n    Add(name: string, handler: ISizChangeHandler): void {\r\n        this.handlers.Add(name, handler);\r\n    }\r\n    Remove(name: string) {\r\n        this.handlers.Remove(name);\r\n    }\r\n\r\n    private OnSizeChanged(e: UIEvent) {\r\n\r\n        for (let handler of this.handlers.Values()) {\r\n            handler.Handle({ Width: window.innerWidth, Height: window.innerHeight });\r\n        }\r\n    }\r\n}\r\n","import { XElement } from './XElement';\r\nimport * as Common from '../common/index';\r\n\r\nexport class XDocument {\r\n\r\n    private mRoot: XElement;\r\n\r\n    get Root(): XElement {\r\n        return this.mRoot;\r\n    }\r\n    set Root(value:XElement){\r\n        this.mRoot = value;\r\n        this.mRoot.Document = this;\r\n    }\r\n\r\n    Build(): XMLDocument {        \r\n        var doc = document.implementation.createDocument(\"\", \"\", null);\r\n\r\n        doc.appendChild(this.Root.ToXmlElement(doc));\r\n        return doc;\r\n    }\r\n\r\n    BuildXmlString():string{\r\n        let builder = new Common.StringBuilder();\r\n        let content = this.Root.ToXmlString(builder);\r\n\r\n        return content;\r\n    }\r\n}","\r\nimport {XObject}        from './XObject';\r\n\r\nexport class XAttribute extends XObject {\r\n    constructor(name: string, value: any) {\r\n        super(name, value);\r\n    }\r\n}","\r\nexport interface ICommand {\r\n\r\n    CanExecute(param: any): boolean;\r\n\r\n    Execute(param: any): void;\r\n}\r\n\r\nexport class DelegateCommand implements ICommand {\r\n\r\n    constructor(\r\n        private canExecute: (param: any) => boolean,\r\n        private action: (param: any) => void) {\r\n\r\n    }\r\n\r\n    CanExecute(param: any): boolean {\r\n        if (this.canExecute === null)\r\n            return true;\r\n        return  this.canExecute(param);\r\n    }\r\n\r\n    Execute(param: any): void {\r\n        if (this.action) {\r\n            try {\r\n                this.action(param);\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a command from given actions.\r\n     * @param action executed action\r\n     * @param canExecute can execue action\r\n     */\r\n    static From(action: (param?: any) => void, canExecute?: (param?: any) => boolean): ICommand {\r\n        if (!canExecute)\r\n            canExecute = (param?: any) => true;\r\n        return new DelegateCommand(canExecute, action);\r\n    }\r\n}","import { ICommandRepository } from './ICommandRepository';\r\nimport { ICommand } from './ICommand';\r\nimport { Dictionary } from '../collections/Dictionary';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CommandRepository implements ICommandRepository {\r\n\r\n    Commands = new Dictionary<string, ICommand>();\r\n\r\n    GetCommand(name: string): ICommand {\r\n\r\n        let command = this.Commands.Item(name);\r\n\r\n        return command;\r\n    }\r\n\r\n    Register(name: string, command: ICommand): ICommandRepository {\r\n        if (!name)\r\n            throw new Error('Name value is null.');\r\n        if (!command)\r\n            throw new Error('Command value is null.')\r\n\r\n        this.Commands.Add(name, command);\r\n\r\n        return this;\r\n    }\r\n}","import { InjectionToken } from '@angular/core';\r\n\r\n\r\n\r\nexport const MessageMediatorToken = new InjectionToken('./message-mediator/IMessageMediator');\r\nexport const LoggerFactoryToken = new InjectionToken('./logging/ILoggerFactory');\r\nexport const ExceptionHandlerToken = new InjectionToken('./exception/IExceptionHandler');\r\nexport const CommandRepositoryToken = new InjectionToken('./command/ICommandRepository');\r\nexport const CommandDescriptorRepositoryToken = new InjectionToken('./command/ICommandDescriptorRepository');\r\nexport const ActionRepositoryToken = new InjectionToken('./action/IActionRepository');\r\n","import { Directive, ElementRef, Input, Renderer, HostListener, Inject } from '@angular/core';\r\n\r\nimport { ICommandRepository } from './ICommandRepository';\r\nimport { ILoggerFactory } from '../logging/ILoggerFactory';\r\nimport { ILogger } from '../logging/ILogger';\r\nimport { CommandRepositoryToken, LoggerFactoryToken } from '../Tokens';\r\n\r\n@Directive({\r\n    selector: '[InvokeCommand]'\r\n})\r\nexport class InvokeCommandDirective {\r\n    @Input('InvokeCommand') CommandName: string;\r\n    @Input() CommandParam: any;\r\n\r\n    private logger: ILogger;\r\n\r\n    constructor(\r\n        @Inject(CommandRepositoryToken) private commandRepository: ICommandRepository,\r\n        @Inject(LoggerFactoryToken) loggerFactory: ILoggerFactory) {\r\n\r\n        this.logger = loggerFactory.CreateLogger('InvokeCommand');\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    OnClicked() {\r\n        this.logger.Debug(`Invoke command: ${this.CommandName} with ${JSON.stringify(this.CommandParam)}`);\r\n\r\n        if (String.IsValid(this.CommandName)) {\r\n            let command = this.commandRepository.GetCommand(this.CommandName);\r\n            \r\n            if (command != null && command.CanExecute(this.CommandParam)) {\r\n                this.logger.Debug(`Get command with name: ${this.CommandName}, ${JSON.stringify(command)}`);\r\n                command.Execute(this.CommandParam);\r\n            }\r\n        }\r\n    }\r\n}","import { ICommandDescriptor } from './ICommandDescriptor';\r\n\r\nexport class CommandDescriptor implements ICommandDescriptor {\r\n\r\n    constructor(public Header: string, public CommandName: string,\r\n        public Group?: string, public Icon?: string,\r\n        public Image?: string, public Description?: string,\r\n        public Id?: string, public Tag?: any, public Shortcut?: string) {\r\n\r\n    }\r\n}","import { ICommandDescriptorRepository } from './ICommandDescriptorRepository';\r\nimport { IEnumerable } from '../collections/IEnumerable';\r\nimport { ICommandDescriptor } from './ICommandDescriptor';\r\nimport { List } from '../collections/List';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CommandDescriptorRepository implements ICommandDescriptorRepository {\r\n    private descriptors = new List<ICommandDescriptor>();\r\n\r\n\r\n    get Descriptors(): IEnumerable<ICommandDescriptor> {\r\n        return this.descriptors;\r\n    }\r\n    /**\r\n     * Register a descriptor.\r\n     */\r\n    Register(descriptor: ICommandDescriptor): ICommandDescriptorRepository {\r\n        if (descriptor != null) {\r\n            this.descriptors.Add(descriptor);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n    * Remove a descriptor\r\n    */\r\n    Remove(descriptor: ICommandDescriptor): ICommandDescriptorRepository {\r\n        if (descriptor !== null)\r\n            this.descriptors.Remove(descriptor);\r\n        return this;\r\n    }\r\n    /**\r\n     * Remove descriptors by given expression\r\n     */\r\n    RemoveRange(expression: (item: ICommandDescriptor) => boolean): void {\r\n        if (expression === null) {\r\n            return;\r\n        }\r\n\r\n        this.Descriptors.FindAll(expression)\r\n            .ForEach(x => {\r\n                this.descriptors.Remove(x);\r\n            });\r\n    }\r\n}","import { IEnumerable } from '../collections/IEnumerable';\r\nimport { ICommandDescriptor } from './ICommandDescriptor';\r\nimport { ICommandDescriptorRepository } from './ICommandDescriptorRepository';\r\nimport { CommandDescriptorRepository } from './CommandDescriptorRepository';\r\nimport * as Collections from '../collections/index';\r\n\r\nexport class CommandDescriptorExtensions {\r\n    /**\r\n     * Get descriptors by group\r\n     * @param this command descriptor repository\r\n     * @param group group name\r\n     */\r\n    static GetDescriptorsByGroup(this: ICommandDescriptorRepository, group: string): IEnumerable<ICommandDescriptor> {\r\n        let repo = this;\r\n        return repo.Descriptors.Where((x) => { return x.Group === group; });\r\n    }\r\n}\r\n\r\ndeclare module './ICommandDescriptorRepository' {\r\n    interface ICommandDescriptorRepository {\r\n        /**\r\n         * Get descriptors by group\r\n         * @param this command descriptor repository\r\n         * @param group group name\r\n         */\r\n        GetDescriptorsByGroup: (group: string) => IEnumerable<ICommandDescriptor>;\r\n    }\r\n}\r\ndeclare module './CommandDescriptorRepository' {\r\n    interface CommandDescriptorRepository {\r\n        /**\r\n         * Get descriptors by group\r\n         * @param this command descriptor repository\r\n         * @param group group name\r\n         */\r\n        GetDescriptorsByGroup: (group: string) => IEnumerable<ICommandDescriptor>;\r\n    }\r\n}\r\n\r\n\r\nCommandDescriptorRepository.prototype.GetDescriptorsByGroup = CommandDescriptorExtensions.GetDescriptorsByGroup;","\r\nexport class AppSettingItem {\r\n    Id: string;\r\n    Name: string;\r\n    Value: any;\r\n\r\n    get ToString(): string {\r\n        return `AppSettingItem Name:'${this.Name}', Id:'${this.Id}', Value:'${this.Value}'`;\r\n    }\r\n}","import { AppSettingItem } from './AppSettingItem';\r\nimport * as Common from '../common/index';\r\nimport * as Collections from '../collections/index';\r\n\r\nexport class AppSettings {\r\n    private Items = new Collections.NamedDictionary<AppSettingItem>();\r\n\r\n    get SettingItems(): AppSettingItem[] {\r\n        return this.Items.Values();\r\n    }\r\n\r\n    /** Get a setting item by name. */\r\n    GetItem(name: string, defaultValue?: any): AppSettingItem {\r\n        if (!name)\r\n            throw new Error('Given name is null.');\r\n\r\n        let item = this.Items.Item(name);\r\n        if (!item && defaultValue != null) {\r\n            item = new AppSettingItem();\r\n            item.Name = name;\r\n            item.Value = defaultValue;\r\n            this.Items.Add(name, item);\r\n        }\r\n        return item;\r\n    }\r\n    /** \r\n     * Add a setting item, if there is an item with same name, that item will\r\n     * be updated.\r\n     */\r\n    AddItem(item: AppSettingItem): AppSettings {\r\n        if (item && item.Name) {\r\n            let existing = this.GetItem(item.Name);\r\n            if (existing) {\r\n                existing.Value = item.Value;\r\n            } else {\r\n                this.Items.Add(item.Name, item);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /** \r\n     * Set setting item value \r\n     */\r\n    SetValue(name: string, value: any): AppSettings {\r\n        let item = this.GetItem(name);\r\n        if (!item) {\r\n            item = new AppSettingItem();\r\n            item.Name = name;            \r\n            this.Items.Add(name, item);\r\n        }\r\n        item.Value = value;\r\n        return this;\r\n    }\r\n}","import { Injectable,  InjectionToken } from '@angular/core';\r\nimport { IOptionDescriptor } from './IOptionDescriptor';\r\nimport * as Collections from '../collections/index';\r\n\r\n\r\nexport const OptionRepositoryToken = new InjectionToken('./IOptionRepository');\r\n\r\nexport interface IOptionRepository {\r\n    /**\r\n     * Register a descriptor\r\n     */\r\n    Register(descriptor: IOptionDescriptor): IOptionRepository;\r\n    /**\r\n     * Find descriptors by given expression\r\n     */\r\n    Find(expression: (descriptor: IOptionDescriptor) => boolean): Collections.IEnumerable<IOptionDescriptor>;\r\n    /**\r\n     * Find a descriptor by id\r\n     */\r\n    FindOne(id: string): IOptionDescriptor;\r\n}\r\n\r\n@Injectable()\r\nexport class OptionRepository implements IOptionRepository {\r\n    private descriptors = new Collections.Dictionary<string, IOptionDescriptor>();\r\n\r\n    /**\r\n     * Register a descriptor\r\n     */\r\n    Register(descriptor: IOptionDescriptor): IOptionRepository {\r\n        if (!descriptor)\r\n            throw new Error(`Argument descriptor is null`);\r\n\r\n        if (!this.descriptors.ContainsKey(descriptor.Id)) {\r\n            this.descriptors.Add(descriptor.Id, descriptor);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Find descriptors by given expression\r\n     */\r\n    Find(expression: (descriptor: IOptionDescriptor) => boolean): Collections.IEnumerable<IOptionDescriptor> {\r\n        return Collections.Enumerable.From(this.descriptors.Values().Where(x => expression(x)));\r\n    }\r\n    /**\r\n     * Find a descriptor by id\r\n     */\r\n    FindOne(id: string): IOptionDescriptor {\r\n        if (this.descriptors.ContainsKey(id)) {\r\n            return this.descriptors.Item(id);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nimport * as Collections from '../collections/index';\r\n\r\nexport class ResourceDictionary {\r\n    Local: string;\r\n    private mInnerDictionary = new Collections.NamedDictionary<string>();\r\n\r\n    /** Add resource value */\r\n    Add(key: string, value: string): ResourceDictionary {\r\n        if (key) {\r\n            this.mInnerDictionary.Add(key, value);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /** Get resource value */\r\n    Get(key: string): string {\r\n        if (key) {\r\n            return this.mInnerDictionary.Item(key);\r\n        }\r\n\r\n        return '';\r\n    }\r\n}","import * as Common from '../common/index';\r\nimport * as Collections from '../collections/index';\r\nimport { ResourceDictionary } from './ResourceDictionary';\r\n\r\nexport class ResourceHolder {\r\n    DefaultLocal = 'en-US';\r\n    private mInnerDictionary = new Collections.NamedDictionary<ResourceDictionary>();\r\n\r\n    constructor() {\r\n        \r\n    }\r\n\r\n    /** Get resource dictionary by local name */\r\n    GetResources(local: string): ResourceDictionary {\r\n        return this.mInnerDictionary.Item(local);\r\n    }\r\n    /** Add resource for specific local */\r\n    AddResources(local: string, resource: ResourceDictionary): ResourceHolder {\r\n        if (local) {\r\n            this.mInnerDictionary.Add(local, resource);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /** Get resource string */\r\n    GetString(name: string, local?: string): string {\r\n        let culture = local ? local : this.DefaultLocal;\r\n        let resources = this.GetResources(culture);\r\n        if (resources) {\r\n            return resources.Get(name);\r\n        }\r\n        return '';\r\n    }\r\n}","\r\nexport enum LogLevel {\r\n    /// <summary>\r\n    /// Logs that contain the most detailed messages. These messages may contain sensitive application data.\r\n    /// These messages are disabled by default and should never be enabled in a production environment.\r\n    /// </summary>\r\n    Trace = 1,\r\n\r\n    /// <summary>\r\n    /// Logs that are used for interactive investigation during development.  These logs should primarily contain\r\n    /// information useful for debugging and have no long-term value.\r\n    /// </summary>\r\n    Debug = 2,\r\n\r\n    /// <summary>\r\n    /// Logs that track the general flow of the application. These logs should have long-term value.\r\n    /// </summary>\r\n    Information = 3,\r\n\r\n    /// <summary>\r\n    /// Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the\r\n    /// application execution to stop.\r\n    /// </summary>\r\n    Warning = 4,\r\n\r\n    /// <summary>\r\n    /// Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a\r\n    /// failure in the current activity, not an application-wide failure.\r\n    /// </summary>\r\n    Error = 5,\r\n\r\n    /// <summary>\r\n    /// Logs that describe an unrecoverable application or system crash, or a catastrophic failure that requires\r\n    /// immediate attention.\r\n    /// </summary>\r\n    Critical = 6,\r\n\r\n    /// <summary>\r\n    /// Not used for writing log messages. Specifies that a logging category should not write any messages.\r\n    /// </summary>\r\n    None = 9999\r\n}","import { ILogger } from './ILogger';\r\nimport { DefaultLoggerFactory } from './DefaultLoggerFactory';\r\nimport { LogLevel } from './LogLevel';\r\nimport * as Collections from '../collections/index';\r\nimport { ILoggerProvider } from './ILoggerProvider';\r\n\r\nexport class Logger implements ILogger {\r\n    private loggers = new Collections.List<ILogger>();\r\n    private formatter: (any, Error) => string = this.MessageFormatter;\r\n\r\n    constructor(private loggerFactory: DefaultLoggerFactory, private name: string) {\r\n\r\n        let providers = loggerFactory.GetProviders();\r\n        if (providers.Count > 0) {\r\n            providers.ForEach(x => {\r\n                this.loggers.Add(x.CreateLogger(name));\r\n            });\r\n        }\r\n    }\r\n\r\n    /** Aggregates most logging patterns to a single method. */\r\n    Log(level: LogLevel, eventId: number, state: any, error: Error, formatter: (any, Error) => string) {\r\n\r\n        let errors = new Collections.List<Error>();\r\n\r\n        this.loggers.ForEach(logger => {\r\n            try {\r\n                logger.Log(level, eventId, state, error, formatter);\r\n            } catch (error) {\r\n                errors.Add(error);\r\n            }\r\n        });\r\n\r\n        if (errors.Count > 0) {\r\n            throw new Error();             \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the given LogLevel is enabled.\r\n     */\r\n    IsEnabled(level: LogLevel): boolean {\r\n        for (let logger of this.loggers.Items) {\r\n            if (logger.IsEnabled(level))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /** Log to Debug level */\r\n    Debug(message: any): ILogger {\r\n        this.Log(LogLevel.Debug, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Trace level */\r\n    Trace(message: any): ILogger {\r\n        this.Log(LogLevel.Trace, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Info level */\r\n    Info(message: any): ILogger {\r\n        this.Log(LogLevel.Information, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Warn level */\r\n    Warn(message: any): ILogger {\r\n        this.Log(LogLevel.Warning, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Error level */\r\n    Error(message: any): ILogger {\r\n        this.Log(LogLevel.Error, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Fatal level */\r\n    Fatal(message: any): ILogger {\r\n        this.Log(LogLevel.Critical, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add a logger provider\r\n     * @provider\r\n     */\r\n    AddProvider(provider: ILoggerProvider): void {\r\n        let logger = provider.CreateLogger(this.name);\r\n\r\n        this.loggers.Add(logger);\r\n    }\r\n\r\n    private MessageFormatter(state: any, error: Error): string {\r\n        if (!state && !error)\r\n            // throw new Error(`No message or exception details wer found to create a message for the log.`);\r\n            return '';\r\n\r\n        if (!state)\r\n            return error.message;\r\n\r\n        if (!error)\r\n            return state.toString();\r\n\r\n        return `${state}\\n${error}`;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ILoggerFactory } from './ILoggerFactory';\r\nimport { ILogger } from './ILogger';\r\nimport { ILoggerProvider } from './ILoggerProvider';\r\nimport { Logger } from './Logger';\r\n\r\nimport * as Collections from '../collections/index';\r\n\r\n@Injectable()\r\nexport class DefaultLoggerFactory implements ILoggerFactory {\r\n\r\n    private providers = new Collections.List<ILoggerProvider>();\r\n    private loggers = new Collections.Dictionary<string, Logger>();\r\n\r\n    constructor() { }\r\n\r\n    /** Create a logger */\r\n    CreateLogger(name: string): ILogger {\r\n        let logger = this.loggers.Item(name);\r\n\r\n        if (!logger) {\r\n            logger = new Logger(this, name);\r\n            this.loggers.Add(name, logger);\r\n        }\r\n\r\n        return logger;\r\n    }\r\n\r\n    /** \r\n     * Add an logger provider to the logging system\r\n     * @provider logger provider\r\n     */\r\n    AddProvider(provider: ILoggerProvider): void {\r\n        this.providers.Add(provider);\r\n\r\n        for (let item of this.loggers.Items) {\r\n            item.Value.AddProvider(provider);\r\n        }\r\n    }\r\n    /**\r\n     * Get logger providers\r\n     */\r\n    GetProviders(): Collections.IList<ILoggerProvider> {\r\n        return this.providers;\r\n    }\r\n}","import { ILogger } from './ILogger';\r\nimport { LogLevel } from './LogLevel';\r\n\r\nexport abstract class LoggerBase implements ILogger {\r\n    private name: string;\r\n    protected formatter: (any, Error) => string = this.MessageFormatter;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /** Aggregates most logging patterns to a single method. */\r\n    abstract Log(level: LogLevel, eventId: number, state: any, error: Error, formatter: (any, Error) => string);\r\n\r\n    protected get Name(): string {\r\n        return this.name;\r\n\r\n    }\r\n    protected set Name(value: string) {\r\n        this.name = value;\r\n    }\r\n    /**\r\n     * Checks if the given LogLevel is enabled.\r\n     */\r\n    IsEnabled(level: LogLevel): boolean {\r\n        return true;\r\n    }\r\n\r\n    /** Log to Debug level */\r\n    Debug(message: any): ILogger {\r\n        this.Log(LogLevel.Debug, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Trace level */\r\n    Trace(message: any): ILogger {\r\n        this.Log(LogLevel.Trace, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Info level */\r\n    Info(message: any): ILogger {\r\n        this.Log(LogLevel.Information, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Warn level */\r\n    Warn(message: any): ILogger {\r\n        this.Log(LogLevel.Warning, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Error level */\r\n    Error(message: any): ILogger {\r\n        this.Log(LogLevel.Error, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Fatal level */\r\n    Fatal(message: any): ILogger {\r\n        this.Log(LogLevel.Critical, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n\r\n    protected MessageFormatter(state: any, error: Error): string {\r\n        if (!state && !error)\r\n            // throw new Error(`No message or exception details wer found to create a message for the log.`);\r\n            return '';\r\n\r\n        if (!state)\r\n            return error.message;\r\n\r\n        if (!error)\r\n            return JSON.stringify(state); // state.toString();\r\n\r\n        return `${state}\\n${error}`;\r\n    }\r\n}","\r\nimport { LoggerBase } from '../LoggerBase';\r\nimport { LogLevel } from '../LogLevel';\r\n\r\nexport class DebugLogger extends LoggerBase {\r\n\r\n    constructor(name: string, private filter: (message: string, levle: LogLevel) => boolean) {\r\n        super();\r\n        this.Name = name;\r\n    }\r\n\r\n    /**\r\n     * Peform log output to console\r\n     * @param level \r\n     * @param eventId \r\n     * @param state \r\n     * @param error \r\n     * @param formatter \r\n     */\r\n    Log(level: LogLevel, eventId: number, state: any, error: Error, formatter: (any, Error) => string) {\r\n        console.log(`[${new Date().toLocaleTimeString()}] ${this.Name}: ${level}, ${this.formatter(state, error)}`);\r\n    }\r\n}","import { ILoggerProvider } from '../ILoggerProvider';\r\nimport { ILogger } from '../ILogger';\r\nimport { DebugLogger } from './DebugLogger';\r\nimport { LogLevel } from '../LogLevel';\r\n\r\nexport class DebugLoggerProvider implements ILoggerProvider {\r\n\r\n    constructor(private filter?: (message: string, level: LogLevel) => boolean) {\r\n        if (filter == null) {\r\n            filter = (message: string, level: LogLevel) => {\r\n                return true;\r\n            };\r\n        }\r\n    }\r\n\r\n    CreateLogger(name: string): ILogger {\r\n        return new DebugLogger(name, this.filter);\r\n    }\r\n\r\n    Dispose(): void {\r\n\r\n    }\r\n}","import { ILogger } from '../ILogger';\r\nimport { LogLevel } from '../LogLevel';\r\nimport * as Collections from '../../collections/index';\r\nimport { ILoggerProvider } from '../ILoggerProvider';\r\nimport { LoggerBase } from '../LoggerBase';\r\n\r\n\r\nexport class Log4JsLogger extends LoggerBase {\r\n\r\n    constructor(name: string, private log4JsLogger: any) {\r\n        super();\r\n        this.Name = name;\r\n    }\r\n\r\n    /** Aggregates most logging patterns to a single method. */\r\n    Log(level: LogLevel, eventId: number, state: any, error: Error, formatter: (any, Error) => string) {\r\n        let message = this.formatter(state, error);\r\n\r\n        switch (level) {\r\n            case LogLevel.Debug:\r\n                this.log4JsLogger.debug(message);\r\n                break;\r\n            case LogLevel.Trace:\r\n                this.log4JsLogger.trace(message);\r\n                break;\r\n            case LogLevel.Information:\r\n                this.log4JsLogger.info(message);\r\n                break;\r\n            case LogLevel.Warning:\r\n                this.log4JsLogger.warn(message);\r\n                break;\r\n            case LogLevel.Error:\r\n                this.log4JsLogger.error(message);\r\n                break;\r\n            case LogLevel.Critical:\r\n                this.log4JsLogger.fatal(message);\r\n                break;\r\n            default:\r\n                this.log4JsLogger.debug(message);\r\n                break;\r\n        }\r\n\r\n    }\r\n    /**\r\n    * Checks if the given LogLevel is enabled.\r\n    */\r\n    IsEnabled(level: LogLevel): boolean {\r\n        let rawLevel: any;\r\n        switch (level) {\r\n            case LogLevel.Debug:\r\n                rawLevel = { level: 5000, levelStr: 'TRACE' };\r\n                break;\r\n            case LogLevel.Trace:\r\n                rawLevel = { level: 10000, levelStr: 'DEBUG' };\r\n                break;\r\n            case LogLevel.Information:\r\n                rawLevel = { level: 20000, levelStr: 'INFO' };\r\n                break;\r\n            case LogLevel.Warning:\r\n                rawLevel = { level: 30000, levelStr: 'WARN' };\r\n                break;\r\n            case LogLevel.Error:\r\n                rawLevel = { level: 40000, levelStr: 'ERROR' };\r\n                break;\r\n            case LogLevel.Critical:\r\n                rawLevel = { level: 50000, levelStr: 'FATAL' };\r\n                break;\r\n            default:\r\n                rawLevel = { level: 10000, levelStr: 'DEBUG' };\r\n                break;\r\n        }\r\n        return this.log4JsLogger.isLevelEnabled(rawLevel);\r\n    }\r\n}","declare var fs: any;\r\n//import * as fs from 'fs';\r\n/**\r\n * Angular CLI doesn't support import node module right now, have to use\r\n * declare \r\n * https://github.com/angular/angular-cli/issues/3482\r\n */\r\n\r\nexport class File {\r\n    /**\r\n     * Check whether given file is exist.\r\n     * @param filename full file name with path\r\n     */\r\n    static Exists(filename: string): boolean {\r\n        let existed: boolean;\r\n        try {            \r\n            existed = fs.existsSync(filename);\r\n        } catch (error) {\r\n            console.log(error);\r\n            existed = false;\r\n        }\r\n        return existed;\r\n    }\r\n\r\n    static Create(filename: string, content: string): void {\r\n        try {\r\n            fs.writeFileSync(filename, content);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static Delete(filename: string): void {\r\n        try {\r\n            fs.unlinkSync(filename);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static ReadAllText(filename: string, encoding: string): string {\r\n        let content: string;\r\n        try {\r\n            content = fs.readFileSync(filename, encoding);\r\n        } catch (error) {\r\n            console.log(error);\r\n            content = undefined;\r\n        }\r\n        return content;\r\n    }\r\n\r\n    static Copy(source: string, target: string, overwrite: boolean): void {\r\n        try {\r\n            let goodToWrite = false;\r\n            let sourceStream = fs.createReadStream(source);\r\n            if (this.Exists(target)) {\r\n                if (overwrite) {\r\n                    fs.unlinkSync(target);\r\n                    goodToWrite = true;\r\n                }\r\n            } else {\r\n                goodToWrite = true;\r\n            }\r\n\r\n            if (goodToWrite) {\r\n                sourceStream.pipe(fs.createWriteStream(target));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static FindFolder(filename: string) {\r\n        let folder: string = undefined;\r\n        if (filename && this.Exists(filename)) {\r\n            folder = filename.substr(0, filename.lastIndexOf('/'));\r\n            if(String.IsNullOrEmpty(folder)){\r\n                folder = filename.substr(0, filename.lastIndexOf('\\\\'));\r\n            }\r\n        }\r\n        return folder;\r\n    }\r\n}","\r\ndeclare var electron: any;\r\ndeclare var fs: any;\r\ndeclare var path: any;\r\n\r\nexport class Directory {\r\n\r\n    private get App(): any {\r\n        return electron.remote.app;\r\n    }\r\n\r\n    GetUserDataFolder(): string {\r\n        return this.App.getPath('userData');\r\n    }\r\n    GetAppDataFolder(): string {\r\n        return this.App.getPath('appData');\r\n    }\r\n    GetMyDocumentFolder(): string {\r\n        return this.App.getPath('documents');\r\n    }\r\n    GetPictureFolder(): string {\r\n        return this.App.getPath('pictures');\r\n    }\r\n    /** Get current executable file */\r\n    GetCurrentFolder(): string {\r\n        return this.App.getPath('exe');\r\n    }\r\n    /** Get temporary folder */\r\n    GetTempFolder(): string {\r\n        return this.App.getPath('temp');\r\n    }\r\n    GetAppName(): string {\r\n        return this.App.getName();\r\n    }\r\n    ShowItemInFolder(value: string): void {\r\n        electron.remote.shell.showItemInFolder(value);\r\n    }\r\n    Exist(value: string): boolean {\r\n        try {\r\n            fs.accessSync(value, fs.F_OK);\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    EnsureFolderExist(value: string): void {\r\n        if (!this.Exist(value)) {\r\n            try {\r\n                fs.mkdirSync(value);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n    Combine(path1: string, path2: string): string {\r\n        return path.join(path1, path2);\r\n    }\r\n}","import { ILoggerProvider } from '../ILoggerProvider';\r\nimport { ILogger } from '../ILogger';\r\nimport { LogLevel } from '../LogLevel';\r\nimport { Log4JsLogger } from './Log4JsLogger';\r\nimport * as IO from '../../io/index';\r\n\r\ndeclare var log4js: any;\r\ndeclare var electron: any;\r\n\r\nexport class Log4JsLoggerProvider implements ILoggerProvider {\r\n\r\n    constructor(initializer?: () => void, logFileName = 'log.txt') {\r\n\r\n        if (initializer) {\r\n            initializer();\r\n        } else {\r\n            try {\r\n                let directory = new IO.Directory();\r\n                let folder = directory.GetUserDataFolder();\r\n                directory.EnsureFolderExist(folder);\r\n                let file = directory.Combine(folder, logFileName);\r\n\r\n                log4js.configure({\r\n                    appenders: {\r\n                        file: { type: 'file', filename: file, maxLogSize: 20480, backups: 2 },\r\n                        console: { type: 'console', }\r\n                    },\r\n                    categories: {\r\n                        default: { appenders: ['console', 'file'], level: 'debug' }\r\n                    }\r\n                });\r\n            } catch (e) {\r\n                console.log('Not Electron runtime, initialize Log4JS failed.');\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create logger \r\n     * @param name logger name\r\n     */\r\n    CreateLogger(name: string): ILogger {\r\n        let loggerName = name ? name : 'Default';\r\n        let log4Logger = log4js.getLogger(loggerName);\r\n\r\n        return new Log4JsLogger(loggerName, log4Logger);\r\n    }\r\n\r\n    Dispose(): void {\r\n\r\n    }\r\n}","import { ILoggerFactory } from './ILoggerFactory';\r\nimport { DefaultLoggerFactory } from './DefaultLoggerFactory';\r\nimport { DebugLoggerProvider } from './debug/DebugLoggerProvider';\r\nimport { Log4JsLoggerProvider } from './log4js/Log4JsLoggerProvider';\r\n\r\n/** Extension method implementation in TypeScript\r\n * 1. create extension methods class, method declared as static\r\n * 2. declare module for the type to be extented\r\n * 3. hook the method delcaration to implementation\r\n */\r\n\r\n/**\r\n * Extension methods for LoggerFactory\r\n */\r\nexport class LoggerFactoryExtensions {\r\n    /**\r\n     * Add Debugger to logger\r\n     * @param this ILoggerFactory instance\r\n     */\r\n    static AddDebug(this: ILoggerFactory): ILoggerFactory {\r\n        let provider = new DebugLoggerProvider();\r\n        this.AddProvider(provider);\r\n        return this;\r\n    }\r\n    /**\r\n    * Add Log4JS to logging \r\n    * @param this ILoggerFactory instance\r\n    */\r\n    static AddLog4Js(this: ILoggerFactory): ILoggerFactory;\r\n    static AddLog4Js(this: ILoggerFactory, initializer?: () => void, logFileName = 'log.txt'): ILoggerFactory {\r\n        let provider = new Log4JsLoggerProvider(initializer, logFileName);\r\n        this.AddProvider(provider);\r\n        return this;\r\n    }\r\n}\r\n\r\n/** Exten type of the implementation */\r\ndeclare module './DefaultLoggerFactory' {\r\n    interface DefaultLoggerFactory {\r\n        AddDebug: () => ILoggerFactory;\r\n        AddLogJs: (initializer?: () => void, logFileName?: string) => ILoggerFactory;\r\n    }\r\n}\r\n\r\n/** Extend type of the interface */\r\ndeclare module './ILoggerFactory' {\r\n    interface ILoggerFactory {\r\n        AddDebug: () => ILoggerFactory;\r\n        AddLogJs: (initializer?: () => void, logFileName?: string) => ILoggerFactory;\r\n    }\r\n}\r\n\r\n/** hook defination to the implementation */\r\nDefaultLoggerFactory.prototype.AddLogJs = LoggerFactoryExtensions.AddLog4Js;\r\nDefaultLoggerFactory.prototype.AddDebug = LoggerFactoryExtensions.AddDebug;\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport * as Logging from '../logging/index';\r\nimport { IExceptionHandler } from './IExceptionHandler';\r\nimport { LoggerFactoryToken } from '../Tokens';\r\n\r\n@Injectable()\r\nexport class LoggingExceptionHandler implements IExceptionHandler {\r\n    private logger: Logging.ILogger;\r\n\r\n    constructor(@Inject(LoggerFactoryToken) private loggerFactory: Logging.ILoggerFactory) {\r\n        this.logger = loggerFactory.CreateLogger('ExceptionHandler');\r\n    }\r\n\r\n    Handle(exception: Error): void {\r\n        this.logger.Error(exception);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport * as ExceptionHandling from '../exception/index';\r\nimport * as Logging from '../logging/index';\r\n\r\n@Injectable()\r\nexport class HttpClient {\r\n\r\n    private logger: Logging.ILogger;\r\n    private headers: Headers;\r\n    private errorHandler: (error: any) => void;\r\n    OutputDebugging = true;\r\n\r\n    constructor(\r\n        private http: Http,\r\n        private exceptionHandler: ExceptionHandling.LoggingExceptionHandler,\r\n        loggerFactory: Logging.DefaultLoggerFactory) {\r\n\r\n        this.logger = loggerFactory.CreateLogger('HttpClient');\r\n\r\n        this.headers = new Headers();\r\n        this.headers.append('Content-Type', 'application/json');\r\n    }\r\n\r\n    get ErrorHander(): (error: any) => void {\r\n        return this.errorHandler;\r\n    }\r\n    set ErrorHander(value: (error: any) => void) {\r\n        this.errorHandler = value;\r\n    }\r\n\r\n    /**\r\n     * Post data to given url \r\n     * @param url Post url\r\n     * @param data  post data\r\n     */\r\n    Post(url: string, data: any): Promise<any> {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            const body = JSON.stringify(data);\r\n\r\n            if (self.OutputDebugging) {\r\n                self.logger\r\n                    .Debug(`Post data url: ${url}`)\r\n                    .Debug(body);\r\n            }\r\n\r\n            self.http.post(url, body, { headers: self.headers })\r\n                .toPromise()\r\n                .then(response => {\r\n                    resolve(response.json());\r\n                })\r\n                .catch(error => {\r\n                    self.exceptionHandler.Handle(error);\r\n                    if (self.errorHandler)\r\n                        self.errorHandler(error);\r\n                    reject(error);\r\n                }\r\n                );\r\n        });\r\n    }\r\n    /**\r\n     * Post raw string to given url\r\n     * @param url url to post data\r\n     * @param data data in string format\r\n     */\r\n    PostRaw(url: string, data: string): Promise<any> {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            if (self.OutputDebugging) {\r\n                self.logger\r\n                    .Debug(`Post data url: ${url}`)\r\n                    .Debug(data);\r\n            }\r\n\r\n            self.http.post(url, data, { headers: self.headers })\r\n                .toPromise()\r\n                .then(response => {\r\n                    resolve(response.json());\r\n                })\r\n                .catch(error => {\r\n                    self.exceptionHandler.Handle(error);\r\n                    if (self.errorHandler)\r\n                        self.errorHandler(error);\r\n                    reject(error);\r\n                }\r\n                );\r\n        });\r\n    }\r\n    /**\r\n     * Delete reques\r\n     * @param url the url for delete\r\n     */\r\n    Delete(url: string): Promise<any> {\r\n        const self = this;\r\n        return new Promise((resolve, reject) => {\r\n            self.http.delete(url)\r\n                .toPromise()\r\n                .then(response => {\r\n                    resolve(response.json());\r\n                })\r\n                .catch(error => {\r\n                    self.exceptionHandler.Handle(error);\r\n                    if (self.errorHandler)\r\n                        self.errorHandler(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n    /** \r\n     * Get data from given url in async mode\r\n     * @param url the url to get data.\r\n     */\r\n    Get(url: string, useRaw = false): Promise<any> {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (self.OutputDebugging) {\r\n                self.logger.Debug(`Get data url: ${url}`);\r\n            }\r\n            self.http.get(url, {headers: self.headers})\r\n                .toPromise()\r\n                .then(response => {\r\n                    if (useRaw) {\r\n                        resolve(response);\r\n                    } else {\r\n                        resolve(response.json());\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    self.exceptionHandler.Handle(error);\r\n                    if (self.errorHandler)\r\n                        self.errorHandler(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create a new header with given token\r\n     * @param token bearer token value\r\n     */\r\n    UseToken(token: string): HttpClient {\r\n        const headers = this.CreateDefaultHeader();\r\n        if (token) {\r\n            headers.append('Authorization', `bearer ${token}`);\r\n        }\r\n        this.headers = headers;\r\n        return this;\r\n    }\r\n    /**\r\n     * User given header or the default header with content type set to json\r\n     * @param headers given header\r\n     */\r\n    UseHeader(headers: Headers = this.CreateDefaultHeader()): HttpClient {\r\n        if (!headers)\r\n            throw new Error('Given http header is null.');\r\n        this.headers = headers;\r\n        return this;\r\n    }\r\n\r\n    private CreateDefaultHeader(): Headers {\r\n        const headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return headers;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport * as Common from '../common/index';\r\n\r\ndeclare let electron: any;\r\ndeclare let fs: any;\r\ndeclare let Crypts: any;\r\ndeclare let NjPath: any;\r\ndeclare let Mime: any;\r\ndeclare let Path: any;\r\ndeclare let FileSize: any;\r\ndeclare let EventStream: any;\r\ndeclare let EncodingHelper: any;\r\ndeclare const Buffer: any;\r\n\r\n\r\n@Injectable()\r\nexport class ElectronUtil {\r\n    algorithm = 'aes-256-ctr';\r\n    password = 'a3b8d9w34';\r\n\r\n    get Electron(): any {\r\n        return electron;\r\n    }\r\n    get App(): any {\r\n        return electron.remote.app;\r\n    }\r\n    get MainMenu(): any {\r\n        return electron.remote.Menu;\r\n    }\r\n    get IpcClient(): any {\r\n        return electron.ipcRenderer;\r\n    }\r\n    get Remote(): any {\r\n        return electron.remote;\r\n    }\r\n    GetUserDataFolder(): string {\r\n        return this.App.getPath('userData');\r\n    }\r\n    GetAppDataFolder(): string {\r\n        return this.App.getPath('appData');\r\n    }\r\n    GetMyDocumentFolder(): string {\r\n        return this.App.getPath('documents');\r\n    }\r\n    GetPictureFolder(): string {\r\n        return this.App.getPath('pictures');\r\n    }\r\n    GetAppName(): string {\r\n        return this.App.getName();\r\n    }\r\n    OpenFileDialog(filters: any = null): string {\r\n        let dialog = electron.remote.dialog;\r\n        let fileName = dialog.showOpenDialog({\r\n            properties: ['openFile'],\r\n            filters: filters\r\n        });\r\n        return fileName.toString();\r\n    }\r\n    OpenFilesDialog(filters: any = null): string[] {\r\n        let dialog = electron.remote.dialog;\r\n        let fileNames = dialog.showOpenDialog({\r\n            properties: ['openFile', 'multiSelections'],\r\n            filters: filters\r\n        });\r\n        return fileNames;\r\n    }\r\n    TextFileFilter(): any {\r\n        return [{ name: 'Text Documents', extensions: ['txt', 'cs', 'ts', 'js', 'scss', 'css', 'html', 'htm'] }];\r\n    }\r\n    ImageFileFilter(): any {\r\n        return [{ name: 'Images', extensions: ['jpg', 'png', 'gif', 'bmp'] }];\r\n    }\r\n    OpenImageDialog(): string {\r\n        return this.OpenFileDialog(this.ImageFileFilter());\r\n    }\r\n    OpenImagesDialog(): string[] {\r\n        return this.OpenFilesDialog(this.ImageFileFilter());\r\n    }\r\n    SetApplicationMenu(menu: any): void {\r\n        electron.remote.Menu.setApplicationMenu(menu);\r\n    }\r\n\r\n    OpenExternal(url: string): void {\r\n        electron.remote.shell.openExternal(url);\r\n    }\r\n    ShowItemInFolder(path: string): void {\r\n        electron.remote.shell.showItemInFolder(path);\r\n    }\r\n\r\n    ReadFileAsync(file: string): Promise<any> {\r\n        let self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!self.Exist(file))\r\n                reject(new Error(`File doesn't exist.`));\r\n\r\n            fs.readFile(file, 'binary', (error, data) => {\r\n                        if (error)\r\n                            reject(error);\r\n\r\n                        let content = EncodingHelper.decode(data, 'utf8');\r\n\r\n                        resolve(content);\r\n                    });\r\n        });\r\n    }\r\n    ReadFileLineByLine(file: string): Promise<string> {\r\n        let self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            let lines = [];\r\n            let stream = fs.createReadStream(file)\r\n                .pipe(EventStream.split())\r\n                .pipe(EventStream.mapSync(\r\n                    function (line) {\r\n                        stream.pause();\r\n\r\n                        lines.push(line);\r\n\r\n                        stream.resume();\r\n                    })\r\n                    .on('error', function () {\r\n                        reject('Read file error.');\r\n                    })\r\n                    .on('end', function () {\r\n                        resolve(lines.join(''));\r\n                    })\r\n                );\r\n        });\r\n    }\r\n    ReadFileAsBase64Async(file: string): Promise<string> {\r\n        let self = this;\r\n        let fullPath = this.NormalizePath(file.toString());\r\n        console.log('Full path: ' + fullPath);\r\n        return new Promise(function (resolve, reject) {\r\n            if (!self.Exist(fullPath))\r\n                reject(new Error(`File doesn't exist.' + fullPath`));\r\n\r\n            console.log('File to open ' + fullPath);\r\n\r\n            let data = fs.readFileSync(fullPath, 'base64');\r\n            let buffer = new Buffer(data, 'base64');\r\n            let base64Data = buffer.toString('base64');\r\n            resolve(base64Data);\r\n        });\r\n    }\r\n    ReadFileAsBase64(file: string): string {\r\n        let self = this;\r\n        let fullPath = this.NormalizePath(file.toString());\r\n        if (!self.Exist(fullPath))\r\n            throw Error(`File doesn't exist.${fullPath}`);\r\n\r\n        let data = fs.readFileSync(fullPath, 'base64');\r\n        let buffer = new Buffer(data, 'base64');\r\n        let base64Data = buffer.toString('base64');\r\n        return base64Data;\r\n\r\n    }\r\n    ReadFileStream(file: string): any {\r\n        return fs.createReadStream(file);\r\n    }\r\n\r\n    WriteFileAsync(file: string, data: any): Promise<any> {\r\n        console.log('Write data to file.');\r\n        //console.log(file);\r\n        //console.log(data);\r\n        let self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            fs.writeFile(file, data, (error) => {\r\n                if (error)\r\n                    reject(error);\r\n\r\n                resolve(true);\r\n            });\r\n        });\r\n    }\r\n    GetMimeType(file: string): string {\r\n        try {\r\n            return Mime.lookup(file);\r\n        } catch (error) {\r\n            console.log('Get MIME error: ' + error);\r\n        }\r\n    }\r\n    GetFilename(file: string): string {\r\n        try {\r\n            return Path.basename(file);\r\n        } catch (error) {\r\n            console.log('Get file name error: ' + error);\r\n        }\r\n    }\r\n    GetFilenameWithoutExtension(file: string): string {\r\n        let filename = this.GetFilename(file);\r\n        return Path.parse(filename).name;\r\n    }\r\n    GetFileSize(file: string): number {\r\n        let stats = fs.statSync(file);\r\n        return stats['size'];\r\n    }\r\n    GetFileSizeString(file: string): string {\r\n        try {\r\n            let size = this.GetFileSize(file);\r\n            let sizeString = FileSize(size);\r\n            return sizeString;\r\n        } catch (error) {\r\n            console.log('Get file name error: ' + error);\r\n        }\r\n    }\r\n    ConverToFileSizeString(size: number): string {\r\n        return FileSize(size);\r\n    }\r\n    Encrypt(value: string): string {\r\n        if (!value)\r\n            return '';\r\n        let cipher = Crypts.createCipher(this.algorithm, this.password);\r\n        let crypted = cipher.update(value, 'utf8', 'hex');\r\n        crypted += cipher.final('hex');\r\n        return crypted;\r\n    }\r\n    Decrypt(value: string): string {\r\n        if (!value)\r\n            return '';\r\n        let decipher = Crypts.createDecipher(this.algorithm, this.password)\r\n        let dec = decipher.update(value, 'hex', 'utf8')\r\n        dec += decipher.final('utf8');\r\n        return dec;\r\n    }\r\n\r\n    Exist(path: string): boolean {\r\n        try {\r\n            fs.accessSync(path, fs.F_OK);\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    EnsureFolderExist(path: string): void {\r\n        if (!this.Exist(path)) {\r\n            try {\r\n                fs.mkdirSync(path);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    CombinePath(base: string, paths: string): string {\r\n        let value: string;\r\n        try {\r\n            value = NjPath.join(base, paths);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        return value;\r\n    }\r\n    NormalizePath(path: string): string {\r\n        return NjPath.normalize(path);\r\n    }\r\n\r\n    CreateGuidString(): string {\r\n        let guid = Common.Guid.New();\r\n        return guid.Value;\r\n    }\r\n    CreateGuid(): Common.Guid {\r\n        return Common.Guid.New();\r\n    }\r\n}","\r\nimport { IServiceProvider } from './IServiceProvider';\r\nimport { Injectable, Injector } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AngularServiceProvider implements IServiceProvider {\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(private injector: Injector) {\r\n\r\n    }\r\n    /**\r\n     * Gets the service object of the specified type.\r\n     */\r\n    GetService(type: any): any {\r\n        return this.injector.get(type);\r\n    }\r\n\r\n}","import { Injector, Type, InjectionToken, Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ServiceLocator {\r\n    \r\n    private static currentProvider: Injector = undefined;\r\n\r\n    static SetLocatorProvider(provider: () => Injector): void {\r\n        ServiceLocator.currentProvider = provider();\r\n    }\r\n\r\n    static GetService<T>(token: Type<T> | InjectionToken<T>): T {\r\n        return ServiceLocator.currentProvider.get(token);\r\n    }\r\n\r\n}","\r\ninterface String {\r\n    ToLower: () => string;\r\n    ToUpper: () => string;\r\n    Trim: () => string;\r\n    Normalize: () => string;\r\n    StartsWith: (part: string) => boolean;\r\n    EndsWith: (part: string) => boolean;\r\n    CapFirst: () => string;\r\n    CapWords: () => string;\r\n    TruncateWords: (number: number) => string;\r\n    Contains: (value: string) => boolean;\r\n    Slugify: (lower?: boolean) => string;\r\n    StripHtml: () => string;\r\n    EscapeHtml: () => string;\r\n    CountWord: () => number;\r\n    HtmlToText: () => string;\r\n    ValidateEmail: () => boolean;\r\n    IndexOf: (value: string) => number;\r\n    LastIndexOf: (value: string) => number;\r\n    SubString: (start: number, length: number) => string;\r\n}\r\ninterface StringConstructor {\r\n    IsNullOrEmpty: (value: any) => boolean;\r\n    IsValid: (value: any) => boolean;\r\n    Empty: () => string;\r\n}\r\n\r\n\r\nString.prototype.ToLower = function (): string {\r\n    return this.toLowerCase();\r\n};\r\nString.prototype.ToUpper = function (): string {\r\n    return this.toUpperCase();\r\n};\r\nString.prototype.Trim = function (): string {\r\n    return this.replace(/^\\s+|\\s+$/g, '');\r\n};\r\nString.prototype.Normalize = function (): string {\r\n    return this.replace(/^\\s*|\\s(?=\\s)|\\s*$/g, '');\r\n};\r\nString.prototype.StartsWith = function (part: string): boolean {\r\n    return this.slice(0, part.length) === part;\r\n};\r\nString.prototype.EndsWith = function (part: string): boolean {\r\n    return this.slice(part.length) === part;\r\n};\r\nString.prototype.CapFirst = function (): string {\r\n    if (this.length === 1) {\r\n        return this.toUpperCase();\r\n    } else if (this.length > 0) {\r\n        let regex: RegExp = /^(\\(|\\[|'|')/;\r\n        if (regex.test(this)) {\r\n            return this.substring(0, 2).toUpperCase() + this.substring(2);\r\n        } else {\r\n            return this.substring(0, 1).toUpperCase() + this.substring(1);\r\n        }\r\n    }\r\n    return null;\r\n};\r\nString.prototype.CapWords = function (): string {\r\n    let regexp: RegExp = /\\s/;\r\n    let words = this.split(regexp);\r\n    if (words.length === 1) {\r\n        return words[0].capFirst();\r\n    } else if (words.length > 1) {\r\n        let result = '';\r\n        for (let i = 0; i < words.length; i++) {\r\n            if (words[i].capFirst() !== null) {\r\n                result += words[i].capFirst() + ' ';\r\n            }\r\n        }\r\n        result.trim();\r\n        return result;\r\n    }\r\n    return null;\r\n};\r\nString.prototype.TruncateWords = function (num: number): string {\r\n    let words: Array<string> = this.split(/\\s+/);\r\n    if (words.length > num) {\r\n        return words.slice(0, num).join(' ');\r\n    }\r\n    return words.join(' ');\r\n};\r\nString.prototype.StripHtml = function (): string {\r\n    let content: string = this.replace(/<[\\/]?([^> ]+)[^>]*>/g, '');\r\n    content = content.replace(/<style[^>]*>[\\s\\S]*?<\\/style>/ig, '');\r\n    content = content.replace(/<script[^>]*>[\\s\\S]*?<\\/script>/ig, '');\r\n    content = content.replace(/<!--[\\s\\S]*?-->/g, '');\r\n    content = content.replace('&nbsp;', ' ');\r\n    content = content.replace('&amp;', '&');\r\n    return content;\r\n};\r\nString.prototype.EscapeHtml = function (): string {\r\n    let content: string = this.replace(/'/g, '&quot;');\r\n    content.replace(/&(?!\\w+;)/g, '&amp;');\r\n    content.replace(/>/g, '&gt;');\r\n    content.replace(/</g, '&lt;');\r\n    return content;\r\n};\r\nString.prototype.Contains = function (val: string): boolean {\r\n    if (this.indexOf(val) !== -1) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nString.prototype.Slugify = function (lower: boolean = true): string {\r\n    if (!lower) {\r\n        return this.lower().normalize().replace(/[^a-z0-9]/gi, '-');\r\n    }\r\n    return this.normalize().replace(/[^a-z0-9]/gi, '-');\r\n};\r\nString.prototype.HtmlToText = function (): string {\r\n    const output = this.replace(/<[^>]*>?/g, '');\r\n    return output;\r\n}\r\nString.prototype.CountWord = function (): number {\r\n    let content = this;\r\n    if (!content)\r\n        return 0;\r\n    let words = '', symbols = '';\r\n    content.replace(/([\\w\\s]*)([^\\w;,.''{}\\[\\]+_)(*&\\^%$#@!~\\/?]*)/g, (a, b, c): string => {\r\n        words += b;\r\n        symbols += c;\r\n\r\n        return a;\r\n    });\r\n\r\n    let count = words.trim().split(' ').length;\r\n    if (symbols)\r\n        count += symbols.replace(' ', '').split('').length;\r\n\r\n    return count;\r\n}\r\nString.prototype.ValidateEmail = function (): boolean {\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(this);\r\n}\r\nString.prototype.IndexOf = function (value: string): number {\r\n    return this.indexOf(value);\r\n}\r\nString.prototype.LastIndexOf = function (value: string): number {\r\n    return this.lastIndexOf(value);\r\n}\r\nString.prototype.SubString = function (start: number, length: number): string {\r\n    return this.substring(start, length);\r\n}\r\n\r\nString.IsNullOrEmpty = function (value: any): boolean {\r\n    if (value === undefined || value === null) {\r\n        return true;\r\n    }\r\n    let text = value.toString();\r\n    if (text === '') {\r\n        return true;\r\n    }\r\n    if (text && text.trim() === '') {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nString.IsValid = function (value: any): boolean {\r\n    return !String.IsNullOrEmpty(value);\r\n}\r\nString.Empty = function (): string {\r\n    return '';\r\n}\r\n\r\n\r\n","\r\n\r\ninterface Array<T> {\r\n    Add: (item: T) => void;\r\n    Empty: () => Array<any>;\r\n    IsEmpty: () => boolean;\r\n    Any: (predicate?: (source: T) => boolean) => boolean;\r\n    Count: () => number;\r\n    Max: () => number;\r\n    Min: () => number;\r\n    OrderBy: (keySelector: (source: T) => any) => Array<T>;\r\n    OrderByDescending: (keySelector: (source: T) => any) => Array<T>;\r\n    Where: (predicate: (source: T) => boolean) => Array<T>;\r\n    Select: <TResult>(selector: (source: T) => TResult) => Array<TResult>;\r\n    ElementAt: (index: number) => any;\r\n    FirstOrDefault: (predicate?: (source: T) => boolean) => T;\r\n    ForEach: (callback: Function) => void;\r\n    Remove: (item: any) => any;\r\n    Contains: (partial: string, strict: boolean) => boolean;\r\n    IndexOfPartial: (partial: string) => number;\r\n    ToObjectArray: (objName: string) => Array<any>;\r\n}\r\n\r\n\r\nArray.prototype.Add = function (item: any): void {\r\n    this.push(item);\r\n};\r\nArray.prototype.Empty = function (): Array<any> {\r\n    return this.splice(0, this.length);\r\n};\r\nArray.prototype.IsEmpty = function (): boolean {\r\n    if (this.length === 0) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nArray.prototype.ElementAt = function (index: number): any {\r\n    return this[index];\r\n};\r\nArray.prototype.FirstOrDefault = function (predicate?: (source: any) => boolean): any {\r\n    let result = null;\r\n\r\n    if (predicate) {\r\n        for (let item of this) {\r\n            if (predicate(item)) {\r\n                result = item;\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        result = this[0];\r\n    }\r\n\r\n    return result;\r\n};\r\nArray.prototype.Max = function (): number {\r\n    let max = this.reduce(function (a, b) {\r\n        return Math.max(a, b);\r\n    });\r\n    return max;\r\n};\r\nArray.prototype.Min = function (): number {\r\n    let min = this.reduce(function (a, b) {\r\n        return Math.min(a, b);\r\n    });\r\n    return min;\r\n};\r\nArray.prototype.Count = function (): number {\r\n    return this.length;\r\n};\r\nArray.prototype.Any = function (predicate?: (source: any) => boolean): boolean {\r\n    if (predicate) {\r\n        for (let item of this) {\r\n            if (predicate(item))\r\n                return true;\r\n        }\r\n        return false;\r\n    } else {\r\n        if (this.length === 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n};\r\nArray.prototype.Where = function (predicate: (source: any) => boolean): Array<any> {\r\n    return this.filter(x => {\r\n        return predicate(x);\r\n    });\r\n};\r\nArray.prototype.Select = function <TResult> (selector: (source: any) => TResult): Array<TResult> {\r\n    let result = [];\r\n    for (let item of this) {\r\n        result.push(selector(item));\r\n    }\r\n    return result;\r\n};\r\nArray.prototype.OrderBy = function (keySelector: (source: any) => any): Array<any> {\r\n    return this.sort(function (a, b) {\r\n        return keySelector(a) > keySelector(b);\r\n    });\r\n};\r\nArray.prototype.OrderByDescending = function (keySelector: (source: any) => any): Array<any> {\r\n    return this.sort(function (a, b) {\r\n        return keySelector(b) - keySelector(a);\r\n    });\r\n};\r\nArray.prototype.ForEach = function (callback: Function): void {\r\n    for (let i = 0; i < this.length; i++) {\r\n        callback(i, this[i]);\r\n    }\r\n};\r\nArray.prototype.Remove = function (item: any): any {\r\n    let index = this.indexOf(item);\r\n    if (index !== -1) {\r\n        return this.splice(index, 1);\r\n    }\r\n    return null;\r\n};\r\nArray.prototype.Contains = function (partial: string, strict: boolean): boolean {\r\n    for (let i = 0; i < this.length; i++) {\r\n        if (!strict && this[i].contains(partial)) {\r\n            return true;\r\n        }\r\n        if (strict && this[i] === partial) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nArray.prototype.IndexOfPartial = function (partial: string) {\r\n    for (let i = 0; i < this.length; i++) {\r\n        if (this[i].contains(partial)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n};\r\n/*\r\n * There are frameworks that auto-generate JSON based on data schemas, but sometimes they\r\n * return data in inconsistent ways. For example, an array of strings might be returned\r\n * instead of an array of objects containing strings, etc. because the underlying data at the time\r\n * only cotains the string value, but when other data is present (in the database, etc.),\r\n * it will return the object array. Certain convenience methods are necessary to force proper formatting.\r\n */\r\n\r\nArray.prototype.ToObjectArray = function (objName: string): Array<any> {\r\n    if (objName === undefined || objName === null) {\r\n        throw new Error('Error: Property name must be provided for conversion.');\r\n    }\r\n    let items: any = this;\r\n    if (typeof (items[0]) === 'string' || typeof (items[0]) === 'number' || typeof (items[0]) === 'boolean') {\r\n        for (let i = 0; i < items.length; i++) {\r\n            let val: any = items[i];\r\n            items[i] = {};\r\n            items[i][objName] = val;\r\n        }\r\n        return items;\r\n    } else {\r\n        return this;\r\n    }\r\n};\r\n","interface Document {\r\n    SelectOne: (selector: string) => Element;\r\n    SelectAll: (selector: string) => NodeListOf<Element>;\r\n    Create: (html: string) => Element;\r\n}\r\n\r\ninterface NodeList {\r\n    ForEach: (callback: Function) => void;\r\n    Last: () => Element;\r\n}\r\n\r\ninterface Element {\r\n    Attribute: (name: string, value?: string) => string & Element;\r\n    Parent: () => Element;\r\n    First: (selector: string) => Element;\r\n    Append: (html: string) => Element;\r\n    Empty: () => Element;\r\n    Drop: () => Element;\r\n    RemoveEvent: (event: string) => Element;\r\n    AddEvent: (event: string, callback: Function, overwrite?: boolean) => Element;\r\n    Show: (t?: string) => Element;\r\n    Hide: () => Element;\r\n    Toggle: () => Element;\r\n    AddClass: (className: string) => Element;\r\n    RemoveClass: (className: string) => Element;\r\n    AsString: () => string;\r\n    SelectOne: (selector: string) => Element;\r\n    SelectAll: (selector: string) => NodeListOf<Element>;\r\n    HasMatches: (selector: string) => boolean;\r\n    Up: (selector: string) => Element;\r\n    IsHidden: () => Boolean;\r\n}\r\n\r\ninterface HTMLElement {\r\n    Clean: () => HTMLElement;\r\n    Value: (val?: string) => string;\r\n}\r\n\r\n\r\n\r\nDocument.prototype.SelectOne = function (selector: string): Element {\r\n    return document.querySelector(selector);\r\n};\r\n\r\nDocument.prototype.SelectAll = function (selector: string): NodeListOf<Element> {\r\n    return document.querySelectorAll(selector);\r\n};\r\n\r\nDocument.prototype.Create = function (html: string): Element {\r\n    let placeholder = document.createElement('div');\r\n    placeholder.innerHTML = html;\r\n    return <Element>placeholder.childNodes[0];\r\n};\r\n\r\nNodeList.prototype.ForEach = function (callback: Function): void {\r\n    for (let i = 0; i < this.length; i++) {\r\n        callback(i, this[i]);\r\n    }\r\n};\r\n\r\nNodeList.prototype.Last = function (): Element {\r\n    return this[this.length - 1];\r\n};\r\n\r\nElement.prototype.SelectOne = function (selector: string): Element {\r\n    return this.querySelector(selector);\r\n};\r\n\r\nElement.prototype.SelectAll = function (selector: string): NodeListOf<Element> {\r\n    return this.querySelectorAll(selector);\r\n};\r\n\r\nElement.prototype.Attribute = function (name: string, value?: string): string & Element {\r\n    if (value != null) {\r\n        this.setAttribute(name, value);\r\n        return this;\r\n    }\r\n    return this.getAttribute(name);\r\n};\r\n\r\nElement.prototype.Parent = function (): Element {\r\n    return this.parentNode;\r\n};\r\n\r\nElement.prototype.HasMatches = function (selector: string): boolean {\r\n    if ((<any>this).matches != null) {\r\n        return (<any>this).matches(selector);\r\n    } else if ((<any>this).msMatchesSelector != null) {\r\n        return (<any>this).msMatchesSelector(selector);\r\n    }\r\n    return false;\r\n};\r\n\r\nElement.prototype.Up = function (selector: string): Element {\r\n    let el: Element = this;\r\n    if ((<any>el).closest != null) {\r\n        return (<any>el).closest(selector);\r\n    } else {\r\n        while (el) {\r\n            if (el.HasMatches(selector)) {\r\n                return <Element>el;\r\n            }\r\n            el = el.parentElement;\r\n        }\r\n    }\r\n};\r\n\r\nElement.prototype.First = function (selector: string): Element {\r\n    function _decend(node: Element): Element {\r\n        let _currentNode = node;\r\n        let nodeList: NodeList = _currentNode.childNodes;\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            if (nodeList[i].nodeName.ToLower() === selector.ToLower()) {\r\n                return <Element>nodeList[i];\r\n            }\r\n        }\r\n        _decend(_currentNode);\r\n    }\r\n    return _decend(this);\r\n};\r\n\r\nElement.prototype.Append = function (html: string): Element {\r\n    this.insertAdjacentHTML('beforeend', html);\r\n    return this;\r\n};\r\n\r\nElement.prototype.Empty = function (): Element {\r\n    this.innerHTML = '';\r\n    return this;\r\n};\r\n\r\nElement.prototype.Drop = function (): Element {\r\n    let self = this;\r\n    let parent = self.parentNode;\r\n    parent.removeChild(self);\r\n    return self;\r\n};\r\n\r\nElement.prototype.RemoveEvent = function (event: string): Element {\r\n    let evt = this[`on${event}`] || this[`${event}`];\r\n    try {\r\n        this.removeEventListener(event, evt);\r\n    } catch (e) { }\r\n    try {\r\n        this.detachEvent(`on${event}`, evt);\r\n    } catch (e) { }\r\n    this[`on${event}`] = null;\r\n    this[`${event}`] = null;\r\n    return this;\r\n};\r\n\r\nElement.prototype.AddEvent = function (event: string, callback: Function, overwrite: boolean = false): Element {\r\n    if (overwrite) {\r\n        this[`on${event}`] = callback;\r\n    } else {\r\n        this.addEventListener(event, callback);\r\n    }\r\n    return this;\r\n};\r\n\r\nElement.prototype.Show = function (t: string = 'block'): Element {\r\n    let styles = this.attribute('style');\r\n    if (styles != null && styles !== '') {\r\n        return this.attribute('style', styles.setValueByKey('display', t));\r\n    }\r\n    return this.attribute('style', `display:${t}`);\r\n};\r\n\r\nElement.prototype.Hide = function (): Element {\r\n    let styles = this.attribute('style');\r\n    if (styles != null && styles !== '') {\r\n        return this.attribute('style', styles.setValueByKey('display', 'none'));\r\n    }\r\n    return this.attribute('style', `display:none;`);\r\n};\r\nElement.prototype.Toggle = function (): Element {\r\n    if (!(this.offsetWidth || this.offsetHeight || this.getClientRects().length)) {\r\n        return this.show();\r\n    } else {\r\n        return this.hide();\r\n    }\r\n};\r\n\r\nElement.prototype.AddClass = function (className: string): Element {\r\n    this.className += ` ${className}`;\r\n    this.className = this.className.trim();\r\n    return this;\r\n};\r\n\r\nElement.prototype.RemoveClass = function (className: string): Element {\r\n    this.className = (<string>this.className).replace(className, '').normalize();\r\n    return this;\r\n};\r\n\r\nElement.prototype.AsString = function (): string {\r\n    return this.outerHTML;\r\n};\r\n\r\nElement.prototype.IsHidden = function (): boolean {\r\n    return (this.offsetParent === null);\r\n};\r\n\r\nHTMLElement.prototype.Clean = function (): HTMLElement {\r\n    this.value = this.value.replace(/\\r?\\n/g, '\\r\\n');\r\n    return this;\r\n};\r\n\r\nHTMLElement.prototype.Value = function (val?: string): string {\r\n    if (val != null) {\r\n        if (this.nodeName.lower() === 'textarea') {\r\n            this.innerHTML = val;\r\n            try {\r\n                this.innerText = val;\r\n            } catch (e) { }\r\n            try {\r\n                this.value = val;\r\n            } catch (e) { }\r\n        } else if (this.nodeName.lower() === 'input') {\r\n            switch (this.attribute('type').lower()) {\r\n                case 'file':\r\n                    break;\r\n                case 'checkbox':\r\n                    if (<boolean><any>val) {\r\n                        this.checked = true;\r\n                    } else {\r\n                        this.checked = false;\r\n                    }\r\n                    break;\r\n                case 'radio':\r\n                    let name: string = this.attribute('name');\r\n                    let radios: NodeListOf<Element> = document.SelectAll(`input[type='radio'][name='${name}']`);\r\n                    radios.ForEach(function (idx, elem: Element) {\r\n                        if (elem.Attribute('value') === val) {\r\n                            (<HTMLInputElement>elem).checked = true;\r\n                        } else {\r\n                            (<HTMLInputElement>elem).checked = false;\r\n                        }\r\n                    });\r\n                    break;\r\n                default:\r\n                    this.value = val;\r\n                    break;\r\n            }\r\n        } else if (this.nodeName.lower() === 'select') {\r\n            for (let i = 0; i < this.options.length; i++) {\r\n                if (this.options[i].value === val) {\r\n                    this.selectedIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        if (this.nodeName.lower() === 'textarea') {\r\n            try {\r\n                return this.value;\r\n            } catch (e) { }\r\n            if (this.innerText != null && (<string>this.innerText).trim() !== '') {\r\n                return this.innerText;\r\n            } else if (this.innerHTML != null && (<string>this.innerHTML).trim() !== '') {\r\n                return this.innerHTML;\r\n            }\r\n            return null;\r\n        } else if (this.nodeName.lower() === 'input') {\r\n            switch (this.attribute('type').lower()) {\r\n                case 'checkbox':\r\n                    return this.checked;\r\n                case 'radio':\r\n                    let name: string = this.attribute('name');\r\n                    return (<HTMLInputElement>document.SelectOne(`input[type='radio'][name='${name}']:checked`)).value;\r\n                default:\r\n                    return this.value;\r\n            }\r\n        } else if (this.nodeName.lower() === 'select') {\r\n            return this.options[this.selectedIndex].value;\r\n        }\r\n    }\r\n    return val;\r\n};","\r\nexport function IsDefined(value: any): boolean {\r\n    return typeof value !== 'undefined' && value !== null;\r\n}\r\n\r\nexport function IsObject(item: any): boolean {\r\n    return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\nexport function MergeDeep(target: any, source: any): any {\r\n    target = JSON.parse(JSON.stringify(target));\r\n    source = JSON.parse(JSON.stringify(source));\r\n    let output = Object.assign({}, target);\r\n    if (IsObject(target) && IsObject(source)) {\r\n        Object.keys(source).forEach((key: any) => {\r\n            if (IsObject(source[key])) {\r\n                if (!(key in target)) {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                } else {\r\n                    output[key] = MergeDeep(target[key], source[key]);\r\n                }\r\n            } else {\r\n                Object.assign(output, { [key]: source[key] });\r\n            }\r\n        });\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Clone given object\r\n * @param source \r\n */\r\nexport function Clone(source: any): any {\r\n    if (!source) {\r\n        return source;\r\n    }\r\n    return JSON.parse(JSON.stringify(source));\r\n}\r\n/**\r\n * \r\n * @param source \r\n * @param target \r\n */\r\nexport function CompareProperties(source: any, target: any): boolean {\r\n    if (source === undefined && target === undefined) {\r\n        return true;\r\n    }\r\n    if (Object.prototype.toString.call(source) === '[object Array]') {\r\n        let arrayX = source as Array<any>;\r\n        let arrayY = target as Array<any>;\r\n        if (arrayX.length !== arrayY.length) {\r\n            return false;\r\n        }\r\n\r\n        for (let index = 0; index < arrayX.length; index++) {\r\n            console.log(arrayX[index]);\r\n            console.log(arrayY[index]);\r\n\r\n            if (CompareProperties(arrayX[index], arrayY[index] === false)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n    } else {\r\n        let names = Object.getOwnPropertyNames(source);\r\n        // console.log(names);\r\n        for (let name of names) {\r\n            let property = Object.getOwnPropertyDescriptor(target, name);\r\n            if (!property) {\r\n                return false;\r\n            } else {\r\n                if (Object.prototype.toString.call(source) === '[object Array]') {\r\n                    if (CompareProperties(property.value, source[name] === false)) {\r\n                        return false;\r\n                    }\r\n                } else if (property.value !== source[name] && property.value.toString() !== source[name].toString()) {\r\n                    // console.log(`Property ${name} ${typeof property.value}: '${property.value}', '${source[name]}'`);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}","\r\n/**\r\n * Delay give ms\r\n * @param elapse length of time\r\n */\r\nexport const Delay = function (elapse: number): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(function () {\r\n            resolve();\r\n        }, elapse);\r\n    });\r\n}","import { Action } from './Action';\r\nimport * as Collections from '../collections/index';\r\n\r\nimport { IAction } from './IAction';\r\n\r\nexport interface IActionRepository {\r\n    readonly Actions: Collections.List<IAction>;\r\n\r\n    Register(action: IAction): IActionRepository;\r\n    Find(expression: (action: IAction) => boolean): Collections.IEnumerable<IAction>;\r\n    FindOne(name: string): IAction;\r\n}\r\n\r\n\r\nexport class ActionRepository implements IActionRepository {\r\n    readonly Actions = new Collections.List<IAction>();\r\n\r\n    Register(action: IAction): ActionRepository {\r\n        if (action) {\r\n            this.Actions.Add(action);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    Find(expression: (action: IAction) => boolean): Collections.IEnumerable<IAction> {\r\n        return this.Actions.FindAll(expression);\r\n    }\r\n\r\n    FindOne(name: string): IAction {\r\n        return this.Actions.FirstOrDefault(x => x.Name === name);\r\n    }\r\n}","import { IAction } from './IAction';\r\n\r\nexport class Action implements IAction {\r\n    Name: string;\r\n    Group: string;\r\n    Tag: any;\r\n\r\n    constructor(private delegate: (args?: any) => void) { }\r\n\r\n    Invoke(args?: any): void {\r\n        if (this.delegate)\r\n            this.delegate(args);\r\n    }\r\n}","import { IMessageMediator } from './IMessageMediator';\r\nimport * as Actions from '../action/index';\r\nimport * as Collections from '../collections/index';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MessageMediator implements IMessageMediator {\r\n    private mediators = new Collections.Dictionary<string, Collections.Dictionary<string, Actions.IAction>>();\r\n\r\n    get Mediators(): Collections.Dictionary<string, Collections.Dictionary<string, Actions.IAction>> {\r\n        return this.mediators;\r\n    }\r\n\r\n    /**\r\n     * Register an event\r\n     */\r\n    RegisterHandler(topic: string, id: string, action: Actions.IAction): IMessageMediator {\r\n        let values = this.mediators.Item(topic);\r\n        if (values == null) {\r\n            values = new Collections.Dictionary<string, Actions.IAction>();\r\n            this.mediators.Add(topic, values);\r\n        }\r\n\r\n        values.Add(id, action);\r\n\r\n        return this;\r\n    }\r\n    /**\r\n     * Unregister an event \r\n     */\r\n    UnregisterHandler(topic: string, id: string): IMessageMediator {\r\n        let values = this.mediators.Item(topic);\r\n        if (values != null) {\r\n            values.Remove(id);\r\n            if (values.Count === 0) {\r\n                this.mediators.Remove(topic);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Trigger an event with given parameter\r\n     */\r\n    SendMessage(topic: string, param?: any): boolean;\r\n    SendMessage<T>(topic: string, message?: T): boolean {\r\n\r\n        let result = true;\r\n        let values = this.mediators.Item(topic);\r\n        if (values != null) {\r\n            for (let item of values.Values()) {\r\n                try {\r\n                    item.Invoke(message);\r\n                } catch (error) {\r\n                    result = false;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","import { Injectable, ViewContainerRef, ComponentFactoryResolver, ComponentRef, Type, InjectionToken } from '@angular/core';\r\nimport { IComponentCreator } from './IComponentCreator';\r\n\r\nexport const ComponentCreatorToken = new InjectionToken('./ICommponentCreator');\r\n\r\n@Injectable()\r\nexport class ComponentCreator implements IComponentCreator {\r\n\r\n    private mViewContainer: ViewContainerRef;\r\n    private mComponentFactoryResolver: ComponentFactoryResolver;\r\n\r\n    get ViewContainer(): ViewContainerRef {\r\n        return this.mViewContainer;\r\n    }\r\n    set ViewContainer(value: ViewContainerRef) {\r\n        this.mViewContainer = value;\r\n    }\r\n\r\n    get ComponentFactoryResolver(): ComponentFactoryResolver {\r\n        return this.mComponentFactoryResolver;\r\n    }\r\n    set ComponentFactoryResolver(value: ComponentFactoryResolver) {\r\n        this.mComponentFactoryResolver = value;\r\n    }\r\n\r\n    /**\r\n    * Initialize\r\n    */\r\n    Initialize(viewContainer: ViewContainerRef, resolver: ComponentFactoryResolver): void {\r\n        this.mViewContainer = viewContainer;\r\n        this.mComponentFactoryResolver = resolver;\r\n    }\r\n\r\n\r\n    CreateComponent(componentType: Type<{}>, viewContainer?: ViewContainerRef): ComponentRef<{}> {\r\n        try {\r\n            let factory = this.ComponentFactoryResolver.resolveComponentFactory(componentType);\r\n\r\n            let component = viewContainer ?\r\n                viewContainer.createComponent(factory) :\r\n                this.ViewContainer.createComponent(factory);\r\n\r\n            return component;\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","\r\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { HttpModule, JsonpModule } from '@angular/http';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport * as Common from './components';\r\n\r\nconst components = [\r\n\r\n];\r\n\r\nconst directives = [\r\n    Common.InvokeCommandDirective\r\n];\r\n\r\nconst providers = [\r\n    Common.DefaultLoggerFactory,\r\n    Common.HttpClient,\r\n    Common.LoggingExceptionHandler,\r\n    Common.CommandRepository,\r\n    Common.CommandDescriptorRepository,\r\n    Common.ElectronUtil,\r\n    Common.AngularServiceProvider,\r\n    Common.ServiceLocator,\r\n    Common.MessageMediator,\r\n    Common.ComponentCreator,\r\n    Common.OptionRepository,\r\n\r\n    { provide: Common.ActionRepositoryToken, useClass: Common.ActionRepository },\r\n    { provide: Common.CommandRepositoryToken, useClass: Common.CommandRepository },\r\n    { provide: Common.CommandDescriptorRepositoryToken, useClass: Common.CommandDescriptorRepository },\r\n    { provide: Common.ExceptionHandlerToken, useClass: Common.LoggingExceptionHandler },\r\n    { provide: Common.LoggerFactoryToken, useClass: Common.DefaultLoggerFactory },\r\n    { provide: Common.MessageMediatorToken, useClass: Common.MessageMediator },\r\n    { provide: Common.ComponentCreatorToken, useClass: Common.ComponentCreator },\r\n    { provide: Common.OptionRepositoryToken, useClass: Common.OptionRepository },\r\n    { provide: Common.WindowSizeWatcherToken, useClass: Common.WindowSizeWatcher }\r\n];\r\n\r\nconst exportItems = [];\r\n\r\n@NgModule({\r\n    declarations: [directives, components],\r\n    imports: [CommonModule, HttpModule, JsonpModule],\r\n    providers: providers,\r\n    exports: [directives, exportItems]\r\n})\r\nexport class SystemModule {\r\n\r\n    // constructor(@Optional() @SkipSelf() parentModule: SystemModule) {\r\n    //     if (parentModule) {\r\n    //         throw new Error('SystemModule is already loaded. Import it in the AppModule only');\r\n    //     }\r\n    // }\r\n}"],"names":["tslib_1.__extends","tslib_1.__values","Observable","InjectionToken","Common.StringBuilder","Injectable","Directive","Inject","Input","HostListener","Collections.NamedDictionary","Collections.Dictionary","Collections.Enumerable","Collections.List","IO.Directory","http","Headers","Http","ExceptionHandling.LoggingExceptionHandler","Logging.DefaultLoggerFactory","Common.Guid","Injector","__values","Common.InvokeCommandDirective","Common.DefaultLoggerFactory","Common.HttpClient","Common.LoggingExceptionHandler","Common.CommandRepository","Common.CommandDescriptorRepository","Common.ElectronUtil","Common.AngularServiceProvider","Common.ServiceLocator","Common.MessageMediator","Common.ComponentCreator","Common.OptionRepository","Common.ActionRepositoryToken","Common.ActionRepository","Common.CommandRepositoryToken","Common.CommandDescriptorRepositoryToken","Common.ExceptionHandlerToken","Common.LoggerFactoryToken","Common.MessageMediatorToken","Common.ComponentCreatorToken","Common.OptionRepositoryToken","Common.WindowSizeWatcherToken","Common.WindowSizeWatcher","NgModule","CommonModule","HttpModule","JsonpModule"],"mappings":"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"}
