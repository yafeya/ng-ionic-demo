{"version":3,"file":"yafeya-system-common.js.map","sources":["ng://yafeya-system-common/lib/system/xml/XObject.ts","ng://yafeya-system-common/lib/system/xml/XElement.ts","ng://yafeya-system-common/lib/system/common/Guid.ts","ng://yafeya-system-common/lib/system/common/StringBuilder.ts","ng://yafeya-system-common/lib/system/common/XmlConverter.ts","ng://yafeya-system-common/lib/system/common/Clipboard.ts","ng://yafeya-system-common/lib/system/common/JsonToken.ts","ng://yafeya-system-common/lib/system/collections/EnumerableIterator.ts","ng://yafeya-system-common/lib/system/collections/Enumerable.ts","ng://yafeya-system-common/lib/system/collections/Collection.ts","ng://yafeya-system-common/lib/system/collections/List.ts","ng://yafeya-system-common/lib/system/collections/IGrouping.ts","ng://yafeya-system-common/lib/system/collections/NamedDictionary.ts","ng://yafeya-system-common/lib/system/collections/KeyValuePair.ts","ng://yafeya-system-common/lib/system/collections/Dictionary.ts","ng://yafeya-system-common/lib/system/collections/ObservableCollection.ts","ng://yafeya-system-common/lib/system/collections/CollectionExtensions.ts","ng://yafeya-system-common/lib/system/common/WindowSizeWatcher.ts","ng://yafeya-system-common/lib/system/xml/XDocument.ts","ng://yafeya-system-common/lib/system/xml/XAttribute.ts","ng://yafeya-system-common/lib/system/command/ICommand.ts","ng://yafeya-system-common/lib/system/command/CommandRepository.ts","ng://yafeya-system-common/lib/system/Tokens.ts","ng://yafeya-system-common/lib/system/command/InvokeCommandDirective.ts","ng://yafeya-system-common/lib/system/command/CommandDescriptor.ts","ng://yafeya-system-common/lib/system/command/CommandDescriptorRepository.ts","ng://yafeya-system-common/lib/system/command/CommandDescriptorExtensions.ts","ng://yafeya-system-common/lib/system/settings/AppSettingItem.ts","ng://yafeya-system-common/lib/system/settings/AppSettings.ts","ng://yafeya-system-common/lib/system/settings/IOptionRepository.ts","ng://yafeya-system-common/lib/system/resource/ResourceDictionary.ts","ng://yafeya-system-common/lib/system/resource/ResourceHolder.ts","ng://yafeya-system-common/lib/system/logging/LogLevel.ts","ng://yafeya-system-common/lib/system/logging/Logger.ts","ng://yafeya-system-common/lib/system/logging/DefaultLoggerFactory.ts","ng://yafeya-system-common/lib/system/logging/LoggerBase.ts","ng://yafeya-system-common/lib/system/logging/debug/DebugLogger.ts","ng://yafeya-system-common/lib/system/logging/debug/DebugLoggerProvider.ts","ng://yafeya-system-common/lib/system/logging/log4js/Log4JsLogger.ts","ng://yafeya-system-common/lib/system/io/File.ts","ng://yafeya-system-common/lib/system/io/Directory.ts","ng://yafeya-system-common/lib/system/logging/log4js/Log4JsLoggerProvider.ts","ng://yafeya-system-common/lib/system/logging/LoggerFactoryExtensions.ts","ng://yafeya-system-common/lib/system/exception/LoggingExceptionHandler.ts","ng://yafeya-system-common/lib/system/net/HttpClient.ts","ng://yafeya-system-common/lib/system/utilities/ElectronUtil.ts","ng://yafeya-system-common/lib/system/services/AngularServiceProvider.ts","ng://yafeya-system-common/lib/system/services/ServiceLocator.ts","ng://yafeya-system-common/lib/system/extensions/StringExtensions.ts","ng://yafeya-system-common/lib/system/extensions/ArrayExtensions.ts","ng://yafeya-system-common/lib/system/extensions/DocumentExtensions.ts","ng://yafeya-system-common/lib/system/extensions/ObjectExtensions.ts","ng://yafeya-system-common/lib/system/extensions/Functions.ts","ng://yafeya-system-common/lib/system/action/ActionRepository.ts","ng://yafeya-system-common/lib/system/action/Action.ts","ng://yafeya-system-common/lib/system/message-mediator/MessageMediator.ts","ng://yafeya-system-common/lib/system/component/ComponentCreator.ts","ng://yafeya-system-common/lib/system/system.module.ts"],"sourcesContent":["import {XDocument } from './XDocument';\r\n\r\nexport class XObject {\r\n    Name: string;\r\n    Value: any;\r\n    private mDocument: XDocument;\r\n\r\n    get Document() {\r\n        return this.mDocument;\r\n    }\r\n    set Document(value: XDocument) {\r\n        this.mDocument = value;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(name: string, value: any) {\r\n        this.Name = name;\r\n        this.Value = value;\r\n    }\r\n\r\n}\r\n","import { XObject } from './XObject';\r\nimport { XAttribute } from './XAttribute';\r\nimport * as Common from '../common/index';\r\n\r\nexport class XElement extends XObject {\r\n    Elements: Array<XElement> = [];\r\n    Attributes: Array<XAttribute> = [];\r\n    Parent: XElement;\r\n\r\n    constructor(name: string, value: any = null) {\r\n        super(name, value);\r\n    }\r\n\r\n    AppendChild(element: XElement): XElement {\r\n        if (!element)\r\n            throw new Error('element is null.');\r\n\r\n        this.Elements.push(element);\r\n        element.Document = this.Document;\r\n        element.Parent = this;\r\n\r\n        return this;\r\n    }\r\n    AppendAttribute(attribute: XAttribute) {\r\n        if (!attribute)\r\n            throw new Error('attribute is null.');\r\n\r\n        this.Attributes.push(attribute);\r\n        attribute.Document = this.Document;\r\n    }\r\n    ToXmlElement(doc: XMLDocument): HTMLElement {\r\n        let element = doc.createElement(this.Name);\r\n        if (this.Value) {\r\n            if (this.Name == \"base64\")\r\n                console.log(this.Value);\r\n            element.appendChild(document.createTextNode(this.Value));\r\n        }\r\n\r\n        this.Attributes.forEach(function (attribute) {\r\n            element.setAttribute(attribute.Name, attribute.Value);\r\n        });\r\n\r\n        this.Elements.forEach(function (child) {\r\n            element.appendChild(child.ToXmlElement(doc));\r\n        });\r\n\r\n        return element;\r\n    }\r\n\r\n    ToXmlString(builder: Common.StringBuilder): string {\r\n\r\n        builder.Append('<' + this.Name + '>');\r\n        if (this.Value) {\r\n            builder.Append(this.Value);\r\n        } else {\r\n            this.Elements.forEach(function (child) {\r\n                child.ToXmlString(builder);\r\n            });\r\n        }\r\n\r\n        builder.Append('</' + this.Name + '>');\r\n        return builder.Build();\r\n    }\r\n}\r\n","\r\nexport class Guid {\r\n    static Empty = '00000000-0000-0000-0000-000000000000';\r\n    static Validator = new RegExp('^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$', 'i');\r\n    private value: string;\r\n\r\n    constructor(value: any) {\r\n        if (!value)\r\n            throw new TypeError('Invalid argument; `value` has no value.');\r\n\r\n        this.value = Guid.Empty;\r\n\r\n        if (value && value instanceof Guid) {\r\n            this.value = (value as Guid).Value;\r\n        } else if (value && Object.prototype.toString.call(value) === '[object String]' && Guid.IsGuid(value)) {\r\n            this.value = value;\r\n        }\r\n    }\r\n\r\n    get Value(): string {\r\n        return this.value;\r\n    }\r\n    IsEmpty(): boolean {\r\n        return this.value === Guid.Empty;\r\n    }\r\n    ToString(): string {\r\n        return this.value;\r\n    }\r\n    ToJson(): string {\r\n        return this.value;\r\n    }\r\n\r\n    private static Generate(count): string {\r\n        let out = '';\r\n        for (let i = 0; i < count; i++) {\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    }\r\n    static New(): Guid {\r\n        return new Guid([Guid.Generate(2), Guid.Generate(1), Guid.Generate(1), Guid.Generate(1), Guid.Generate(3)].join('-'));\r\n    }\r\n    static IsGuid(value: any): boolean {\r\n        return value && (value instanceof Guid || Guid.Validator.test(value.toString()));\r\n    }\r\n\r\n}","import { IDisposable } from './IDisposable';\r\n\r\nexport class StringBuilder implements IDisposable {\r\n    private content = [];\r\n    private latest: string | null = null;\r\n\r\n    get IsEmpty(): boolean {\r\n        return this.content.length === 0;\r\n    }\r\n    Append(item: any): StringBuilder {\r\n        this.AppendSingle(item);\r\n        return this;\r\n    }\r\n    AppendLine(item: any): StringBuilder {\r\n        this.AppendSingle(item);\r\n        this.content.push('\\r\\n');\r\n        return this;\r\n    }\r\n    AppendLines(items: any[]): StringBuilder {\r\n        items.forEach(x => {\r\n            if (x != null) {\r\n                this.AppendLine(x);\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n\r\n    Build(): string {\r\n        if (this.latest != null)\r\n            return this.latest;\r\n        this.latest = this.Join('');\r\n        return this.latest;\r\n    }\r\n    Join(delimiter: string) {\r\n        return this.content.join(delimiter);\r\n    }\r\n\r\n    toString() {\r\n        return this.Build();\r\n    }\r\n    Dispose(): void {\r\n        this.latest = null;\r\n        this.content = [];\r\n    }\r\n    private AppendSingle(item: any): void {\r\n        if (item != null) {\r\n            this.latest = null;\r\n            if (typeof item !== 'string') {\r\n                this.content.push(item.toString());\r\n            } else {\r\n                this.content.push(item);\r\n            }\r\n        }\r\n    }\r\n}","\r\ndeclare var Xml2Js: any;\r\n\r\nexport class XmlConverter {\r\n\r\n    /** Convert Xml to Json */\r\n    ToJson(xml: any): any {\r\n        let parser = Xml2Js.Parser();\r\n        return parser.toJson(xml);\r\n    }\r\n}","\r\ndeclare let clipboard: any;\r\n\r\nexport class Clipboard {\r\n    /**\r\n     * \r\n     */\r\n    ContainsImage(): boolean {\r\n        let formats: string[] = clipboard.availableFormats();\r\n        return formats.some(x => x === 'image/png' || x === 'image/jpeg' || x === 'image/jpg' || x === 'image/gif');\r\n    }\r\n\r\n    /** Get image data from clipboard */\r\n    GetImage(): any {\r\n        let formats = clipboard.availableFormats();\r\n\r\n        let native = clipboard.readImage();\r\n\r\n        return native;\r\n    }\r\n    GetAvailableFormats(): string[] {\r\n        return clipboard.availableFormats();\r\n    }\r\n    /**\r\n     * Get image data URL\r\n     */\r\n    GetImageUrl(): string {\r\n        let url = '';\r\n        let image = this.GetImage();\r\n        if (image) {\r\n            url = image.toDataURL();\r\n        }\r\n        return url;\r\n    }\r\n    /** Get PNG format image encoded with base64 */\r\n    GetPngImage(): any {\r\n        let data: any;\r\n        let image = this.GetImage();\r\n        if (image) {\r\n            data = image.toPNG();\r\n        }\r\n        return data;\r\n    }\r\n    /** Get PNG format image encoded with base64 */\r\n    GetPngBase64Image(): string {\r\n        let data = '';\r\n        let image = this.GetImage();\r\n        if (image) {\r\n            let buffer = image.toPNG();\r\n            data = buffer.toString('base64');\r\n        }\r\n        return data;\r\n    }\r\n    Clear(): void {\r\n        clipboard.clear();\r\n    }\r\n    /**  Clears the Clipboard and then adds text data in the Text or UnicodeText format, depending on the operating system.*/\r\n    SetText(text: string): void {\r\n        try {\r\n            if (clipboard !== null) {\r\n                clipboard.writeText(text);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n        if (document) {\r\n            try {\r\n\r\n                let temp = document.createElement('textarea');\r\n                document.body.appendChild(temp);\r\n                temp.textContent = text;\r\n                let currentFocus: any = document.activeElement;\r\n                temp.focus();\r\n                temp.setSelectionRange(0, temp.value.length);\r\n                document.execCommand('copy');\r\n                if (currentFocus) {\r\n                    currentFocus.focus();\r\n                }\r\n                document.body.removeChild(temp);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get text conent from clipboard\r\n     */\r\n    GetText(): string {\r\n        return clipboard.readText();\r\n    }\r\n    /**\r\n     * Get HTML fromat text content from clipboard\r\n     */\r\n    GetHtml(): string {\r\n        return clipboard.readHTML();\r\n    }\r\n    /**\r\n     * Set HTML format content to clipboard\r\n     * @param value HTML format content\r\n     */\r\n    SetHtml(value: string): void {\r\n        return clipboard.writerHTML(value);\r\n    }\r\n    /**\r\n     * Get RTF format text from clipboard\r\n     */\r\n    GetRTF(): string {\r\n        return clipboard.readRTF();\r\n    }\r\n    /**\r\n     * Set RTF format content to clipboard\r\n     * @param value RTF format content\r\n     */\r\n    SetRTF(value: string): void {\r\n        clipboard.writerRTF(value);\r\n    }\r\n}","export class JsonToken {\r\n\r\n    Decode(token: string): any {\r\n        const parts = token.split('.');\r\n        if (parts.length !== 3) {\r\n            throw new Error('JWT must have 3 parts');\r\n        }\r\n        const decoded = this.urlBase64Decode(parts[1]);\r\n        if (!decoded) {\r\n            throw new Error('Cannot decode the token');\r\n        }\r\n        return JSON.parse(decoded);\r\n    }\r\n\r\n    private urlBase64Decode(str: string) {\r\n        let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n        switch (output.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                output += '==';\r\n                break;\r\n            case 3:\r\n                output += '=';\r\n                break;\r\n            default: {\r\n                throw new Error('Illegal base64url string!');\r\n            }\r\n        }\r\n        return decodeURIComponent(encodeURI(window.atob(output)));\r\n    }\r\n}","import { IEnumerable } from './IEnumerable';\r\n\r\nexport class EnumerableIterator<T> implements Iterator<T>{\r\n    private pointer = 0;\r\n\r\n    constructor(private enumerable: IEnumerable<T>) {\r\n\r\n    }\r\n\r\n    next(value?: any): IteratorResult<T> {       \r\n        if (this.pointer < this.enumerable.Count) {\r\n            return {\r\n                done: false,\r\n                value: this.enumerable.Items[this.pointer++]\r\n            };\r\n        } else {\r\n            return {\r\n                done: true,\r\n                value: null\r\n            };\r\n        }\r\n    }\r\n}","import { IEnumerable } from './IEnumerable';\r\nimport { EnumerableIterator } from './EnumerableIterator';\r\n\r\nexport class Enumerable<T> implements IEnumerable<T> {\r\n    private items: T[] = [];\r\n\r\n    /** Get counts of collection */\r\n    get Count(): number {\r\n        return this.Items.length;\r\n    }\r\n    /** Get all items */\r\n    get Items(): T[] {\r\n        return this.items;\r\n    }\r\n    /** Set items value */\r\n    set Items(value: T[]) {\r\n        this.items = value;\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        return new EnumerableIterator(this);\r\n    }\r\n\r\n    static From<T>(array: Array<T>): IEnumerable<T> {\r\n        let list = new Enumerable<T>();\r\n        if (array) {\r\n            list.Items = array;\r\n        }\r\n        return list;\r\n    }\r\n}\r\n\r\n","import { Enumerable } from './Enumerable';\r\nimport { ICollection } from './ICollection';\r\n\r\nexport class Collection<T> extends Enumerable<T> implements ICollection<T> {  \r\n\r\n    /** Get whether collection is readonly */\r\n    get IsReadOnly(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /** Add item to collection */\r\n    Add(item: T): void {\r\n        if (!item)\r\n            throw new Error(`Argument 'item' is null.`);\r\n\r\n        this.Items.push(item);\r\n    }\r\n    /** Add items to collection */\r\n    AddRange(items: T[]): void {\r\n        if (!items)\r\n            throw new Error(`Argument 'items' is null.`);\r\n\r\n        for (let item of items) {\r\n            this.Add(item);\r\n        }\r\n    }\r\n    /** Clear collection */\r\n    Clear(): void {\r\n        this.Items = [];\r\n    }\r\n    /** Determines whether collection contains a specific item */\r\n    Contains(item: T): boolean {\r\n        if (!item)\r\n            throw new Error(`Argument 'item' is null.`);\r\n\r\n        return this.Items.indexOf(item) > -1;\r\n    }\r\n    /** Remove item from collection */\r\n    Remove(item: T): boolean {\r\n        if (!item)\r\n            throw new Error(`Argument 'item' is null.`);\r\n\r\n        let index = this.Items.indexOf(item);\r\n        if (index > -1) {\r\n            this.Items.splice(index, 1);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    /** Copy elements to an array starting at a particular index\r\n     * @array\r\n     * @arrayIndex The zero-based index in array at which copying begins.\r\n     */\r\n    CopyTo(array: T[], arrayIndex: number) {\r\n        if (!array)\r\n            throw new Error(`Argument 'array' is null.`);\r\n        if (arrayIndex < 0 || arrayIndex > array.length)\r\n            throw new Error(`Argument 'arrayIndex' is out of range.`);\r\n\r\n        let index = arrayIndex;\r\n        for (let item of this.Items) {\r\n            array.splice(index++, 0, item);\r\n        }\r\n\r\n    }\r\n}","import { Collection } from './Collection';\r\nimport { IList } from './IList';\r\n\r\nexport class List<T> extends Collection<T> implements IList<T> {\r\n    /** Get index of given item */\r\n    IndexOf(item: T): number {\r\n        if (!item)\r\n            throw new Error(`Argument 'item' is null.`);\r\n        return this.Items.indexOf(item);\r\n    }\r\n    /** Insert item to given index */\r\n    Insert(index: number, item: T): void {\r\n        if (!item)\r\n            throw new Error(`Argument 'item' is null.`);\r\n        if (index < 0 || index >= this.Items.length)\r\n            throw new Error(`Argument 'index' is out of index`);\r\n\r\n        this.Items.splice(index, 0, item);\r\n    }\r\n    /** Remove item at given index */\r\n    RemoveAt(index: number): void {\r\n        if (index < 0 || index >= this.Items.length)\r\n            throw new Error(`Argument 'index' is out of index`);\r\n            \r\n        this.Items.splice(index, 1);\r\n    }\r\n}","import { IEnumerable } from './IEnumerable';\r\nimport { Enumerable } from './Enumerable';\r\n\r\n\r\nexport interface IGrouping<TKey, TElement> extends IEnumerable<TElement> {\r\n    readonly Key: TKey;\r\n\r\n}\r\n\r\nexport class Grouping<TKey, TElement> extends Enumerable<TElement> implements IGrouping<TKey, TElement> {\r\n    private key: TKey;\r\n\r\n\r\n    constructor(key?: TKey, elements?: IEnumerable<TElement>) {\r\n        super();\r\n        this.key = key;\r\n        this.Items = elements.Items;\r\n    }\r\n\r\n    get Key(): TKey {\r\n        return this.key;\r\n    }\r\n    set Key(value: TKey) {\r\n        this.key = value;\r\n    }\r\n\r\n}","import { INamedDictionary } from './INamedDictionary';\r\n\r\n\r\nexport class NamedDictionary<T> implements INamedDictionary<T> {\r\n    private items: { [index: string]: T } = {};\r\n\r\n    private count = 0;\r\n\r\n    public ContainsKey(key: string): boolean {\r\n        return this.items.hasOwnProperty(key);\r\n    }\r\n\r\n    public Count(): number {\r\n        return this.count;\r\n    }\r\n\r\n    public Add(key: string, value: T) {\r\n        this.items[key] = value;\r\n        this.count++;\r\n    }\r\n\r\n    public Remove(key: string): T {\r\n        let value = this.items[key];\r\n        delete this.items[key];\r\n        this.count--;\r\n        return value;\r\n    }\r\n\r\n    public Item(key: string): T {\r\n        return this.items[key];\r\n    }\r\n\r\n    public Keys(): string[] {\r\n        let keySet: string[] = [];\r\n\r\n        for (let prop in this.items) {\r\n            if (this.items.hasOwnProperty(prop)) {\r\n                keySet.push(prop);\r\n            }\r\n        }\r\n\r\n        return keySet;\r\n    }\r\n\r\n    public Values(): T[] {\r\n        let values: T[] = [];\r\n\r\n        for (let prop in this.items) {\r\n            if (this.items.hasOwnProperty(prop)) {\r\n                values.push(this.items[prop]);\r\n            }\r\n        }\r\n\r\n        return values;\r\n    }\r\n}","export class KeyValuePair<TKey, TValue>{\r\n    private key: TKey;\r\n    private value: TValue;\r\n\r\n    constructor(key: TKey, value: TValue) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n\r\n    get Key(): TKey {\r\n        return this.key;\r\n    }\r\n    get Value(): TValue {\r\n        return this.value;\r\n    }\r\n}","import { IDictionary } from './IDictionary';\r\nimport { Enumerable } from './Enumerable';\r\nimport { KeyValuePair } from './KeyValuePair';\r\n\r\nexport class Dictionary<TKey, TValue> extends Enumerable<KeyValuePair<TKey, TValue>> implements IDictionary<TKey, TValue> {\r\n    private map = new Map<TKey, TValue>();\r\n\r\n    Add(key: TKey, value: TValue): void {\r\n        this.map.set(key, value);\r\n        this.Items.Add(new KeyValuePair(key, value));\r\n    }\r\n    ContainsKey(key: TKey): boolean {\r\n        return this.map.has(key);\r\n    }\r\n    // Count(): number {\r\n    //     return this.items.size;\r\n    // }\r\n    Item(key: TKey): TValue {\r\n        return this.map.get(key);\r\n    }\r\n    Keys(): TKey[] {\r\n        let keys = [];\r\n\r\n        this.map.forEach((value, key) => {\r\n            keys.push(key);\r\n        })\r\n        return keys;\r\n    }\r\n    Remove(key: TKey): boolean {\r\n\r\n        let item = this.Items.FirstOrDefault(x => x.Key === key);\r\n        if (item)\r\n            this.Items.Remove(item);\r\n        return this.map.delete(key);\r\n    }\r\n    Values(): TValue[] {\r\n        let values = [];\r\n        this.map.forEach((value, key) => {\r\n            values.push(value);\r\n        })\r\n        return values;\r\n    }\r\n}","import { Observable } from 'rxjs/Observable';\r\nimport { Operator } from 'rxjs/Operator';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport { Subscription, TeardownLogic } from 'rxjs/Subscription';\r\nimport { IScheduler, Scheduler } from 'rxjs/Scheduler';\r\nimport { List } from './List';\r\nimport { IEnumerable } from './IEnumerable';\r\nimport { EnumerableIterator } from './EnumerableIterator';\r\n\r\nexport class ObservableCollection<T> extends Observable<T> implements IEnumerable<T>  {\r\n\r\n\r\n    static Create<T>(array: Array<T>): ObservableCollection<T> {\r\n        return new ObservableCollection<T>(<any>[array]);\r\n    }\r\n\r\n    static dispatch(state: any) {\r\n\r\n        const { array, index, count, subscriber } = state;\r\n\r\n        if (index >= count) {\r\n            subscriber.complete();\r\n            return;\r\n        }\r\n\r\n        subscriber.next(array[index]);\r\n\r\n        if (subscriber.closed) {\r\n            return;\r\n        }\r\n\r\n        state.index = index + 1;\r\n\r\n        (<any>this).schedule(state);\r\n    }\r\n\r\n    // value used if Array has one value and _isScalar\r\n    private values: T[];\r\n\r\n\r\n    constructor(private array: any[], private scheduler?: IScheduler) {\r\n        super();\r\n        // console.log(array);\r\n        if (!scheduler && array.length === 1) {\r\n            this._isScalar = true;\r\n            this.values = <T[]>array[0];\r\n        } else {\r\n            this._isScalar = true;\r\n            this.values = array;\r\n        }\r\n    }\r\n\r\n    get Count(): number {\r\n        return this.values.length;\r\n    }\r\n    get Values(): T[] {\r\n        return this.values;\r\n    }\r\n    get Items(): T[] {\r\n        return this.values;\r\n    }\r\n    set Items(value: T[]) {\r\n        this.values = value;\r\n    }\r\n\r\n    public Add(item: T): void {\r\n        if (this.values) {\r\n            this.values.push(item);\r\n        }\r\n    }\r\n    public AddRange(items: T[]): void {\r\n        if (items) {\r\n            for (let item of items) {\r\n                this.Add(item);\r\n            }\r\n        }\r\n    }\r\n    public Remove(item: T): boolean {\r\n        let index = this.values.indexOf(item);\r\n        if (index > -1) {\r\n            this.values.splice(index, 1);\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    [Symbol.iterator]() {\r\n        return new EnumerableIterator(this);\r\n    }\r\n\r\n    _subscribe(subscriber: Subscriber<T>): TeardownLogic {\r\n        let index = 0;\r\n        const array = this.array;\r\n        const count = array.length;\r\n        const scheduler = this.scheduler;\r\n\r\n        if (scheduler) {\r\n            return scheduler.schedule(ObservableCollection.dispatch, 0, {\r\n                array, index, count, subscriber\r\n            });\r\n        } else {\r\n            //console.log(this.values);\r\n            for (let i = 0; i < count && !subscriber.closed; i++) {\r\n                subscriber.next(array[0]);\r\n            }\r\n            subscriber.complete();\r\n        }\r\n    }\r\n}","import { IEnumerable } from './IEnumerable';\r\nimport { Enumerable } from './Enumerable';\r\nimport { List } from './List';\r\n\r\nimport { ObservableCollection } from './ObservableCollection';\r\nimport { IGrouping, Grouping } from './IGrouping';\r\nimport { Dictionary } from './Dictionary';\r\nimport { IList } from './IList';\r\nimport { IDictionary } from './IDictionary';\r\n\r\n/** Do ForEach on items */\r\nexport function ForEach<T>(this: IEnumerable<T>, action: (item: T) => void): void {\r\n    if (!action) {\r\n        throw new Error(`Argument 'item' is null.`);\r\n    }\r\n\r\n    for (let item of this.Items) {\r\n        action(item);\r\n    }\r\n}\r\n/** Sort items by given comparer */\r\nexport function Sort<T>(this: IEnumerable<T>, comparer: (x: T, y: T) => number): void {\r\n    if (!comparer)\r\n        throw new Error(`Argument 'comparer' is null.`);\r\n\r\n    this.Items = this.Items.sort(comparer);\r\n}\r\n/** Find items by given predicate */\r\nexport function FindAll<T>(this: IEnumerable<T>, predicate: (item: T) => boolean): IEnumerable<T> {\r\n    if (!predicate)\r\n        throw new Error(`Argument 'predicate' is null.`);\r\n\r\n    let result = new List<T>();\r\n    for (let item of this.Items) {\r\n        if (predicate(item))\r\n            result.Add(item);\r\n    }\r\n\r\n    return Enumerable.From(result.Items);\r\n}\r\n/** Find first item in the list */\r\nexport function FirstOrDefault<T>(this: IEnumerable<T>, predicate?: (item: T) => boolean): T {\r\n\r\n    let result: T;\r\n\r\n    result = this.Items.FirstOrDefault(predicate);\r\n\r\n    return result;\r\n}\r\nexport function IsEmpty<T>(this: IEnumerable<T>): boolean {\r\n    return !(this.Items && this.Items.length > 0);\r\n}\r\nexport function Any<T>(this: IEnumerable<T>, predicate?: (source: any) => boolean): boolean {\r\n    if (predicate) {\r\n        for (let item of this.Items) {\r\n            if (predicate(item))\r\n                return true;\r\n        }\r\n        return false;\r\n    } else {\r\n        if (this.Items.length === 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexport function Max<T>(this: IEnumerable<T>, selector: (source: T) => number): number {\r\n\r\n    let max = this.Select(selector).Items.reduce(function (a: number, b: number) {\r\n        return Math.max(a, b);\r\n    });\r\n    return max;\r\n}\r\nexport function Min<T>(this: IEnumerable<T>, selector: (source: T) => any): number {\r\n    let min = this.Select(selector).Items.reduce(function (a: number, b: number) {\r\n        return Math.min(a, b);\r\n    });\r\n    return min;\r\n}\r\nexport function OrderBy<T>(this: IEnumerable<T>, keySelector: (source: T) => any): IEnumerable<T> {\r\n    // return Enumerable.From(this.Items.OrderBy(keySelector));\r\n    let values = this.Items.sort(function (a: any, b: any) {\r\n        return keySelector(a) - keySelector(b);\r\n    });\r\n\r\n    return Enumerable.From(values);\r\n}\r\nexport function OrderByDescending<T>(this: IEnumerable<T>, keySelector: (source: T) => any): IEnumerable<T> {\r\n    // return Enumerable.From(this.Items.OrderByDescending(keySelector));\r\n\r\n    let values = this.Items.sort(function (a: any, b: any) {\r\n        return keySelector(b) - keySelector(a);\r\n    });\r\n\r\n    return Enumerable.From(values);\r\n}\r\nexport function Where<T>(this: IEnumerable<T>, predicate: (source: T) => boolean): IEnumerable<T> {\r\n    //return Enumerable.From(this.Items.Where(predicate));\r\n\r\n    let values = this.Items.filter((x: any) => {\r\n        return predicate(x);\r\n    });\r\n    return  Enumerable.From(values);\r\n}\r\nexport function Select<TSource, TResult>(this: IEnumerable<TSource>, selector: (source: TSource) => TResult): IEnumerable<TResult> {\r\n    //return Enumerable.From<TResult>(this.Items.Select(selector));\r\n    let result = [];\r\n    for (let item of this.Items) {\r\n        result.push(selector(item));\r\n    }\r\n    return Enumerable.From(result);\r\n}\r\nexport function ElementAt<T>(this: IEnumerable<T>, index: number): T {\r\n    let values = this.Items;\r\n    return values[index];\r\n}\r\nexport function GroupBy<T, TKey, TElement>(this: IEnumerable<T>, keySelector: (source: T) => TKey, valueSelector?: (source: T) => any): IEnumerable<IGrouping<TKey, TElement>> {\r\n    if (!this)\r\n        throw new Error(`Parameter is null`);\r\n    if (!keySelector)\r\n        throw new Error(`Parameter 'keySelelctor'is null`);\r\n    if (!valueSelector)\r\n        valueSelector = x => x;\r\n\r\n    let dictionary = new Dictionary<TKey, IList<TElement>>();\r\n\r\n    this.ForEach(x => {\r\n        let key = keySelector(x);\r\n        let value = valueSelector ? valueSelector(x) : x;\r\n\r\n        let values: IList<TElement>;\r\n        if (dictionary.ContainsKey(key)) {\r\n            let item = dictionary.Item(key);\r\n            values = item ? item : new List<TElement>();\r\n        } else {\r\n            values = new List<TElement>();\r\n            dictionary.Add(key, values);\r\n        }\r\n        values.Add(value);\r\n    });\r\n\r\n    let groups = new List<IGrouping<TKey, TElement>>();\r\n\r\n    dictionary.ForEach(x => {\r\n        groups.Add(new Grouping(x.Key, x.Value));\r\n    })\r\n    return groups;\r\n}\r\n\r\ndeclare module './Enumerable' {\r\n    interface Enumerable<T> {\r\n        ForEach: (action: (item: T) => void) => void;\r\n        Sort: (comparer: (x: T, y: T) => number) => void;\r\n        FindAll: (predicate: (item: T) => boolean) => IEnumerable<T>;\r\n        FirstOrDefault: (predicate?: (item: T) => boolean) => T;\r\n        IsEmpty: () => boolean;\r\n        Any: (predicate?: (source: any) => boolean) => boolean;\r\n        Max: (selector: (source: T) => any) => number;\r\n        Min: (selector: (source: T) => any) => number;\r\n        OrderBy: (keySelector: (source: T) => any) => IEnumerable<T>;\r\n        OrderByDescending: (keySelector: (source: T) => any) => IEnumerable<T>;\r\n        Where: (predicate: (source: T) => boolean) => IEnumerable<T>;\r\n        Select: <T, TResult>(selector: (source: T) => TResult) => IEnumerable<TResult>;\r\n        ElementAt: (index: number) => T;\r\n        GroupBy: <TKey, TElement>  (keySelector: (source: T) => TKey, valueSelector?: (source: T) => TElement) => IEnumerable<IGrouping<TKey, TElement>>;\r\n    }\r\n}\r\ndeclare module './IEnumerable' {\r\n    interface IEnumerable<T> {\r\n        ForEach: (action: (item: T) => void) => void;\r\n        Sort: (comparer: (x: T, y: T) => number) => void;\r\n        FindAll: (predicate: (item: T) => boolean) => IEnumerable<T>;\r\n        FirstOrDefault: (predicate?: (item: T) => boolean) => T;\r\n        IsEmpty: () => boolean;\r\n        Any: (predicate?: (source: any) => boolean) => boolean;\r\n        Max: (selector: (source: T) => any) => number;\r\n        Min: (selector: (source: T) => any) => number;\r\n        OrderBy: (keySelector: (source: T) => any) => IEnumerable<T>;\r\n        OrderByDescending: (keySelector: (source: T) => any) => IEnumerable<T>;\r\n        Where: (predicate: (source: T) => boolean) => IEnumerable<T>;\r\n        Select: <T, TResult>(selector: (source: T) => TResult) => IEnumerable<TResult>;\r\n        ElementAt: (index: number) => T;\r\n        GroupBy: <TKey, TElement>  (keySelector: (source: T) => TKey, valueSelector?: (source: T) => TElement) => IEnumerable<IGrouping<TKey, TElement>>;\r\n    }\r\n}\r\ndeclare module './ObservableCollection' {\r\n    interface ObservableCollection<T> {\r\n        ForEach: (action: (item: T) => void) => void;\r\n        Sort: (comparer: (x: T, y: T) => number) => void;\r\n        FindAll: (predicate: (item: T) => boolean) => IEnumerable<T>;\r\n        FirstOrDefault: (predicate?: (item: T) => boolean) => T;\r\n        IsEmpty: () => boolean;\r\n        Any: (predicate?: (source: any) => boolean) => boolean;\r\n        Max: (selector: (source: T) => any) => number;\r\n        Min: (selector: (source: T) => any) => number;\r\n        OrderBy: (keySelector: (source: T) => any) => IEnumerable<T>;\r\n        OrderByDescending: (keySelector: (source: T) => any) => IEnumerable<T>;\r\n        Where: (predicate: (source: T) => boolean) => IEnumerable<T>;\r\n        Select: <T, TResult>(selector: (source: T) => TResult) => IEnumerable<TResult>;\r\n        ElementAt: (index: number) => T;\r\n        GroupBy: <TKey, TElement>  (keySelector: (source: T) => TKey, valueSelector?: (source: T) => TElement) => IEnumerable<IGrouping<TKey, TElement>>;\r\n    }\r\n}\r\n\r\nEnumerable.prototype.ForEach = ForEach;\r\nEnumerable.prototype.Sort = Sort;\r\nEnumerable.prototype.FindAll = FindAll;\r\nEnumerable.prototype.FirstOrDefault = FirstOrDefault;\r\nEnumerable.prototype.IsEmpty = IsEmpty;\r\nEnumerable.prototype.Any = Any;\r\nEnumerable.prototype.Max = Max;\r\nEnumerable.prototype.Min = Min;\r\nEnumerable.prototype.OrderBy = OrderBy;\r\nEnumerable.prototype.OrderByDescending = OrderByDescending;\r\nEnumerable.prototype.Where = Where;\r\nEnumerable.prototype.Select = Select;\r\nEnumerable.prototype.ElementAt = ElementAt;\r\nEnumerable.prototype.GroupBy = GroupBy;\r\n\r\nObservableCollection.prototype.ForEach = ForEach;\r\nObservableCollection.prototype.Sort = Sort;\r\nObservableCollection.prototype.FindAll = FindAll;\r\nObservableCollection.prototype.FirstOrDefault = FirstOrDefault;\r\nObservableCollection.prototype.IsEmpty = IsEmpty;\r\nObservableCollection.prototype.Any = Any;\r\nObservableCollection.prototype.Max = Max;\r\nObservableCollection.prototype.Min = Min;\r\nObservableCollection.prototype.OrderBy = OrderBy;\r\nObservableCollection.prototype.OrderByDescending = OrderByDescending;\r\nObservableCollection.prototype.Where = Where;\r\nObservableCollection.prototype.Select = Select;\r\nObservableCollection.prototype.ElementAt = ElementAt;\r\nObservableCollection.prototype.GroupBy = GroupBy;","import { IDictionary, Dictionary,  } from '../collections/index';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport interface ISize {\r\n    Width: number;\r\n    Height: number;\r\n}\r\nexport interface ISizChangeHandler {\r\n    Handle(size: ISize): void;\r\n}\r\nexport interface IWindowSizeWatcher {\r\n    Start(): void;\r\n    Add(name: string, handler: ISizChangeHandler);\r\n    Remove(name: string);\r\n}\r\nexport const WindowSizeWatcherToken = new InjectionToken('./IWindowSizeWatcher');\r\n\r\nexport class WindowSizeWatcher implements IWindowSizeWatcher {\r\n    private handlers: IDictionary<string, ISizChangeHandler>;\r\n\r\n\r\n    constructor() {\r\n        this.handlers = new Dictionary<string, ISizChangeHandler>();\r\n    }\r\n\r\n    Start(): void {\r\n\r\n        let self = this;\r\n        window.onresize = (e: UIEvent) => {\r\n            for (let handler of self.handlers.Values()) {\r\n                handler.Handle({ Width: window.innerWidth, Height: window.innerHeight });\r\n            }\r\n        };\r\n    }\r\n\r\n    Add(name: string, handler: ISizChangeHandler): void {\r\n        this.handlers.Add(name, handler);\r\n    }\r\n    Remove(name: string) {\r\n        this.handlers.Remove(name);\r\n    }\r\n\r\n    private OnSizeChanged(e: UIEvent) {\r\n\r\n        for (let handler of this.handlers.Values()) {\r\n            handler.Handle({ Width: window.innerWidth, Height: window.innerHeight });\r\n        }\r\n    }\r\n}\r\n","import { XElement } from './XElement';\r\nimport * as Common from '../common/index';\r\n\r\nexport class XDocument {\r\n\r\n    private mRoot: XElement;\r\n\r\n    get Root(): XElement {\r\n        return this.mRoot;\r\n    }\r\n    set Root(value:XElement){\r\n        this.mRoot = value;\r\n        this.mRoot.Document = this;\r\n    }\r\n\r\n    Build(): XMLDocument {        \r\n        var doc = document.implementation.createDocument(\"\", \"\", null);\r\n\r\n        doc.appendChild(this.Root.ToXmlElement(doc));\r\n        return doc;\r\n    }\r\n\r\n    BuildXmlString():string{\r\n        let builder = new Common.StringBuilder();\r\n        let content = this.Root.ToXmlString(builder);\r\n\r\n        return content;\r\n    }\r\n}","\r\nimport {XObject}        from './XObject';\r\n\r\nexport class XAttribute extends XObject {\r\n    constructor(name: string, value: any) {\r\n        super(name, value);\r\n    }\r\n}","\r\nexport interface ICommand {\r\n\r\n    CanExecute(param: any): boolean;\r\n\r\n    Execute(param: any): void;\r\n}\r\n\r\nexport class DelegateCommand implements ICommand {\r\n\r\n    constructor(\r\n        private canExecute: (param: any) => boolean,\r\n        private action: (param: any) => void) {\r\n\r\n    }\r\n\r\n    CanExecute(param: any): boolean {\r\n        if (this.canExecute === null)\r\n            return true;\r\n        return  this.canExecute(param);\r\n    }\r\n\r\n    Execute(param: any): void {\r\n        if (this.action) {\r\n            try {\r\n                this.action(param);\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a command from given actions.\r\n     * @param action executed action\r\n     * @param canExecute can execue action\r\n     */\r\n    static From(action: (param?: any) => void, canExecute?: (param?: any) => boolean): ICommand {\r\n        if (!canExecute)\r\n            canExecute = (param?: any) => true;\r\n        return new DelegateCommand(canExecute, action);\r\n    }\r\n}","import { ICommandRepository } from './ICommandRepository';\r\nimport { ICommand } from './ICommand';\r\nimport { Dictionary } from '../collections/Dictionary';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CommandRepository implements ICommandRepository {\r\n\r\n    Commands = new Dictionary<string, ICommand>();\r\n\r\n    GetCommand(name: string): ICommand {\r\n\r\n        let command = this.Commands.Item(name);\r\n\r\n        return command;\r\n    }\r\n\r\n    Register(name: string, command: ICommand): ICommandRepository {\r\n        if (!name)\r\n            throw new Error('Name value is null.');\r\n        if (!command)\r\n            throw new Error('Command value is null.')\r\n\r\n        this.Commands.Add(name, command);\r\n\r\n        return this;\r\n    }\r\n}","import { InjectionToken } from '@angular/core';\r\n\r\n\r\n\r\nexport const MessageMediatorToken = new InjectionToken('./message-mediator/IMessageMediator');\r\nexport const LoggerFactoryToken = new InjectionToken('./logging/ILoggerFactory');\r\nexport const ExceptionHandlerToken = new InjectionToken('./exception/IExceptionHandler');\r\nexport const CommandRepositoryToken = new InjectionToken('./command/ICommandRepository');\r\nexport const CommandDescriptorRepositoryToken = new InjectionToken('./command/ICommandDescriptorRepository');\r\nexport const ActionRepositoryToken = new InjectionToken('./action/IActionRepository');\r\n","import { Directive, ElementRef, Input, Renderer, HostListener, Inject } from '@angular/core';\r\n\r\nimport { ICommandRepository } from './ICommandRepository';\r\nimport { ILoggerFactory } from '../logging/ILoggerFactory';\r\nimport { ILogger } from '../logging/ILogger';\r\nimport { CommandRepositoryToken, LoggerFactoryToken } from '../Tokens';\r\n\r\n@Directive({\r\n    selector: '[InvokeCommand]'\r\n})\r\nexport class InvokeCommandDirective {\r\n    @Input('InvokeCommand') CommandName: string;\r\n    @Input() CommandParam: any;\r\n\r\n    private logger: ILogger;\r\n\r\n    constructor(\r\n        @Inject(CommandRepositoryToken) private commandRepository: ICommandRepository,\r\n        @Inject(LoggerFactoryToken) loggerFactory: ILoggerFactory) {\r\n\r\n        this.logger = loggerFactory.CreateLogger('InvokeCommand');\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    OnClicked() {\r\n        this.logger.Debug(`Invoke command: ${this.CommandName} with ${JSON.stringify(this.CommandParam)}`);\r\n\r\n        if (String.IsValid(this.CommandName)) {\r\n            let command = this.commandRepository.GetCommand(this.CommandName);\r\n            \r\n            if (command != null && command.CanExecute(this.CommandParam)) {\r\n                this.logger.Debug(`Get command with name: ${this.CommandName}, ${JSON.stringify(command)}`);\r\n                command.Execute(this.CommandParam);\r\n            }\r\n        }\r\n    }\r\n}","import { ICommandDescriptor } from './ICommandDescriptor';\r\n\r\nexport class CommandDescriptor implements ICommandDescriptor {\r\n\r\n    constructor(public Header: string, public CommandName: string,\r\n        public Group?: string, public Icon?: string,\r\n        public Image?: string, public Description?: string,\r\n        public Id?: string, public Tag?: any, public Shortcut?: string) {\r\n\r\n    }\r\n}","import { ICommandDescriptorRepository } from './ICommandDescriptorRepository';\r\nimport { IEnumerable } from '../collections/IEnumerable';\r\nimport { ICommandDescriptor } from './ICommandDescriptor';\r\nimport { List } from '../collections/List';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CommandDescriptorRepository implements ICommandDescriptorRepository {\r\n    private descriptors = new List<ICommandDescriptor>();\r\n\r\n\r\n    get Descriptors(): IEnumerable<ICommandDescriptor> {\r\n        return this.descriptors;\r\n    }\r\n    /**\r\n     * Register a descriptor.\r\n     */\r\n    Register(descriptor: ICommandDescriptor): ICommandDescriptorRepository {\r\n        if (descriptor != null) {\r\n            this.descriptors.Add(descriptor);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n    * Remove a descriptor\r\n    */\r\n    Remove(descriptor: ICommandDescriptor): ICommandDescriptorRepository {\r\n        if (descriptor !== null)\r\n            this.descriptors.Remove(descriptor);\r\n        return this;\r\n    }\r\n    /**\r\n     * Remove descriptors by given expression\r\n     */\r\n    RemoveRange(expression: (item: ICommandDescriptor) => boolean): void {\r\n        if (expression === null) {\r\n            return;\r\n        }\r\n\r\n        this.Descriptors.FindAll(expression)\r\n            .ForEach(x => {\r\n                this.descriptors.Remove(x);\r\n            });\r\n    }\r\n}","import { IEnumerable } from '../collections/IEnumerable';\r\nimport { ICommandDescriptor } from './ICommandDescriptor';\r\nimport { ICommandDescriptorRepository } from './ICommandDescriptorRepository';\r\nimport { CommandDescriptorRepository } from './CommandDescriptorRepository';\r\nimport * as Collections from '../collections/index';\r\n\r\nexport class CommandDescriptorExtensions {\r\n    /**\r\n     * Get descriptors by group\r\n     * @param this command descriptor repository\r\n     * @param group group name\r\n     */\r\n    static GetDescriptorsByGroup(this: ICommandDescriptorRepository, group: string): IEnumerable<ICommandDescriptor> {\r\n        let repo = this;\r\n        return repo.Descriptors.Where((x) => { return x.Group === group; });\r\n    }\r\n}\r\n\r\ndeclare module './ICommandDescriptorRepository' {\r\n    interface ICommandDescriptorRepository {\r\n        /**\r\n         * Get descriptors by group\r\n         * @param this command descriptor repository\r\n         * @param group group name\r\n         */\r\n        GetDescriptorsByGroup: (group: string) => IEnumerable<ICommandDescriptor>;\r\n    }\r\n}\r\ndeclare module './CommandDescriptorRepository' {\r\n    interface CommandDescriptorRepository {\r\n        /**\r\n         * Get descriptors by group\r\n         * @param this command descriptor repository\r\n         * @param group group name\r\n         */\r\n        GetDescriptorsByGroup: (group: string) => IEnumerable<ICommandDescriptor>;\r\n    }\r\n}\r\n\r\n\r\nCommandDescriptorRepository.prototype.GetDescriptorsByGroup = CommandDescriptorExtensions.GetDescriptorsByGroup;","\r\nexport class AppSettingItem {\r\n    Id: string;\r\n    Name: string;\r\n    Value: any;\r\n\r\n    get ToString(): string {\r\n        return `AppSettingItem Name:'${this.Name}', Id:'${this.Id}', Value:'${this.Value}'`;\r\n    }\r\n}","import { AppSettingItem } from './AppSettingItem';\r\nimport * as Common from '../common/index';\r\nimport * as Collections from '../collections/index';\r\n\r\nexport class AppSettings {\r\n    private Items = new Collections.NamedDictionary<AppSettingItem>();\r\n\r\n    get SettingItems(): AppSettingItem[] {\r\n        return this.Items.Values();\r\n    }\r\n\r\n    /** Get a setting item by name. */\r\n    GetItem(name: string, defaultValue?: any): AppSettingItem {\r\n        if (!name)\r\n            throw new Error('Given name is null.');\r\n\r\n        let item = this.Items.Item(name);\r\n        if (!item && defaultValue != null) {\r\n            item = new AppSettingItem();\r\n            item.Name = name;\r\n            item.Value = defaultValue;\r\n            this.Items.Add(name, item);\r\n        }\r\n        return item;\r\n    }\r\n    /** \r\n     * Add a setting item, if there is an item with same name, that item will\r\n     * be updated.\r\n     */\r\n    AddItem(item: AppSettingItem): AppSettings {\r\n        if (item && item.Name) {\r\n            let existing = this.GetItem(item.Name);\r\n            if (existing) {\r\n                existing.Value = item.Value;\r\n            } else {\r\n                this.Items.Add(item.Name, item);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /** \r\n     * Set setting item value \r\n     */\r\n    SetValue(name: string, value: any): AppSettings {\r\n        let item = this.GetItem(name);\r\n        if (!item) {\r\n            item = new AppSettingItem();\r\n            item.Name = name;            \r\n            this.Items.Add(name, item);\r\n        }\r\n        item.Value = value;\r\n        return this;\r\n    }\r\n}","import { Injectable,  InjectionToken } from '@angular/core';\r\nimport { IOptionDescriptor } from './IOptionDescriptor';\r\nimport * as Collections from '../collections/index';\r\n\r\n\r\nexport const OptionRepositoryToken = new InjectionToken('./IOptionRepository');\r\n\r\nexport interface IOptionRepository {\r\n    /**\r\n     * Register a descriptor\r\n     */\r\n    Register(descriptor: IOptionDescriptor): IOptionRepository;\r\n    /**\r\n     * Find descriptors by given expression\r\n     */\r\n    Find(expression: (descriptor: IOptionDescriptor) => boolean): Collections.IEnumerable<IOptionDescriptor>;\r\n    /**\r\n     * Find a descriptor by id\r\n     */\r\n    FindOne(id: string): IOptionDescriptor;\r\n}\r\n\r\n@Injectable()\r\nexport class OptionRepository implements IOptionRepository {\r\n    private descriptors = new Collections.Dictionary<string, IOptionDescriptor>();\r\n\r\n    /**\r\n     * Register a descriptor\r\n     */\r\n    Register(descriptor: IOptionDescriptor): IOptionRepository {\r\n        if (!descriptor)\r\n            throw new Error(`Argument descriptor is null`);\r\n\r\n        if (!this.descriptors.ContainsKey(descriptor.Id)) {\r\n            this.descriptors.Add(descriptor.Id, descriptor);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Find descriptors by given expression\r\n     */\r\n    Find(expression: (descriptor: IOptionDescriptor) => boolean): Collections.IEnumerable<IOptionDescriptor> {\r\n        return Collections.Enumerable.From(this.descriptors.Values().Where(x => expression(x)));\r\n    }\r\n    /**\r\n     * Find a descriptor by id\r\n     */\r\n    FindOne(id: string): IOptionDescriptor {\r\n        if (this.descriptors.ContainsKey(id)) {\r\n            return this.descriptors.Item(id);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nimport * as Collections from '../collections/index';\r\n\r\nexport class ResourceDictionary {\r\n    Local: string;\r\n    private mInnerDictionary = new Collections.NamedDictionary<string>();\r\n\r\n    /** Add resource value */\r\n    Add(key: string, value: string): ResourceDictionary {\r\n        if (key) {\r\n            this.mInnerDictionary.Add(key, value);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /** Get resource value */\r\n    Get(key: string): string {\r\n        if (key) {\r\n            return this.mInnerDictionary.Item(key);\r\n        }\r\n\r\n        return '';\r\n    }\r\n}","import * as Common from '../common/index';\r\nimport * as Collections from '../collections/index';\r\nimport { ResourceDictionary } from './ResourceDictionary';\r\n\r\nexport class ResourceHolder {\r\n    DefaultLocal = 'en-US';\r\n    private mInnerDictionary = new Collections.NamedDictionary<ResourceDictionary>();\r\n\r\n    constructor() {\r\n        \r\n    }\r\n\r\n    /** Get resource dictionary by local name */\r\n    GetResources(local: string): ResourceDictionary {\r\n        return this.mInnerDictionary.Item(local);\r\n    }\r\n    /** Add resource for specific local */\r\n    AddResources(local: string, resource: ResourceDictionary): ResourceHolder {\r\n        if (local) {\r\n            this.mInnerDictionary.Add(local, resource);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /** Get resource string */\r\n    GetString(name: string, local?: string): string {\r\n        let culture = local ? local : this.DefaultLocal;\r\n        let resources = this.GetResources(culture);\r\n        if (resources) {\r\n            return resources.Get(name);\r\n        }\r\n        return '';\r\n    }\r\n}","\r\nexport enum LogLevel {\r\n    /// <summary>\r\n    /// Logs that contain the most detailed messages. These messages may contain sensitive application data.\r\n    /// These messages are disabled by default and should never be enabled in a production environment.\r\n    /// </summary>\r\n    Trace = 1,\r\n\r\n    /// <summary>\r\n    /// Logs that are used for interactive investigation during development.  These logs should primarily contain\r\n    /// information useful for debugging and have no long-term value.\r\n    /// </summary>\r\n    Debug = 2,\r\n\r\n    /// <summary>\r\n    /// Logs that track the general flow of the application. These logs should have long-term value.\r\n    /// </summary>\r\n    Information = 3,\r\n\r\n    /// <summary>\r\n    /// Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the\r\n    /// application execution to stop.\r\n    /// </summary>\r\n    Warning = 4,\r\n\r\n    /// <summary>\r\n    /// Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a\r\n    /// failure in the current activity, not an application-wide failure.\r\n    /// </summary>\r\n    Error = 5,\r\n\r\n    /// <summary>\r\n    /// Logs that describe an unrecoverable application or system crash, or a catastrophic failure that requires\r\n    /// immediate attention.\r\n    /// </summary>\r\n    Critical = 6,\r\n\r\n    /// <summary>\r\n    /// Not used for writing log messages. Specifies that a logging category should not write any messages.\r\n    /// </summary>\r\n    None = 9999\r\n}","import { ILogger } from './ILogger';\r\nimport { DefaultLoggerFactory } from './DefaultLoggerFactory';\r\nimport { LogLevel } from './LogLevel';\r\nimport * as Collections from '../collections/index';\r\nimport { ILoggerProvider } from './ILoggerProvider';\r\n\r\nexport class Logger implements ILogger {\r\n    private loggers = new Collections.List<ILogger>();\r\n    private formatter: (any, Error) => string = this.MessageFormatter;\r\n\r\n    constructor(private loggerFactory: DefaultLoggerFactory, private name: string) {\r\n\r\n        let providers = loggerFactory.GetProviders();\r\n        if (providers.Count > 0) {\r\n            providers.ForEach(x => {\r\n                this.loggers.Add(x.CreateLogger(name));\r\n            });\r\n        }\r\n    }\r\n\r\n    /** Aggregates most logging patterns to a single method. */\r\n    Log(level: LogLevel, eventId: number, state: any, error: Error, formatter: (any, Error) => string) {\r\n\r\n        let errors = new Collections.List<Error>();\r\n\r\n        this.loggers.ForEach(logger => {\r\n            try {\r\n                logger.Log(level, eventId, state, error, formatter);\r\n            } catch (error) {\r\n                errors.Add(error);\r\n            }\r\n        });\r\n\r\n        if (errors.Count > 0) {\r\n            throw new Error();             \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the given LogLevel is enabled.\r\n     */\r\n    IsEnabled(level: LogLevel): boolean {\r\n        for (let logger of this.loggers.Items) {\r\n            if (logger.IsEnabled(level))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /** Log to Debug level */\r\n    Debug(message: any): ILogger {\r\n        this.Log(LogLevel.Debug, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Trace level */\r\n    Trace(message: any): ILogger {\r\n        this.Log(LogLevel.Trace, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Info level */\r\n    Info(message: any): ILogger {\r\n        this.Log(LogLevel.Information, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Warn level */\r\n    Warn(message: any): ILogger {\r\n        this.Log(LogLevel.Warning, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Error level */\r\n    Error(message: any): ILogger {\r\n        this.Log(LogLevel.Error, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Fatal level */\r\n    Fatal(message: any): ILogger {\r\n        this.Log(LogLevel.Critical, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add a logger provider\r\n     * @provider\r\n     */\r\n    AddProvider(provider: ILoggerProvider): void {\r\n        let logger = provider.CreateLogger(this.name);\r\n\r\n        this.loggers.Add(logger);\r\n    }\r\n\r\n    private MessageFormatter(state: any, error: Error): string {\r\n        if (!state && !error)\r\n            // throw new Error(`No message or exception details wer found to create a message for the log.`);\r\n            return '';\r\n\r\n        if (!state)\r\n            return error.message;\r\n\r\n        if (!error)\r\n            return state.toString();\r\n\r\n        return `${state}\\n${error}`;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ILoggerFactory } from './ILoggerFactory';\r\nimport { ILogger } from './ILogger';\r\nimport { ILoggerProvider } from './ILoggerProvider';\r\nimport { Logger } from './Logger';\r\n\r\nimport * as Collections from '../collections/index';\r\n\r\n@Injectable()\r\nexport class DefaultLoggerFactory implements ILoggerFactory {\r\n\r\n    private providers = new Collections.List<ILoggerProvider>();\r\n    private loggers = new Collections.Dictionary<string, Logger>();\r\n\r\n    constructor() { }\r\n\r\n    /** Create a logger */\r\n    CreateLogger(name: string): ILogger {\r\n        let logger = this.loggers.Item(name);\r\n\r\n        if (!logger) {\r\n            logger = new Logger(this, name);\r\n            this.loggers.Add(name, logger);\r\n        }\r\n\r\n        return logger;\r\n    }\r\n\r\n    /** \r\n     * Add an logger provider to the logging system\r\n     * @provider logger provider\r\n     */\r\n    AddProvider(provider: ILoggerProvider): void {\r\n        this.providers.Add(provider);\r\n\r\n        for (let item of this.loggers.Items) {\r\n            item.Value.AddProvider(provider);\r\n        }\r\n    }\r\n    /**\r\n     * Get logger providers\r\n     */\r\n    GetProviders(): Collections.IList<ILoggerProvider> {\r\n        return this.providers;\r\n    }\r\n}","import { ILogger } from './ILogger';\r\nimport { LogLevel } from './LogLevel';\r\n\r\nexport abstract class LoggerBase implements ILogger {\r\n    private name: string;\r\n    protected formatter: (any, Error) => string = this.MessageFormatter;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /** Aggregates most logging patterns to a single method. */\r\n    abstract Log(level: LogLevel, eventId: number, state: any, error: Error, formatter: (any, Error) => string);\r\n\r\n    protected get Name(): string {\r\n        return this.name;\r\n\r\n    }\r\n    protected set Name(value: string) {\r\n        this.name = value;\r\n    }\r\n    /**\r\n     * Checks if the given LogLevel is enabled.\r\n     */\r\n    IsEnabled(level: LogLevel): boolean {\r\n        return true;\r\n    }\r\n\r\n    /** Log to Debug level */\r\n    Debug(message: any): ILogger {\r\n        this.Log(LogLevel.Debug, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Trace level */\r\n    Trace(message: any): ILogger {\r\n        this.Log(LogLevel.Trace, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Info level */\r\n    Info(message: any): ILogger {\r\n        this.Log(LogLevel.Information, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Warn level */\r\n    Warn(message: any): ILogger {\r\n        this.Log(LogLevel.Warning, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Error level */\r\n    Error(message: any): ILogger {\r\n        this.Log(LogLevel.Error, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n    /** Log to Fatal level */\r\n    Fatal(message: any): ILogger {\r\n        this.Log(LogLevel.Critical, 0, message, null, this.formatter);\r\n        return this;\r\n    }\r\n\r\n    protected MessageFormatter(state: any, error: Error): string {\r\n        if (!state && !error)\r\n            // throw new Error(`No message or exception details wer found to create a message for the log.`);\r\n            return '';\r\n\r\n        if (!state)\r\n            return error.message;\r\n\r\n        if (!error)\r\n            return JSON.stringify(state); // state.toString();\r\n\r\n        return `${state}\\n${error}`;\r\n    }\r\n}","\r\nimport { LoggerBase } from '../LoggerBase';\r\nimport { LogLevel } from '../LogLevel';\r\n\r\nexport class DebugLogger extends LoggerBase {\r\n\r\n    constructor(name: string, private filter: (message: string, levle: LogLevel) => boolean) {\r\n        super();\r\n        this.Name = name;\r\n    }\r\n\r\n    /**\r\n     * Peform log output to console\r\n     * @param level \r\n     * @param eventId \r\n     * @param state \r\n     * @param error \r\n     * @param formatter \r\n     */\r\n    Log(level: LogLevel, eventId: number, state: any, error: Error, formatter: (any, Error) => string) {\r\n        console.log(`[${new Date().toLocaleTimeString()}] ${this.Name}: ${level}, ${this.formatter(state, error)}`);\r\n    }\r\n}","import { ILoggerProvider } from '../ILoggerProvider';\r\nimport { ILogger } from '../ILogger';\r\nimport { DebugLogger } from './DebugLogger';\r\nimport { LogLevel } from '../LogLevel';\r\n\r\nexport class DebugLoggerProvider implements ILoggerProvider {\r\n\r\n    constructor(private filter?: (message: string, level: LogLevel) => boolean) {\r\n        if (filter == null) {\r\n            filter = (message: string, level: LogLevel) => {\r\n                return true;\r\n            };\r\n        }\r\n    }\r\n\r\n    CreateLogger(name: string): ILogger {\r\n        return new DebugLogger(name, this.filter);\r\n    }\r\n\r\n    Dispose(): void {\r\n\r\n    }\r\n}","import { ILogger } from '../ILogger';\r\nimport { LogLevel } from '../LogLevel';\r\nimport * as Collections from '../../collections/index';\r\nimport { ILoggerProvider } from '../ILoggerProvider';\r\nimport { LoggerBase } from '../LoggerBase';\r\n\r\n\r\nexport class Log4JsLogger extends LoggerBase {\r\n\r\n    constructor(name: string, private log4JsLogger: any) {\r\n        super();\r\n        this.Name = name;\r\n    }\r\n\r\n    /** Aggregates most logging patterns to a single method. */\r\n    Log(level: LogLevel, eventId: number, state: any, error: Error, formatter: (any, Error) => string) {\r\n        let message = this.formatter(state, error);\r\n\r\n        switch (level) {\r\n            case LogLevel.Debug:\r\n                this.log4JsLogger.debug(message);\r\n                break;\r\n            case LogLevel.Trace:\r\n                this.log4JsLogger.trace(message);\r\n                break;\r\n            case LogLevel.Information:\r\n                this.log4JsLogger.info(message);\r\n                break;\r\n            case LogLevel.Warning:\r\n                this.log4JsLogger.warn(message);\r\n                break;\r\n            case LogLevel.Error:\r\n                this.log4JsLogger.error(message);\r\n                break;\r\n            case LogLevel.Critical:\r\n                this.log4JsLogger.fatal(message);\r\n                break;\r\n            default:\r\n                this.log4JsLogger.debug(message);\r\n                break;\r\n        }\r\n\r\n    }\r\n    /**\r\n    * Checks if the given LogLevel is enabled.\r\n    */\r\n    IsEnabled(level: LogLevel): boolean {\r\n        let rawLevel: any;\r\n        switch (level) {\r\n            case LogLevel.Debug:\r\n                rawLevel = { level: 5000, levelStr: 'TRACE' };\r\n                break;\r\n            case LogLevel.Trace:\r\n                rawLevel = { level: 10000, levelStr: 'DEBUG' };\r\n                break;\r\n            case LogLevel.Information:\r\n                rawLevel = { level: 20000, levelStr: 'INFO' };\r\n                break;\r\n            case LogLevel.Warning:\r\n                rawLevel = { level: 30000, levelStr: 'WARN' };\r\n                break;\r\n            case LogLevel.Error:\r\n                rawLevel = { level: 40000, levelStr: 'ERROR' };\r\n                break;\r\n            case LogLevel.Critical:\r\n                rawLevel = { level: 50000, levelStr: 'FATAL' };\r\n                break;\r\n            default:\r\n                rawLevel = { level: 10000, levelStr: 'DEBUG' };\r\n                break;\r\n        }\r\n        return this.log4JsLogger.isLevelEnabled(rawLevel);\r\n    }\r\n}","declare var fs: any;\r\n//import * as fs from 'fs';\r\n/**\r\n * Angular CLI doesn't support import node module right now, have to use\r\n * declare \r\n * https://github.com/angular/angular-cli/issues/3482\r\n */\r\n\r\nexport class File {\r\n    /**\r\n     * Check whether given file is exist.\r\n     * @param filename full file name with path\r\n     */\r\n    static Exists(filename: string): boolean {\r\n        let existed: boolean;\r\n        try {            \r\n            existed = fs.existsSync(filename);\r\n        } catch (error) {\r\n            console.log(error);\r\n            existed = false;\r\n        }\r\n        return existed;\r\n    }\r\n\r\n    static Create(filename: string, content: string): void {\r\n        try {\r\n            fs.writeFileSync(filename, content);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static Delete(filename: string): void {\r\n        try {\r\n            fs.unlinkSync(filename);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static ReadAllText(filename: string, encoding: string): string {\r\n        let content: string;\r\n        try {\r\n            content = fs.readFileSync(filename, encoding);\r\n        } catch (error) {\r\n            console.log(error);\r\n            content = undefined;\r\n        }\r\n        return content;\r\n    }\r\n\r\n    static Copy(source: string, target: string, overwrite: boolean): void {\r\n        try {\r\n            let goodToWrite = false;\r\n            let sourceStream = fs.createReadStream(source);\r\n            if (this.Exists(target)) {\r\n                if (overwrite) {\r\n                    fs.unlinkSync(target);\r\n                    goodToWrite = true;\r\n                }\r\n            } else {\r\n                goodToWrite = true;\r\n            }\r\n\r\n            if (goodToWrite) {\r\n                sourceStream.pipe(fs.createWriteStream(target));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static FindFolder(filename: string) {\r\n        let folder: string = undefined;\r\n        if (filename && this.Exists(filename)) {\r\n            folder = filename.substr(0, filename.lastIndexOf('/'));\r\n            if(String.IsNullOrEmpty(folder)){\r\n                folder = filename.substr(0, filename.lastIndexOf('\\\\'));\r\n            }\r\n        }\r\n        return folder;\r\n    }\r\n}","\r\ndeclare var electron: any;\r\ndeclare var fs: any;\r\ndeclare var path: any;\r\n\r\nexport class Directory {\r\n\r\n    private get App(): any {\r\n        return electron.remote.app;\r\n    }\r\n\r\n    GetUserDataFolder(): string {\r\n        return this.App.getPath('userData');\r\n    }\r\n    GetAppDataFolder(): string {\r\n        return this.App.getPath('appData');\r\n    }\r\n    GetMyDocumentFolder(): string {\r\n        return this.App.getPath('documents');\r\n    }\r\n    GetPictureFolder(): string {\r\n        return this.App.getPath('pictures');\r\n    }\r\n    /** Get current executable file */\r\n    GetCurrentFolder(): string {\r\n        return this.App.getPath('exe');\r\n    }\r\n    /** Get temporary folder */\r\n    GetTempFolder(): string {\r\n        return this.App.getPath('temp');\r\n    }\r\n    GetAppName(): string {\r\n        return this.App.getName();\r\n    }\r\n    ShowItemInFolder(value: string): void {\r\n        electron.remote.shell.showItemInFolder(value);\r\n    }\r\n    Exist(value: string): boolean {\r\n        try {\r\n            fs.accessSync(value, fs.F_OK);\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    EnsureFolderExist(value: string): void {\r\n        if (!this.Exist(value)) {\r\n            try {\r\n                fs.mkdirSync(value);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n    Combine(path1: string, path2: string): string {\r\n        return path.join(path1, path2);\r\n    }\r\n}","import { ILoggerProvider } from '../ILoggerProvider';\r\nimport { ILogger } from '../ILogger';\r\nimport { LogLevel } from '../LogLevel';\r\nimport { Log4JsLogger } from './Log4JsLogger';\r\nimport * as IO from '../../io/index';\r\n\r\ndeclare var log4js: any;\r\ndeclare var electron: any;\r\n\r\nexport class Log4JsLoggerProvider implements ILoggerProvider {\r\n\r\n    constructor(initializer?: () => void, logFileName = 'log.txt') {\r\n\r\n        if (initializer) {\r\n            initializer();\r\n        } else {\r\n            try {\r\n                let directory = new IO.Directory();\r\n                let folder = directory.GetUserDataFolder();\r\n                directory.EnsureFolderExist(folder);\r\n                let file = directory.Combine(folder, logFileName);\r\n\r\n                log4js.configure({\r\n                    appenders: {\r\n                        file: { type: 'file', filename: file, maxLogSize: 20480, backups: 2 },\r\n                        console: { type: 'console', }\r\n                    },\r\n                    categories: {\r\n                        default: { appenders: ['console', 'file'], level: 'debug' }\r\n                    }\r\n                });\r\n            } catch (e) {\r\n                console.log('Not Electron runtime, initialize Log4JS failed.');\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create logger \r\n     * @param name logger name\r\n     */\r\n    CreateLogger(name: string): ILogger {\r\n        let loggerName = name ? name : 'Default';\r\n        let log4Logger = log4js.getLogger(loggerName);\r\n\r\n        return new Log4JsLogger(loggerName, log4Logger);\r\n    }\r\n\r\n    Dispose(): void {\r\n\r\n    }\r\n}","import { ILoggerFactory } from './ILoggerFactory';\r\nimport { DefaultLoggerFactory } from './DefaultLoggerFactory';\r\nimport { DebugLoggerProvider } from './debug/DebugLoggerProvider';\r\nimport { Log4JsLoggerProvider } from './log4js/Log4JsLoggerProvider';\r\n\r\n/** Extension method implementation in TypeScript\r\n * 1. create extension methods class, method declared as static\r\n * 2. declare module for the type to be extented\r\n * 3. hook the method delcaration to implementation\r\n */\r\n\r\n/**\r\n * Extension methods for LoggerFactory\r\n */\r\nexport class LoggerFactoryExtensions {\r\n    /**\r\n     * Add Debugger to logger\r\n     * @param this ILoggerFactory instance\r\n     */\r\n    static AddDebug(this: ILoggerFactory): ILoggerFactory {\r\n        let provider = new DebugLoggerProvider();\r\n        this.AddProvider(provider);\r\n        return this;\r\n    }\r\n    /**\r\n    * Add Log4JS to logging \r\n    * @param this ILoggerFactory instance\r\n    */\r\n    static AddLog4Js(this: ILoggerFactory): ILoggerFactory;\r\n    static AddLog4Js(this: ILoggerFactory, initializer?: () => void, logFileName = 'log.txt'): ILoggerFactory {\r\n        let provider = new Log4JsLoggerProvider(initializer, logFileName);\r\n        this.AddProvider(provider);\r\n        return this;\r\n    }\r\n}\r\n\r\n/** Exten type of the implementation */\r\ndeclare module './DefaultLoggerFactory' {\r\n    interface DefaultLoggerFactory {\r\n        AddDebug: () => ILoggerFactory;\r\n        AddLogJs: (initializer?: () => void, logFileName?: string) => ILoggerFactory;\r\n    }\r\n}\r\n\r\n/** Extend type of the interface */\r\ndeclare module './ILoggerFactory' {\r\n    interface ILoggerFactory {\r\n        AddDebug: () => ILoggerFactory;\r\n        AddLogJs: (initializer?: () => void, logFileName?: string) => ILoggerFactory;\r\n    }\r\n}\r\n\r\n/** hook defination to the implementation */\r\nDefaultLoggerFactory.prototype.AddLogJs = LoggerFactoryExtensions.AddLog4Js;\r\nDefaultLoggerFactory.prototype.AddDebug = LoggerFactoryExtensions.AddDebug;\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport * as Logging from '../logging/index';\r\nimport { IExceptionHandler } from './IExceptionHandler';\r\nimport { LoggerFactoryToken } from '../Tokens';\r\n\r\n@Injectable()\r\nexport class LoggingExceptionHandler implements IExceptionHandler {\r\n    private logger: Logging.ILogger;\r\n\r\n    constructor(@Inject(LoggerFactoryToken) private loggerFactory: Logging.ILoggerFactory) {\r\n        this.logger = loggerFactory.CreateLogger('ExceptionHandler');\r\n    }\r\n\r\n    Handle(exception: Error): void {\r\n        this.logger.Error(exception);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport * as ExceptionHandling from '../exception/index';\r\nimport * as Logging from '../logging/index';\r\n\r\n@Injectable()\r\nexport class HttpClient {\r\n\r\n    private logger: Logging.ILogger;\r\n    private headers: Headers;\r\n    private errorHandler: (error: any) => void;\r\n    OutputDebugging = true;\r\n\r\n    constructor(\r\n        private http: Http,\r\n        private exceptionHandler: ExceptionHandling.LoggingExceptionHandler,\r\n        loggerFactory: Logging.DefaultLoggerFactory) {\r\n\r\n        this.logger = loggerFactory.CreateLogger('HttpClient');\r\n\r\n        this.headers = new Headers();\r\n        this.headers.append('Content-Type', 'application/json');\r\n    }\r\n\r\n    get ErrorHander(): (error: any) => void {\r\n        return this.errorHandler;\r\n    }\r\n    set ErrorHander(value: (error: any) => void) {\r\n        this.errorHandler = value;\r\n    }\r\n\r\n    /**\r\n     * Post data to given url \r\n     * @param url Post url\r\n     * @param data  post data\r\n     */\r\n    Post(url: string, data: any): Promise<any> {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            const body = JSON.stringify(data);\r\n\r\n            if (self.OutputDebugging) {\r\n                self.logger\r\n                    .Debug(`Post data url: ${url}`)\r\n                    .Debug(body);\r\n            }\r\n\r\n            self.http.post(url, body, { headers: self.headers })\r\n                .toPromise()\r\n                .then(response => {\r\n                    resolve(response.json());\r\n                })\r\n                .catch(error => {\r\n                    self.exceptionHandler.Handle(error);\r\n                    if (self.errorHandler)\r\n                        self.errorHandler(error);\r\n                    reject(error);\r\n                }\r\n                );\r\n        });\r\n    }\r\n    /**\r\n     * Post raw string to given url\r\n     * @param url url to post data\r\n     * @param data data in string format\r\n     */\r\n    PostRaw(url: string, data: string): Promise<any> {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            if (self.OutputDebugging) {\r\n                self.logger\r\n                    .Debug(`Post data url: ${url}`)\r\n                    .Debug(data);\r\n            }\r\n\r\n            self.http.post(url, data, { headers: self.headers })\r\n                .toPromise()\r\n                .then(response => {\r\n                    resolve(response.json());\r\n                })\r\n                .catch(error => {\r\n                    self.exceptionHandler.Handle(error);\r\n                    if (self.errorHandler)\r\n                        self.errorHandler(error);\r\n                    reject(error);\r\n                }\r\n                );\r\n        });\r\n    }\r\n    /**\r\n     * Delete reques\r\n     * @param url the url for delete\r\n     */\r\n    Delete(url: string): Promise<any> {\r\n        const self = this;\r\n        return new Promise((resolve, reject) => {\r\n            self.http.delete(url)\r\n                .toPromise()\r\n                .then(response => {\r\n                    resolve(response.json());\r\n                })\r\n                .catch(error => {\r\n                    self.exceptionHandler.Handle(error);\r\n                    if (self.errorHandler)\r\n                        self.errorHandler(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n    /** \r\n     * Get data from given url in async mode\r\n     * @param url the url to get data.\r\n     */\r\n    Get(url: string, useRaw = false): Promise<any> {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (self.OutputDebugging) {\r\n                self.logger.Debug(`Get data url: ${url}`);\r\n            }\r\n            self.http.get(url, {headers: self.headers})\r\n                .toPromise()\r\n                .then(response => {\r\n                    if (useRaw) {\r\n                        resolve(response);\r\n                    } else {\r\n                        resolve(response.json());\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    self.exceptionHandler.Handle(error);\r\n                    if (self.errorHandler)\r\n                        self.errorHandler(error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create a new header with given token\r\n     * @param token bearer token value\r\n     */\r\n    UseToken(token: string): HttpClient {\r\n        const headers = this.CreateDefaultHeader();\r\n        if (token) {\r\n            headers.append('Authorization', `bearer ${token}`);\r\n        }\r\n        this.headers = headers;\r\n        return this;\r\n    }\r\n    /**\r\n     * User given header or the default header with content type set to json\r\n     * @param headers given header\r\n     */\r\n    UseHeader(headers: Headers = this.CreateDefaultHeader()): HttpClient {\r\n        if (!headers)\r\n            throw new Error('Given http header is null.');\r\n        this.headers = headers;\r\n        return this;\r\n    }\r\n\r\n    private CreateDefaultHeader(): Headers {\r\n        const headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return headers;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport * as Common from '../common/index';\r\n\r\ndeclare let electron: any;\r\ndeclare let fs: any;\r\ndeclare let Crypts: any;\r\ndeclare let NjPath: any;\r\ndeclare let Mime: any;\r\ndeclare let Path: any;\r\ndeclare let FileSize: any;\r\ndeclare let EventStream: any;\r\ndeclare let EncodingHelper: any;\r\ndeclare const Buffer: any;\r\n\r\n\r\n@Injectable()\r\nexport class ElectronUtil {\r\n    algorithm = 'aes-256-ctr';\r\n    password = 'a3b8d9w34';\r\n\r\n    get Electron(): any {\r\n        return electron;\r\n    }\r\n    get App(): any {\r\n        return electron.remote.app;\r\n    }\r\n    get MainMenu(): any {\r\n        return electron.remote.Menu;\r\n    }\r\n    get IpcClient(): any {\r\n        return electron.ipcRenderer;\r\n    }\r\n    get Remote(): any {\r\n        return electron.remote;\r\n    }\r\n    GetUserDataFolder(): string {\r\n        return this.App.getPath('userData');\r\n    }\r\n    GetAppDataFolder(): string {\r\n        return this.App.getPath('appData');\r\n    }\r\n    GetMyDocumentFolder(): string {\r\n        return this.App.getPath('documents');\r\n    }\r\n    GetPictureFolder(): string {\r\n        return this.App.getPath('pictures');\r\n    }\r\n    GetAppName(): string {\r\n        return this.App.getName();\r\n    }\r\n    OpenFileDialog(filters: any = null): string {\r\n        let dialog = electron.remote.dialog;\r\n        let fileName = dialog.showOpenDialog({\r\n            properties: ['openFile'],\r\n            filters: filters\r\n        });\r\n        return fileName.toString();\r\n    }\r\n    OpenFilesDialog(filters: any = null): string[] {\r\n        let dialog = electron.remote.dialog;\r\n        let fileNames = dialog.showOpenDialog({\r\n            properties: ['openFile', 'multiSelections'],\r\n            filters: filters\r\n        });\r\n        return fileNames;\r\n    }\r\n    TextFileFilter(): any {\r\n        return [{ name: 'Text Documents', extensions: ['txt', 'cs', 'ts', 'js', 'scss', 'css', 'html', 'htm'] }];\r\n    }\r\n    ImageFileFilter(): any {\r\n        return [{ name: 'Images', extensions: ['jpg', 'png', 'gif', 'bmp'] }];\r\n    }\r\n    OpenImageDialog(): string {\r\n        return this.OpenFileDialog(this.ImageFileFilter());\r\n    }\r\n    OpenImagesDialog(): string[] {\r\n        return this.OpenFilesDialog(this.ImageFileFilter());\r\n    }\r\n    SetApplicationMenu(menu: any): void {\r\n        electron.remote.Menu.setApplicationMenu(menu);\r\n    }\r\n\r\n    OpenExternal(url: string): void {\r\n        electron.remote.shell.openExternal(url);\r\n    }\r\n    ShowItemInFolder(path: string): void {\r\n        electron.remote.shell.showItemInFolder(path);\r\n    }\r\n\r\n    ReadFileAsync(file: string): Promise<any> {\r\n        let self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!self.Exist(file))\r\n                reject(new Error(`File doesn't exist.`));\r\n\r\n            fs.readFile(file, 'binary', (error, data) => {\r\n                        if (error)\r\n                            reject(error);\r\n\r\n                        let content = EncodingHelper.decode(data, 'utf8');\r\n\r\n                        resolve(content);\r\n                    });\r\n        });\r\n    }\r\n    ReadFileLineByLine(file: string): Promise<string> {\r\n        let self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            let lines = [];\r\n            let stream = fs.createReadStream(file)\r\n                .pipe(EventStream.split())\r\n                .pipe(EventStream.mapSync(\r\n                    function (line) {\r\n                        stream.pause();\r\n\r\n                        lines.push(line);\r\n\r\n                        stream.resume();\r\n                    })\r\n                    .on('error', function () {\r\n                        reject('Read file error.');\r\n                    })\r\n                    .on('end', function () {\r\n                        resolve(lines.join(''));\r\n                    })\r\n                );\r\n        });\r\n    }\r\n    ReadFileAsBase64Async(file: string): Promise<string> {\r\n        let self = this;\r\n        let fullPath = this.NormalizePath(file.toString());\r\n        console.log('Full path: ' + fullPath);\r\n        return new Promise(function (resolve, reject) {\r\n            if (!self.Exist(fullPath))\r\n                reject(new Error(`File doesn't exist.' + fullPath`));\r\n\r\n            console.log('File to open ' + fullPath);\r\n\r\n            let data = fs.readFileSync(fullPath, 'base64');\r\n            let buffer = new Buffer(data, 'base64');\r\n            let base64Data = buffer.toString('base64');\r\n            resolve(base64Data);\r\n        });\r\n    }\r\n    ReadFileAsBase64(file: string): string {\r\n        let self = this;\r\n        let fullPath = this.NormalizePath(file.toString());\r\n        if (!self.Exist(fullPath))\r\n            throw Error(`File doesn't exist.${fullPath}`);\r\n\r\n        let data = fs.readFileSync(fullPath, 'base64');\r\n        let buffer = new Buffer(data, 'base64');\r\n        let base64Data = buffer.toString('base64');\r\n        return base64Data;\r\n\r\n    }\r\n    ReadFileStream(file: string): any {\r\n        return fs.createReadStream(file);\r\n    }\r\n\r\n    WriteFileAsync(file: string, data: any): Promise<any> {\r\n        console.log('Write data to file.');\r\n        //console.log(file);\r\n        //console.log(data);\r\n        let self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            fs.writeFile(file, data, (error) => {\r\n                if (error)\r\n                    reject(error);\r\n\r\n                resolve(true);\r\n            });\r\n        });\r\n    }\r\n    GetMimeType(file: string): string {\r\n        try {\r\n            return Mime.lookup(file);\r\n        } catch (error) {\r\n            console.log('Get MIME error: ' + error);\r\n        }\r\n    }\r\n    GetFilename(file: string): string {\r\n        try {\r\n            return Path.basename(file);\r\n        } catch (error) {\r\n            console.log('Get file name error: ' + error);\r\n        }\r\n    }\r\n    GetFilenameWithoutExtension(file: string): string {\r\n        let filename = this.GetFilename(file);\r\n        return Path.parse(filename).name;\r\n    }\r\n    GetFileSize(file: string): number {\r\n        let stats = fs.statSync(file);\r\n        return stats['size'];\r\n    }\r\n    GetFileSizeString(file: string): string {\r\n        try {\r\n            let size = this.GetFileSize(file);\r\n            let sizeString = FileSize(size);\r\n            return sizeString;\r\n        } catch (error) {\r\n            console.log('Get file name error: ' + error);\r\n        }\r\n    }\r\n    ConverToFileSizeString(size: number): string {\r\n        return FileSize(size);\r\n    }\r\n    Encrypt(value: string): string {\r\n        if (!value)\r\n            return '';\r\n        let cipher = Crypts.createCipher(this.algorithm, this.password);\r\n        let crypted = cipher.update(value, 'utf8', 'hex');\r\n        crypted += cipher.final('hex');\r\n        return crypted;\r\n    }\r\n    Decrypt(value: string): string {\r\n        if (!value)\r\n            return '';\r\n        let decipher = Crypts.createDecipher(this.algorithm, this.password)\r\n        let dec = decipher.update(value, 'hex', 'utf8')\r\n        dec += decipher.final('utf8');\r\n        return dec;\r\n    }\r\n\r\n    Exist(path: string): boolean {\r\n        try {\r\n            fs.accessSync(path, fs.F_OK);\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    EnsureFolderExist(path: string): void {\r\n        if (!this.Exist(path)) {\r\n            try {\r\n                fs.mkdirSync(path);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    CombinePath(base: string, paths: string): string {\r\n        let value: string;\r\n        try {\r\n            value = NjPath.join(base, paths);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        return value;\r\n    }\r\n    NormalizePath(path: string): string {\r\n        return NjPath.normalize(path);\r\n    }\r\n\r\n    CreateGuidString(): string {\r\n        let guid = Common.Guid.New();\r\n        return guid.Value;\r\n    }\r\n    CreateGuid(): Common.Guid {\r\n        return Common.Guid.New();\r\n    }\r\n}","\r\nimport { IServiceProvider } from './IServiceProvider';\r\nimport { Injectable, Injector } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AngularServiceProvider implements IServiceProvider {\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(private injector: Injector) {\r\n\r\n    }\r\n    /**\r\n     * Gets the service object of the specified type.\r\n     */\r\n    GetService(type: any): any {\r\n        return this.injector.get(type);\r\n    }\r\n\r\n}","import { Injector, Type, InjectionToken, Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ServiceLocator {\r\n    \r\n    private static currentProvider: Injector = undefined;\r\n\r\n    static SetLocatorProvider(provider: () => Injector): void {\r\n        ServiceLocator.currentProvider = provider();\r\n    }\r\n\r\n    static GetService<T>(token: Type<T> | InjectionToken<T>): T {\r\n        return ServiceLocator.currentProvider.get(token);\r\n    }\r\n\r\n}","\r\ninterface String {\r\n    ToLower: () => string;\r\n    ToUpper: () => string;\r\n    Trim: () => string;\r\n    Normalize: () => string;\r\n    StartsWith: (part: string) => boolean;\r\n    EndsWith: (part: string) => boolean;\r\n    CapFirst: () => string;\r\n    CapWords: () => string;\r\n    TruncateWords: (number: number) => string;\r\n    Contains: (value: string) => boolean;\r\n    Slugify: (lower?: boolean) => string;\r\n    StripHtml: () => string;\r\n    EscapeHtml: () => string;\r\n    CountWord: () => number;\r\n    HtmlToText: () => string;\r\n    ValidateEmail: () => boolean;\r\n    IndexOf: (value: string) => number;\r\n    LastIndexOf: (value: string) => number;\r\n    SubString: (start: number, length: number) => string;\r\n}\r\ninterface StringConstructor {\r\n    IsNullOrEmpty: (value: any) => boolean;\r\n    IsValid: (value: any) => boolean;\r\n    Empty: () => string;\r\n}\r\n\r\n\r\nString.prototype.ToLower = function (): string {\r\n    return this.toLowerCase();\r\n};\r\nString.prototype.ToUpper = function (): string {\r\n    return this.toUpperCase();\r\n};\r\nString.prototype.Trim = function (): string {\r\n    return this.replace(/^\\s+|\\s+$/g, '');\r\n};\r\nString.prototype.Normalize = function (): string {\r\n    return this.replace(/^\\s*|\\s(?=\\s)|\\s*$/g, '');\r\n};\r\nString.prototype.StartsWith = function (part: string): boolean {\r\n    return this.slice(0, part.length) === part;\r\n};\r\nString.prototype.EndsWith = function (part: string): boolean {\r\n    return this.slice(part.length) === part;\r\n};\r\nString.prototype.CapFirst = function (): string {\r\n    if (this.length === 1) {\r\n        return this.toUpperCase();\r\n    } else if (this.length > 0) {\r\n        let regex: RegExp = /^(\\(|\\[|'|')/;\r\n        if (regex.test(this)) {\r\n            return this.substring(0, 2).toUpperCase() + this.substring(2);\r\n        } else {\r\n            return this.substring(0, 1).toUpperCase() + this.substring(1);\r\n        }\r\n    }\r\n    return null;\r\n};\r\nString.prototype.CapWords = function (): string {\r\n    let regexp: RegExp = /\\s/;\r\n    let words = this.split(regexp);\r\n    if (words.length === 1) {\r\n        return words[0].capFirst();\r\n    } else if (words.length > 1) {\r\n        let result = '';\r\n        for (let i = 0; i < words.length; i++) {\r\n            if (words[i].capFirst() !== null) {\r\n                result += words[i].capFirst() + ' ';\r\n            }\r\n        }\r\n        result.trim();\r\n        return result;\r\n    }\r\n    return null;\r\n};\r\nString.prototype.TruncateWords = function (num: number): string {\r\n    let words: Array<string> = this.split(/\\s+/);\r\n    if (words.length > num) {\r\n        return words.slice(0, num).join(' ');\r\n    }\r\n    return words.join(' ');\r\n};\r\nString.prototype.StripHtml = function (): string {\r\n    let content: string = this.replace(/<[\\/]?([^> ]+)[^>]*>/g, '');\r\n    content = content.replace(/<style[^>]*>[\\s\\S]*?<\\/style>/ig, '');\r\n    content = content.replace(/<script[^>]*>[\\s\\S]*?<\\/script>/ig, '');\r\n    content = content.replace(/<!--[\\s\\S]*?-->/g, '');\r\n    content = content.replace('&nbsp;', ' ');\r\n    content = content.replace('&amp;', '&');\r\n    return content;\r\n};\r\nString.prototype.EscapeHtml = function (): string {\r\n    let content: string = this.replace(/'/g, '&quot;');\r\n    content.replace(/&(?!\\w+;)/g, '&amp;');\r\n    content.replace(/>/g, '&gt;');\r\n    content.replace(/</g, '&lt;');\r\n    return content;\r\n};\r\nString.prototype.Contains = function (val: string): boolean {\r\n    if (this.indexOf(val) !== -1) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nString.prototype.Slugify = function (lower: boolean = true): string {\r\n    if (!lower) {\r\n        return this.lower().normalize().replace(/[^a-z0-9]/gi, '-');\r\n    }\r\n    return this.normalize().replace(/[^a-z0-9]/gi, '-');\r\n};\r\nString.prototype.HtmlToText = function (): string {\r\n    const output = this.replace(/<[^>]*>?/g, '');\r\n    return output;\r\n}\r\nString.prototype.CountWord = function (): number {\r\n    let content = this;\r\n    if (!content)\r\n        return 0;\r\n    let words = '', symbols = '';\r\n    content.replace(/([\\w\\s]*)([^\\w;,.''{}\\[\\]+_)(*&\\^%$#@!~\\/?]*)/g, (a, b, c): string => {\r\n        words += b;\r\n        symbols += c;\r\n\r\n        return a;\r\n    });\r\n\r\n    let count = words.trim().split(' ').length;\r\n    if (symbols)\r\n        count += symbols.replace(' ', '').split('').length;\r\n\r\n    return count;\r\n}\r\nString.prototype.ValidateEmail = function (): boolean {\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(this);\r\n}\r\nString.prototype.IndexOf = function (value: string): number {\r\n    return this.indexOf(value);\r\n}\r\nString.prototype.LastIndexOf = function (value: string): number {\r\n    return this.lastIndexOf(value);\r\n}\r\nString.prototype.SubString = function (start: number, length: number): string {\r\n    return this.substring(start, length);\r\n}\r\n\r\nString.IsNullOrEmpty = function (value: any): boolean {\r\n    if (value === undefined || value === null) {\r\n        return true;\r\n    }\r\n    let text = value.toString();\r\n    if (text === '') {\r\n        return true;\r\n    }\r\n    if (text && text.trim() === '') {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nString.IsValid = function (value: any): boolean {\r\n    return !String.IsNullOrEmpty(value);\r\n}\r\nString.Empty = function (): string {\r\n    return '';\r\n}\r\n\r\n\r\n","\r\n\r\ninterface Array<T> {\r\n    Add: (item: T) => void;\r\n    Empty: () => Array<any>;\r\n    IsEmpty: () => boolean;\r\n    Any: (predicate?: (source: T) => boolean) => boolean;\r\n    Count: () => number;\r\n    Max: () => number;\r\n    Min: () => number;\r\n    OrderBy: (keySelector: (source: T) => any) => Array<T>;\r\n    OrderByDescending: (keySelector: (source: T) => any) => Array<T>;\r\n    Where: (predicate: (source: T) => boolean) => Array<T>;\r\n    Select: <TResult>(selector: (source: T) => TResult) => Array<TResult>;\r\n    ElementAt: (index: number) => any;\r\n    FirstOrDefault: (predicate?: (source: T) => boolean) => T;\r\n    ForEach: (callback: Function) => void;\r\n    Remove: (item: any) => any;\r\n    Contains: (partial: string, strict: boolean) => boolean;\r\n    IndexOfPartial: (partial: string) => number;\r\n    ToObjectArray: (objName: string) => Array<any>;\r\n}\r\n\r\n\r\nArray.prototype.Add = function (item: any): void {\r\n    this.push(item);\r\n};\r\nArray.prototype.Empty = function (): Array<any> {\r\n    return this.splice(0, this.length);\r\n};\r\nArray.prototype.IsEmpty = function (): boolean {\r\n    if (this.length === 0) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nArray.prototype.ElementAt = function (index: number): any {\r\n    return this[index];\r\n};\r\nArray.prototype.FirstOrDefault = function (predicate?: (source: any) => boolean): any {\r\n    let result = null;\r\n\r\n    if (predicate) {\r\n        for (let item of this) {\r\n            if (predicate(item)) {\r\n                result = item;\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        result = this[0];\r\n    }\r\n\r\n    return result;\r\n};\r\nArray.prototype.Max = function (): number {\r\n    let max = this.reduce(function (a, b) {\r\n        return Math.max(a, b);\r\n    });\r\n    return max;\r\n};\r\nArray.prototype.Min = function (): number {\r\n    let min = this.reduce(function (a, b) {\r\n        return Math.min(a, b);\r\n    });\r\n    return min;\r\n};\r\nArray.prototype.Count = function (): number {\r\n    return this.length;\r\n};\r\nArray.prototype.Any = function (predicate?: (source: any) => boolean): boolean {\r\n    if (predicate) {\r\n        for (let item of this) {\r\n            if (predicate(item))\r\n                return true;\r\n        }\r\n        return false;\r\n    } else {\r\n        if (this.length === 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n};\r\nArray.prototype.Where = function (predicate: (source: any) => boolean): Array<any> {\r\n    return this.filter(x => {\r\n        return predicate(x);\r\n    });\r\n};\r\nArray.prototype.Select = function <TResult> (selector: (source: any) => TResult): Array<TResult> {\r\n    let result = [];\r\n    for (let item of this) {\r\n        result.push(selector(item));\r\n    }\r\n    return result;\r\n};\r\nArray.prototype.OrderBy = function (keySelector: (source: any) => any): Array<any> {\r\n    return this.sort(function (a, b) {\r\n        return keySelector(a) > keySelector(b);\r\n    });\r\n};\r\nArray.prototype.OrderByDescending = function (keySelector: (source: any) => any): Array<any> {\r\n    return this.sort(function (a, b) {\r\n        return keySelector(b) - keySelector(a);\r\n    });\r\n};\r\nArray.prototype.ForEach = function (callback: Function): void {\r\n    for (let i = 0; i < this.length; i++) {\r\n        callback(i, this[i]);\r\n    }\r\n};\r\nArray.prototype.Remove = function (item: any): any {\r\n    let index = this.indexOf(item);\r\n    if (index !== -1) {\r\n        return this.splice(index, 1);\r\n    }\r\n    return null;\r\n};\r\nArray.prototype.Contains = function (partial: string, strict: boolean): boolean {\r\n    for (let i = 0; i < this.length; i++) {\r\n        if (!strict && this[i].contains(partial)) {\r\n            return true;\r\n        }\r\n        if (strict && this[i] === partial) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nArray.prototype.IndexOfPartial = function (partial: string) {\r\n    for (let i = 0; i < this.length; i++) {\r\n        if (this[i].contains(partial)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n};\r\n/*\r\n * There are frameworks that auto-generate JSON based on data schemas, but sometimes they\r\n * return data in inconsistent ways. For example, an array of strings might be returned\r\n * instead of an array of objects containing strings, etc. because the underlying data at the time\r\n * only cotains the string value, but when other data is present (in the database, etc.),\r\n * it will return the object array. Certain convenience methods are necessary to force proper formatting.\r\n */\r\n\r\nArray.prototype.ToObjectArray = function (objName: string): Array<any> {\r\n    if (objName === undefined || objName === null) {\r\n        throw new Error('Error: Property name must be provided for conversion.');\r\n    }\r\n    let items: any = this;\r\n    if (typeof (items[0]) === 'string' || typeof (items[0]) === 'number' || typeof (items[0]) === 'boolean') {\r\n        for (let i = 0; i < items.length; i++) {\r\n            let val: any = items[i];\r\n            items[i] = {};\r\n            items[i][objName] = val;\r\n        }\r\n        return items;\r\n    } else {\r\n        return this;\r\n    }\r\n};\r\n","interface Document {\r\n    SelectOne: (selector: string) => Element;\r\n    SelectAll: (selector: string) => NodeListOf<Element>;\r\n    Create: (html: string) => Element;\r\n}\r\n\r\ninterface NodeList {\r\n    ForEach: (callback: Function) => void;\r\n    Last: () => Element;\r\n}\r\n\r\ninterface Element {\r\n    Attribute: (name: string, value?: string) => string & Element;\r\n    Parent: () => Element;\r\n    First: (selector: string) => Element;\r\n    Append: (html: string) => Element;\r\n    Empty: () => Element;\r\n    Drop: () => Element;\r\n    RemoveEvent: (event: string) => Element;\r\n    AddEvent: (event: string, callback: Function, overwrite?: boolean) => Element;\r\n    Show: (t?: string) => Element;\r\n    Hide: () => Element;\r\n    Toggle: () => Element;\r\n    AddClass: (className: string) => Element;\r\n    RemoveClass: (className: string) => Element;\r\n    AsString: () => string;\r\n    SelectOne: (selector: string) => Element;\r\n    SelectAll: (selector: string) => NodeListOf<Element>;\r\n    HasMatches: (selector: string) => boolean;\r\n    Up: (selector: string) => Element;\r\n    IsHidden: () => Boolean;\r\n}\r\n\r\ninterface HTMLElement {\r\n    Clean: () => HTMLElement;\r\n    Value: (val?: string) => string;\r\n}\r\n\r\n\r\n\r\nDocument.prototype.SelectOne = function (selector: string): Element {\r\n    return document.querySelector(selector);\r\n};\r\n\r\nDocument.prototype.SelectAll = function (selector: string): NodeListOf<Element> {\r\n    return document.querySelectorAll(selector);\r\n};\r\n\r\nDocument.prototype.Create = function (html: string): Element {\r\n    let placeholder = document.createElement('div');\r\n    placeholder.innerHTML = html;\r\n    return <Element>placeholder.childNodes[0];\r\n};\r\n\r\nNodeList.prototype.ForEach = function (callback: Function): void {\r\n    for (let i = 0; i < this.length; i++) {\r\n        callback(i, this[i]);\r\n    }\r\n};\r\n\r\nNodeList.prototype.Last = function (): Element {\r\n    return this[this.length - 1];\r\n};\r\n\r\nElement.prototype.SelectOne = function (selector: string): Element {\r\n    return this.querySelector(selector);\r\n};\r\n\r\nElement.prototype.SelectAll = function (selector: string): NodeListOf<Element> {\r\n    return this.querySelectorAll(selector);\r\n};\r\n\r\nElement.prototype.Attribute = function (name: string, value?: string): string & Element {\r\n    if (value != null) {\r\n        this.setAttribute(name, value);\r\n        return this;\r\n    }\r\n    return this.getAttribute(name);\r\n};\r\n\r\nElement.prototype.Parent = function (): Element {\r\n    return this.parentNode;\r\n};\r\n\r\nElement.prototype.HasMatches = function (selector: string): boolean {\r\n    if ((<any>this).matches != null) {\r\n        return (<any>this).matches(selector);\r\n    } else if ((<any>this).msMatchesSelector != null) {\r\n        return (<any>this).msMatchesSelector(selector);\r\n    }\r\n    return false;\r\n};\r\n\r\nElement.prototype.Up = function (selector: string): Element {\r\n    let el: Element = this;\r\n    if ((<any>el).closest != null) {\r\n        return (<any>el).closest(selector);\r\n    } else {\r\n        while (el) {\r\n            if (el.HasMatches(selector)) {\r\n                return <Element>el;\r\n            }\r\n            el = el.parentElement;\r\n        }\r\n    }\r\n};\r\n\r\nElement.prototype.First = function (selector: string): Element {\r\n    function _decend(node: Element): Element {\r\n        let _currentNode = node;\r\n        let nodeList: NodeList = _currentNode.childNodes;\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            if (nodeList[i].nodeName.ToLower() === selector.ToLower()) {\r\n                return <Element>nodeList[i];\r\n            }\r\n        }\r\n        _decend(_currentNode);\r\n    }\r\n    return _decend(this);\r\n};\r\n\r\nElement.prototype.Append = function (html: string): Element {\r\n    this.insertAdjacentHTML('beforeend', html);\r\n    return this;\r\n};\r\n\r\nElement.prototype.Empty = function (): Element {\r\n    this.innerHTML = '';\r\n    return this;\r\n};\r\n\r\nElement.prototype.Drop = function (): Element {\r\n    let self = this;\r\n    let parent = self.parentNode;\r\n    parent.removeChild(self);\r\n    return self;\r\n};\r\n\r\nElement.prototype.RemoveEvent = function (event: string): Element {\r\n    let evt = this[`on${event}`] || this[`${event}`];\r\n    try {\r\n        this.removeEventListener(event, evt);\r\n    } catch (e) { }\r\n    try {\r\n        this.detachEvent(`on${event}`, evt);\r\n    } catch (e) { }\r\n    this[`on${event}`] = null;\r\n    this[`${event}`] = null;\r\n    return this;\r\n};\r\n\r\nElement.prototype.AddEvent = function (event: string, callback: Function, overwrite: boolean = false): Element {\r\n    if (overwrite) {\r\n        this[`on${event}`] = callback;\r\n    } else {\r\n        this.addEventListener(event, callback);\r\n    }\r\n    return this;\r\n};\r\n\r\nElement.prototype.Show = function (t: string = 'block'): Element {\r\n    let styles = this.attribute('style');\r\n    if (styles != null && styles !== '') {\r\n        return this.attribute('style', styles.setValueByKey('display', t));\r\n    }\r\n    return this.attribute('style', `display:${t}`);\r\n};\r\n\r\nElement.prototype.Hide = function (): Element {\r\n    let styles = this.attribute('style');\r\n    if (styles != null && styles !== '') {\r\n        return this.attribute('style', styles.setValueByKey('display', 'none'));\r\n    }\r\n    return this.attribute('style', `display:none;`);\r\n};\r\nElement.prototype.Toggle = function (): Element {\r\n    if (!(this.offsetWidth || this.offsetHeight || this.getClientRects().length)) {\r\n        return this.show();\r\n    } else {\r\n        return this.hide();\r\n    }\r\n};\r\n\r\nElement.prototype.AddClass = function (className: string): Element {\r\n    this.className += ` ${className}`;\r\n    this.className = this.className.trim();\r\n    return this;\r\n};\r\n\r\nElement.prototype.RemoveClass = function (className: string): Element {\r\n    this.className = (<string>this.className).replace(className, '').normalize();\r\n    return this;\r\n};\r\n\r\nElement.prototype.AsString = function (): string {\r\n    return this.outerHTML;\r\n};\r\n\r\nElement.prototype.IsHidden = function (): boolean {\r\n    return (this.offsetParent === null);\r\n};\r\n\r\nHTMLElement.prototype.Clean = function (): HTMLElement {\r\n    this.value = this.value.replace(/\\r?\\n/g, '\\r\\n');\r\n    return this;\r\n};\r\n\r\nHTMLElement.prototype.Value = function (val?: string): string {\r\n    if (val != null) {\r\n        if (this.nodeName.lower() === 'textarea') {\r\n            this.innerHTML = val;\r\n            try {\r\n                this.innerText = val;\r\n            } catch (e) { }\r\n            try {\r\n                this.value = val;\r\n            } catch (e) { }\r\n        } else if (this.nodeName.lower() === 'input') {\r\n            switch (this.attribute('type').lower()) {\r\n                case 'file':\r\n                    break;\r\n                case 'checkbox':\r\n                    if (<boolean><any>val) {\r\n                        this.checked = true;\r\n                    } else {\r\n                        this.checked = false;\r\n                    }\r\n                    break;\r\n                case 'radio':\r\n                    let name: string = this.attribute('name');\r\n                    let radios: NodeListOf<Element> = document.SelectAll(`input[type='radio'][name='${name}']`);\r\n                    radios.ForEach(function (idx, elem: Element) {\r\n                        if (elem.Attribute('value') === val) {\r\n                            (<HTMLInputElement>elem).checked = true;\r\n                        } else {\r\n                            (<HTMLInputElement>elem).checked = false;\r\n                        }\r\n                    });\r\n                    break;\r\n                default:\r\n                    this.value = val;\r\n                    break;\r\n            }\r\n        } else if (this.nodeName.lower() === 'select') {\r\n            for (let i = 0; i < this.options.length; i++) {\r\n                if (this.options[i].value === val) {\r\n                    this.selectedIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        if (this.nodeName.lower() === 'textarea') {\r\n            try {\r\n                return this.value;\r\n            } catch (e) { }\r\n            if (this.innerText != null && (<string>this.innerText).trim() !== '') {\r\n                return this.innerText;\r\n            } else if (this.innerHTML != null && (<string>this.innerHTML).trim() !== '') {\r\n                return this.innerHTML;\r\n            }\r\n            return null;\r\n        } else if (this.nodeName.lower() === 'input') {\r\n            switch (this.attribute('type').lower()) {\r\n                case 'checkbox':\r\n                    return this.checked;\r\n                case 'radio':\r\n                    let name: string = this.attribute('name');\r\n                    return (<HTMLInputElement>document.SelectOne(`input[type='radio'][name='${name}']:checked`)).value;\r\n                default:\r\n                    return this.value;\r\n            }\r\n        } else if (this.nodeName.lower() === 'select') {\r\n            return this.options[this.selectedIndex].value;\r\n        }\r\n    }\r\n    return val;\r\n};","\r\nexport function IsDefined(value: any): boolean {\r\n    return typeof value !== 'undefined' && value !== null;\r\n}\r\n\r\nexport function IsObject(item: any): boolean {\r\n    return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\nexport function MergeDeep(target: any, source: any): any {\r\n    target = JSON.parse(JSON.stringify(target));\r\n    source = JSON.parse(JSON.stringify(source));\r\n    let output = Object.assign({}, target);\r\n    if (IsObject(target) && IsObject(source)) {\r\n        Object.keys(source).forEach((key: any) => {\r\n            if (IsObject(source[key])) {\r\n                if (!(key in target)) {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                } else {\r\n                    output[key] = MergeDeep(target[key], source[key]);\r\n                }\r\n            } else {\r\n                Object.assign(output, { [key]: source[key] });\r\n            }\r\n        });\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Clone given object\r\n * @param source \r\n */\r\nexport function Clone(source: any): any {\r\n    if (!source) {\r\n        return source;\r\n    }\r\n    return JSON.parse(JSON.stringify(source));\r\n}\r\n/**\r\n * \r\n * @param source \r\n * @param target \r\n */\r\nexport function CompareProperties(source: any, target: any): boolean {\r\n    if (source === undefined && target === undefined) {\r\n        return true;\r\n    }\r\n    if (Object.prototype.toString.call(source) === '[object Array]') {\r\n        let arrayX = source as Array<any>;\r\n        let arrayY = target as Array<any>;\r\n        if (arrayX.length !== arrayY.length) {\r\n            return false;\r\n        }\r\n\r\n        for (let index = 0; index < arrayX.length; index++) {\r\n            console.log(arrayX[index]);\r\n            console.log(arrayY[index]);\r\n\r\n            if (CompareProperties(arrayX[index], arrayY[index] === false)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n    } else {\r\n        let names = Object.getOwnPropertyNames(source);\r\n        // console.log(names);\r\n        for (let name of names) {\r\n            let property = Object.getOwnPropertyDescriptor(target, name);\r\n            if (!property) {\r\n                return false;\r\n            } else {\r\n                if (Object.prototype.toString.call(source) === '[object Array]') {\r\n                    if (CompareProperties(property.value, source[name] === false)) {\r\n                        return false;\r\n                    }\r\n                } else if (property.value !== source[name] && property.value.toString() !== source[name].toString()) {\r\n                    // console.log(`Property ${name} ${typeof property.value}: '${property.value}', '${source[name]}'`);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}","\r\n/**\r\n * Delay give ms\r\n * @param elapse length of time\r\n */\r\nexport const Delay = function (elapse: number): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(function () {\r\n            resolve();\r\n        }, elapse);\r\n    });\r\n}","import { Action } from './Action';\r\nimport * as Collections from '../collections/index';\r\n\r\nimport { IAction } from './IAction';\r\n\r\nexport interface IActionRepository {\r\n    readonly Actions: Collections.List<IAction>;\r\n\r\n    Register(action: IAction): IActionRepository;\r\n    Find(expression: (action: IAction) => boolean): Collections.IEnumerable<IAction>;\r\n    FindOne(name: string): IAction;\r\n}\r\n\r\n\r\nexport class ActionRepository implements IActionRepository {\r\n    readonly Actions = new Collections.List<IAction>();\r\n\r\n    Register(action: IAction): ActionRepository {\r\n        if (action) {\r\n            this.Actions.Add(action);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    Find(expression: (action: IAction) => boolean): Collections.IEnumerable<IAction> {\r\n        return this.Actions.FindAll(expression);\r\n    }\r\n\r\n    FindOne(name: string): IAction {\r\n        return this.Actions.FirstOrDefault(x => x.Name === name);\r\n    }\r\n}","import { IAction } from './IAction';\r\n\r\nexport class Action implements IAction {\r\n    Name: string;\r\n    Group: string;\r\n    Tag: any;\r\n\r\n    constructor(private delegate: (args?: any) => void) { }\r\n\r\n    Invoke(args?: any): void {\r\n        if (this.delegate)\r\n            this.delegate(args);\r\n    }\r\n}","import { IMessageMediator } from './IMessageMediator';\r\nimport * as Actions from '../action/index';\r\nimport * as Collections from '../collections/index';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MessageMediator implements IMessageMediator {\r\n    private mediators = new Collections.Dictionary<string, Collections.Dictionary<string, Actions.IAction>>();\r\n\r\n    get Mediators(): Collections.Dictionary<string, Collections.Dictionary<string, Actions.IAction>> {\r\n        return this.mediators;\r\n    }\r\n\r\n    /**\r\n     * Register an event\r\n     */\r\n    RegisterHandler(topic: string, id: string, action: Actions.IAction): IMessageMediator {\r\n        let values = this.mediators.Item(topic);\r\n        if (values == null) {\r\n            values = new Collections.Dictionary<string, Actions.IAction>();\r\n            this.mediators.Add(topic, values);\r\n        }\r\n\r\n        values.Add(id, action);\r\n\r\n        return this;\r\n    }\r\n    /**\r\n     * Unregister an event \r\n     */\r\n    UnregisterHandler(topic: string, id: string): IMessageMediator {\r\n        let values = this.mediators.Item(topic);\r\n        if (values != null) {\r\n            values.Remove(id);\r\n            if (values.Count === 0) {\r\n                this.mediators.Remove(topic);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Trigger an event with given parameter\r\n     */\r\n    SendMessage(topic: string, param?: any): boolean;\r\n    SendMessage<T>(topic: string, message?: T): boolean {\r\n\r\n        let result = true;\r\n        let values = this.mediators.Item(topic);\r\n        if (values != null) {\r\n            for (let item of values.Values()) {\r\n                try {\r\n                    item.Invoke(message);\r\n                } catch (error) {\r\n                    result = false;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","import { Injectable, ViewContainerRef, ComponentFactoryResolver, ComponentRef, Type, InjectionToken } from '@angular/core';\r\nimport { IComponentCreator } from './IComponentCreator';\r\n\r\nexport const ComponentCreatorToken = new InjectionToken('./ICommponentCreator');\r\n\r\n@Injectable()\r\nexport class ComponentCreator implements IComponentCreator {\r\n\r\n    private mViewContainer: ViewContainerRef;\r\n    private mComponentFactoryResolver: ComponentFactoryResolver;\r\n\r\n    get ViewContainer(): ViewContainerRef {\r\n        return this.mViewContainer;\r\n    }\r\n    set ViewContainer(value: ViewContainerRef) {\r\n        this.mViewContainer = value;\r\n    }\r\n\r\n    get ComponentFactoryResolver(): ComponentFactoryResolver {\r\n        return this.mComponentFactoryResolver;\r\n    }\r\n    set ComponentFactoryResolver(value: ComponentFactoryResolver) {\r\n        this.mComponentFactoryResolver = value;\r\n    }\r\n\r\n    /**\r\n    * Initialize\r\n    */\r\n    Initialize(viewContainer: ViewContainerRef, resolver: ComponentFactoryResolver): void {\r\n        this.mViewContainer = viewContainer;\r\n        this.mComponentFactoryResolver = resolver;\r\n    }\r\n\r\n\r\n    CreateComponent(componentType: Type<{}>, viewContainer?: ViewContainerRef): ComponentRef<{}> {\r\n        try {\r\n            let factory = this.ComponentFactoryResolver.resolveComponentFactory(componentType);\r\n\r\n            let component = viewContainer ?\r\n                viewContainer.createComponent(factory) :\r\n                this.ViewContainer.createComponent(factory);\r\n\r\n            return component;\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","\r\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { HttpModule, JsonpModule } from '@angular/http';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport * as Common from './components';\r\n\r\nconst components = [\r\n\r\n];\r\n\r\nconst directives = [\r\n    Common.InvokeCommandDirective\r\n];\r\n\r\nconst providers = [\r\n    Common.DefaultLoggerFactory,\r\n    Common.HttpClient,\r\n    Common.LoggingExceptionHandler,\r\n    Common.CommandRepository,\r\n    Common.CommandDescriptorRepository,\r\n    Common.ElectronUtil,\r\n    Common.AngularServiceProvider,\r\n    Common.ServiceLocator,\r\n    Common.MessageMediator,\r\n    Common.ComponentCreator,\r\n    Common.OptionRepository,\r\n\r\n    { provide: Common.ActionRepositoryToken, useClass: Common.ActionRepository },\r\n    { provide: Common.CommandRepositoryToken, useClass: Common.CommandRepository },\r\n    { provide: Common.CommandDescriptorRepositoryToken, useClass: Common.CommandDescriptorRepository },\r\n    { provide: Common.ExceptionHandlerToken, useClass: Common.LoggingExceptionHandler },\r\n    { provide: Common.LoggerFactoryToken, useClass: Common.DefaultLoggerFactory },\r\n    { provide: Common.MessageMediatorToken, useClass: Common.MessageMediator },\r\n    { provide: Common.ComponentCreatorToken, useClass: Common.ComponentCreator },\r\n    { provide: Common.OptionRepositoryToken, useClass: Common.OptionRepository },\r\n    { provide: Common.WindowSizeWatcherToken, useClass: Common.WindowSizeWatcher }\r\n];\r\n\r\nconst exportItems = [];\r\n\r\n@NgModule({\r\n    declarations: [directives, components],\r\n    imports: [CommonModule, HttpModule, JsonpModule],\r\n    providers: providers,\r\n    exports: [directives, exportItems]\r\n})\r\nexport class SystemModule {\r\n\r\n    // constructor(@Optional() @SkipSelf() parentModule: SystemModule) {\r\n    //     if (parentModule) {\r\n    //         throw new Error('SystemModule is already loaded. Import it in the AppModule only');\r\n    //     }\r\n    // }\r\n}"],"names":["Common.StringBuilder","Collections.NamedDictionary","Collections.Dictionary","Collections.Enumerable","Collections.List","IO.Directory","ExceptionHandling.LoggingExceptionHandler","Logging.DefaultLoggerFactory","Common.Guid","Common.InvokeCommandDirective","Common.DefaultLoggerFactory","Common.HttpClient","Common.LoggingExceptionHandler","Common.CommandRepository","Common.CommandDescriptorRepository","Common.ElectronUtil","Common.AngularServiceProvider","Common.ServiceLocator","Common.MessageMediator","Common.ComponentCreator","Common.OptionRepository","Common.ActionRepositoryToken","Common.ActionRepository","Common.CommandRepositoryToken","Common.CommandDescriptorRepositoryToken","Common.ExceptionHandlerToken","Common.LoggerFactoryToken","Common.MessageMediatorToken","Common.ComponentCreatorToken","Common.OptionRepositoryToken","Common.WindowSizeWatcherToken","Common.WindowSizeWatcher"],"mappings":"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"}
